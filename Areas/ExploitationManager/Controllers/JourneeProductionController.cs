using DevExtreme.AspNet.Data;
using DevExtreme.AspNet.Mvc;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.ModelBinding;
using Microsoft.EntityFrameworkCore;
using Newtonsoft.Json;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Threading.Tasks;
using DevKbfSteel.Entities;
using Microsoft.AspNetCore.Authorization;
using DevKbfSteel.Helpers;
using DevKbfSteel.Models;
using DevExtreme;

namespace DevKbfSteel.Controllers
{
    [Route("api/[controller]/[action]")]
    [Authorize(Roles = "ExploitationManager")]

    public class JourneeProductionController : Controller
    {
        private KBFsteelContext _context;
        public JourneeProductionController(KBFsteelContext context) {
            _context = context;
        }
        [HttpGet]
        public async Task<IActionResult> Get(DateTime dateDebut, DateTime dateFin, DataSourceLoadOptions loadOptions) {
            var journeeproduction = _context.JourneeProduction.Where(c => c.Date >= dateDebut && c.Date <= dateFin)
                .Select(i => new {
                i.NumRapport,
                i.NumRapportPreparation,
                i.Date,
                i.Poste,
                i.NumBon,
                i.OperateurPcp,
                i.ChefPoste,
                i.IngProcess,
                i.DimProduitFini,
                i.DimProduitConforme,
                i.DimBillete,
                i.LongBillete,
                i.Note
            });

            // If you work with a large amount of data, consider specifying the PaginateViaPrimaryKey and PrimaryKey properties.
            // In this case, keys and data are loaded in separate queries. This can make the SQL execution plan more efficient.
            // Refer to the topic https://github.com/DevExpress/DevExtreme.AspNet.Data/issues/336.
            // loadOptions.PrimaryKey = new[] { "NumRapport" };
            // loadOptions.PaginateViaPrimaryKey = true;

            return Json(await DataSourceLoader.LoadAsync(journeeproduction, loadOptions));
        }
        [HttpGet]
        public async Task<IActionResult> GetCalibres(int id, DataSourceLoadOptions loadOptions)
        {
            var journeeproduction = _context.ProdPreparationCalibre.Where(c => c.NumRapport== id)
                .Select(i => new {
                    i.Id,
                    i.NumRapport,
                    i.CodeMachine,
                    i.NumCalibre
                });

            // If you work with a large amount of data, consider specifying the PaginateViaPrimaryKey and PrimaryKey properties.
            // In this case, keys and data are loaded in separate queries. This can make the SQL execution plan more efficient.
            // Refer to the topic https://github.com/DevExpress/DevExtreme.AspNet.Data/issues/336.
            // loadOptions.PrimaryKey = new[] { "NumRapport" };
            // loadOptions.PaginateViaPrimaryKey = true;

            return Json(await DataSourceLoader.LoadAsync(journeeproduction, loadOptions));
        }
        [HttpGet]
        public async Task<IActionResult> GetCylindres(int id,DateTime dateJournee, DataSourceLoadOptions loadOptions)
        {
            XpertHelper.dateJourneeCylindre = dateJournee;
            var journeeproduction = _context.ProdPreparationCylindre.Where(c => c.NumRapport == id)
                .Select(i => new {
                    i.Id,
                    i.RefAncienCylindre,
                    i.RefNouveauCylindre,
                    i.NumRapport,
                    i.CodeMachine,
                    i.AncienDiametre,
                    i.NouveauDiametre
                });

            // If you work with a large amount of data, consider specifying the PaginateViaPrimaryKey and PrimaryKey properties.
            // In this case, keys and data are loaded in separate queries. This can make the SQL execution plan more efficient.
            // Refer to the topic https://github.com/DevExpress/DevExtreme.AspNet.Data/issues/336.
            // loadOptions.PrimaryKey = new[] { "NumRapport" };
            // loadOptions.PaginateViaPrimaryKey = true;
            return Json(await DataSourceLoader.LoadAsync(journeeproduction, loadOptions));
        }
        [HttpGet]
        public async Task<IActionResult> GetParametres(int id, DataSourceLoadOptions loadOptions)
        {
            var journeeproduction = _context.JourneeProduction.Where(c => c.NumRapport == id)
                .Select(i => new {
                    i.NumRapport
                });;

            // If you work with a large amount of data, consider specifying the PaginateViaPrimaryKey and PrimaryKey properties.
            // In this case, keys and data are loaded in separate queries. This can make the SQL execution plan more efficient.
            // Refer to the topic https://github.com/DevExpress/DevExtreme.AspNet.Data/issues/336.
            // loadOptions.PrimaryKey = new[] { "NumRapport" };
            // loadOptions.PaginateViaPrimaryKey = true;

            return Json(await DataSourceLoader.LoadAsync(journeeproduction, loadOptions));
        }
        [HttpGet]
        public async Task<IActionResult> GetD(int id, DataSourceLoadOptions loadOptions)
        {
            var journeeproduction = _context.JourneeProduction.Where(c => c.NumRapport == id)
                .Select(i => new {
                    i.NumRapport,
                    i.NbrFardeaux,
                    i.Date,
                    i.Poste,
                    i.NumBon,
                    i.OperateurPcp,
                    i.ChefPoste,
                    i.IngProcess,
                    i.DimProduitFini,
                    i.DimProduitConforme,
                    i.DimBillete,
                    i.LongBillete,
                    i.NbrRealisee,
                    i.NbrExpulsee,
                    i.NbrDefourne,
                    i.NbrCisaille
                });

            // If you work with a large amount of data, consider specifying the PaginateViaPrimaryKey and PrimaryKey properties.
            // In this case, keys and data are loaded in separate queries. This can make the SQL execution plan more efficient.
            // Refer to the topic https://github.com/DevExpress/DevExtreme.AspNet.Data/issues/336.
            // loadOptions.PrimaryKey = new[] { "NumRapport" };
            // loadOptions.PaginateViaPrimaryKey = true;

            return Json(await DataSourceLoader.LoadAsync(journeeproduction, loadOptions));
        }
        [HttpPost]
        public async Task<IActionResult> Post(string values) {
            var model = new JourneeProduction();
            var valuesDict = JsonConvert.DeserializeObject<IDictionary>(values);
            PopulateModel(model, valuesDict);

            if(!TryValidateModel(model))
                return BadRequest(GetFullErrorMessage(ModelState));

            var journeeProduction = _context.JourneeProduction
            .OrderBy(o => o.NumRapport)
            .Select(i => new
            {
                i.NumRapport
            }).ToList();

            if (journeeProduction.Count == 0)
                model.NumRapport = 1;
            else
            {
                var m = journeeProduction.Last();
                model.NumRapport = Convert.ToInt32(m.NumRapport) + 1;
            }
 
            var result = _context.JourneeProduction.Add(model);


            await _context.SaveChangesAsync();
            return Json(result.Entity.NumRapport);
        }
        [HttpPost]
        public async Task<IActionResult> PostCylindres(string values)
        {
            var model = new ProdPreparationCylindre();
            var valuesDict = JsonConvert.DeserializeObject<IDictionary>(values);
            PopulateModelCylindre(model, valuesDict);

            if (!TryValidateModel(model))
                return BadRequest(GetFullErrorMessage(ModelState));
            var prodPreparationCylindre = _context.ProdPreparationCylindre
            .OrderBy(o => o.Id)
            .Select(i => new
            {
                i.Id
            }).ToList();

            if (prodPreparationCylindre.Count == 0)
                model.Id = 1;
            else
            {
                var m = prodPreparationCylindre.Last();
                model.Id = Convert.ToInt32(m.Id) + 1;

            }
            var result = _context.ProdPreparationCylindre.Add(model);

            //Add To : Prod_PreProccessing_Cylindres
            var modelPreProccessing = new ProdPreProccessingCylindresUsinage();
            var prodPreProccessingCylindresUsinage = _context.ProdPreProccessingCylindresUsinage.AsNoTracking()
            .Select(i => new
            {
                i.Id
            }).ToList();
            if (prodPreProccessingCylindresUsinage.Count == 0)
                modelPreProccessing.Id = 1;
            else
            {
                var m = prodPreProccessingCylindresUsinage.Last();
                modelPreProccessing.Id = Convert.ToInt32(m.Id) + 1;

            }
            modelPreProccessing.DiametreAtteint = model.AncienDiametre;
            modelPreProccessing.RefCylindre = model.RefAncienCylindre;
            modelPreProccessing.DateChangement = XpertHelper.dateJourneeCylindre;
            modelPreProccessing.EtatPreProcessing = 1;//En Attente
            var resultmodelPreProccessing = _context.ProdPreProccessingCylindresUsinage.Add(modelPreProccessing);
            //AutoGenerate DT
            /*
            DemandeTravail demandeTravail = new DemandeTravail();
            var dts = _context.DemandeTravail.AsNoTracking()
                .Select(i => new
                {
                    i.NumDt
                }).ToList();
            if (dts.Count == 0)
                demandeTravail.NumDt = 1;
            else
            {
                var m = dts.Last();
                demandeTravail.NumDt = Convert.ToInt32(m.NumDt) + 1;

            }
            demandeTravail.DateDt = XpertHelper.dateJourneeCylindre;
            demandeTravail.CodeStructure = XpertHelper.CodeExploitation;
            demandeTravail.CodeReceveur = XpertHelper.CodeUsinage;
            demandeTravail.RefMachine = model.RefAncienCylindre.ToString();
            demandeTravail.TravailDemandee = "Réctification du Cylindre"+ model.RefAncienCylindre;
            demandeTravail.Journee = Convert.ToBoolean(0);
            demandeTravail.Semaine = Convert.ToBoolean(1);
            demandeTravail.CodeArret = Convert.ToBoolean(1);
            demandeTravail.CodeUrgence = Convert.ToBoolean(0);
            demandeTravail.IsMachine = Convert.ToBoolean(1);
            demandeTravail.CodeStatut = 1;//En Attente
            _context.DemandeTravail.Add(demandeTravail);
            await _context.SaveChangesAsync();

            DemandeTravail demandeTravailMecanique = new DemandeTravail();
            demandeTravailMecanique = demandeTravail;
            demandeTravailMecanique.NumDt = demandeTravail.NumDt+1;
            var machine = _context.Machines.AsNoTracking()
            .Where(o => o.NumMachine == model.CodeMachine)
            .Select(i => new
            {
                i.NomMachine
            }).ToList().Last();
            demandeTravailMecanique.TravailDemandee = "Changement du cylindre " + model.RefAncienCylindre+" pour la "+ machine.NomMachine;
            demandeTravailMecanique.CodeReceveur = XpertHelper.CodeMecanqiue;

            _context.DemandeTravail.Add(demandeTravailMecanique);
            */
            await _context.SaveChangesAsync();

            return Json(result.Entity.Id);
        }
        [HttpPost]
        public async Task<IActionResult> PostCalibres(string values)
        {
            var model = new ProdPreparationCalibre();
            var valuesDict = JsonConvert.DeserializeObject<IDictionary>(values);
            PopulateModelCalibres(model, valuesDict);

            if (!TryValidateModel(model))
                return BadRequest(GetFullErrorMessage(ModelState));
            var prodPreparationCalibre = _context.ProdPreparationCalibre
            .OrderBy(o => o.Id)
            .Select(i => new
            {
                i.Id
            }).ToList();

            if (prodPreparationCalibre.Count == 0)
                model.Id = 1;
            else
            {
                var m = prodPreparationCalibre.Last();
                model.Id = Convert.ToInt32(m.Id) + 1;
            }
            var result = _context.ProdPreparationCalibre.Add(model);
            await _context.SaveChangesAsync();

            return Json(result.Entity.Id);
        }

        [HttpPut]
        public async Task<IActionResult> PutMain(int key, string values)
        {
            var model = await _context.JourneeProduction.FirstOrDefaultAsync(item => item.NumRapport == key);
            if (model == null)
                return StatusCode(409, "Object not found");

            var valuesDict = JsonConvert.DeserializeObject<IDictionary>(values);
            PopulateModel(model, valuesDict);
            await _context.SaveChangesAsync();
            return Ok();
        }
        [HttpPut]
        public async Task<IActionResult> Put(int key, string values) {
            var model = await _context.JourneeProduction.FirstOrDefaultAsync(item => item.NumRapport == key);
            JourneeProduction oldModel = new JourneeProduction();
            oldModel.NbrRealisee = model.NbrRealisee;
            oldModel.NbrFardeaux = model.NbrFardeaux;
            oldModel.NbrCisaille = model.NbrCisaille;
            oldModel.NbrExpulsee = model.NbrExpulsee;
            oldModel.DimBillete = model.DimBillete;
            if (model == null)
                return StatusCode(409, "Object not found");

            var valuesDict = JsonConvert.DeserializeObject<IDictionary>(values);
            PopulateModel(model, valuesDict);

            if(!TryValidateModel(model))
                return BadRequest(GetFullErrorMessage(ModelState));

            await _context.SaveChangesAsync();
            if(model.NbrRealisee != null)
            {
                var NbrPostes = 0;
                // working the tonnagesCage only when we are in the last post
                //getting the lat day of date journées
                var LastId = _context.JourneeProduction
                    .Where(c=> c.Date ==  model.Date)
                .Select(i => new {
                    i.NumRapportPreparation,
                    i.Poste
                }).ToList();

                //Compute tonnage en tant que poste 2 
                // in case there is a poste 3 we recompute the tonnage and thats all 
                //if (model.Poste == 3|| model.Poste == 2)
                {
                    // Getting the tonnage Id for adding and date for updating
                    var tonnage = new ProdTonnagesCages();
                    var TonnagesList = _context.ProdTonnagesCages
                        .Select(i => new
                        {
                            i.Id,
                            i.DateJournee,
                            i.Cage01,
                            i.Cage02,
                            i.Cage03,
                            i.Cage04,
                            i.Cage05,
                            i.Cage06,
                            i.Cage07,
                            i.Cage08,
                            i.Cage09,
                            i.Cage10,
                            i.Cage11,
                            i.Cage12,
                            i.Cage13
                        }).ToList();
                    //If it is the first row
                    if (TonnagesList.Count == 0)
                    {
                        tonnage.Id = 1;
                        var productionJ = _context.JourneeProduction
                            .Where(c => c.Date == model.Date)
                            .Select(i => new
                            {
                                i.DimBillete,
                                i.NbrRealisee
                            }).ToList();

                        var t = productionJ.Last();
                        double total = 0;
                        double fact = 0;

                        foreach (var item in productionJ)
                        {
                            //En cas il yas de changement de billete entre les posts dans la meme journee
                            if (Convert.ToDouble(item.DimBillete) == 125)
                                fact = 0.47;
                            if (Convert.ToDouble(item.DimBillete) == 130)
                                fact = 0.49;
                            total += (double)item.NbrRealisee * fact;
                        }
                        tonnage.DateJournee = model.Date;
                        tonnage.Cage01 = Convert.ToString(total);
                        tonnage.Cage02 = Convert.ToString(total);
                        tonnage.Cage03 = Convert.ToString(total);
                        tonnage.Cage04 = Convert.ToString(total);
                        tonnage.Cage05 = Convert.ToString(total);
                        tonnage.Cage06 = Convert.ToString(total);
                        tonnage.Cage07 = Convert.ToString(total);
                        tonnage.Cage08 = Convert.ToString(total);
                        tonnage.Cage09 = Convert.ToString(total);
                        tonnage.Cage10 = Convert.ToString(total);
                        tonnage.Cage11 = Convert.ToString(total);
                        tonnage.Cage12 = Convert.ToString(total);
                        tonnage.Cage13 = Convert.ToString(total);
                        // check if we are updating the result of prdaction or inserting a new one 
                        int exists = 0;
                        foreach (var item in TonnagesList)
                        {
                            if (item.DateJournee == model.Date)
                            {
                                var TonnagesUPDT = _context.ProdTonnagesCages
                                    .Where(c => c.DateJournee == item.DateJournee)
                                    .Select(i => new
                                    {
                                        i.Id,
                                        i.DateJournee,
                                        i.Cage01,
                                        i.Cage02,
                                        i.Cage03,
                                        i.Cage04,
                                        i.Cage05,
                                        i.Cage06,
                                        i.Cage07,
                                        i.Cage08,
                                        i.Cage09,
                                        i.Cage10,
                                        i.Cage11,
                                        i.Cage12,
                                        i.Cage13
                                    }).ToList();
                                var updt = TonnagesUPDT.Last();
                                // Update here mba3
                                _context.ProdTonnagesCages.Update(tonnage);
                                exists = 1;
                                break;
                            }
                        }
                        if (exists == 0)
                            _context.ProdTonnagesCages.Add(tonnage);
                        await _context.SaveChangesAsync();
                    }
                    else
                    {
                        List<ProdTonnagesCagesModel> prodTonnagesCagesModels = new List<ProdTonnagesCagesModel>();
                        foreach (var elementTonnage in TonnagesList)
                        {
                            ProdTonnagesCagesModel prodTonnagesCagesModel = new ProdTonnagesCagesModel();
                            prodTonnagesCagesModel.Id = elementTonnage.Id;
                            prodTonnagesCagesModel.DateJournee = elementTonnage.DateJournee;
                            prodTonnagesCagesModel.Cage01 = elementTonnage.Cage01;
                            prodTonnagesCagesModel.Cage02 = elementTonnage.Cage02;
                            prodTonnagesCagesModel.Cage03 = elementTonnage.Cage03;
                            prodTonnagesCagesModel.Cage04 = elementTonnage.Cage04;
                            prodTonnagesCagesModel.Cage05 = elementTonnage.Cage05;
                            prodTonnagesCagesModel.Cage06 = elementTonnage.Cage06;
                            prodTonnagesCagesModel.Cage07 = elementTonnage.Cage07;
                            prodTonnagesCagesModel.Cage08 = elementTonnage.Cage08;
                            prodTonnagesCagesModel.Cage09 = elementTonnage.Cage09;
                            prodTonnagesCagesModel.Cage10 = elementTonnage.Cage10;
                            prodTonnagesCagesModel.Cage11 = elementTonnage.Cage11;
                            prodTonnagesCagesModel.Cage12 = elementTonnage.Cage12;
                            prodTonnagesCagesModel.Cage13 = elementTonnage.Cage13;
                            prodTonnagesCagesModels.Add(prodTonnagesCagesModel);
                        }
                        var tt = TonnagesList.Last();
                        tonnage.Id = Convert.ToInt32(tt.Id) + 1;
                        ProdTonnagesCagesModel LastprodTonnagesCagesModel = new ProdTonnagesCagesModel();
                        LastprodTonnagesCagesModel.Id = tt.Id;
                        LastprodTonnagesCagesModel.DateJournee = tt.DateJournee;
                        LastprodTonnagesCagesModel.Cage01 = tt.Cage01;
                        LastprodTonnagesCagesModel.Cage02 = tt.Cage02;
                        LastprodTonnagesCagesModel.Cage03 = tt.Cage03;
                        LastprodTonnagesCagesModel.Cage04 = tt.Cage04;
                        LastprodTonnagesCagesModel.Cage05 = tt.Cage05;
                        LastprodTonnagesCagesModel.Cage06 = tt.Cage06;
                        LastprodTonnagesCagesModel.Cage07 = tt.Cage07;
                        LastprodTonnagesCagesModel.Cage08= tt.Cage08;
                        LastprodTonnagesCagesModel.Cage09 = tt.Cage09;
                        LastprodTonnagesCagesModel.Cage10 = tt.Cage10;
                        LastprodTonnagesCagesModel.Cage11 = tt.Cage11;
                        LastprodTonnagesCagesModel.Cage12 = tt.Cage12;
                        LastprodTonnagesCagesModel.Cage13 = tt.Cage13;

                        var productionJ = _context.JourneeProduction
                                            .Where(c => c.Date == model.Date)
                                            .Select(i => new
                                            {
                                                i.NumRapport,
                                                i.DimBillete,
                                                i.NbrRealisee,
                                                i.NumRapportPreparation,
                                                i.Poste
                                            }).ToList();
                        List<ProductionJourneeModel> productionJourneeModels = new List<ProductionJourneeModel>();
                        foreach (var element in productionJ)
                        {
                            ProductionJourneeModel productionJourneeModel = new ProductionJourneeModel();
                            productionJourneeModel.Poste = element.Poste;
                            productionJourneeModel.DimBillete= element.DimBillete;
                            productionJourneeModel.NbrRealisee = element.NbrRealisee;
                            productionJourneeModel.NumRapport = element.NumRapport;
                            productionJourneeModel.NumRapportPreparation = element.NumRapportPreparation;
                            productionJourneeModels.Add(productionJourneeModel);
                        }

                        var t = productionJ.Last();
                        double total = 0;
                        double fact = 0;
                        List<int> rapportsNum = new List<int>();
                        foreach (var item in productionJ)
                        {
                            if(item.NumRapportPreparation != null)
                            {
                                if (rapportsNum.Count == 0)
                                {
                                    rapportsNum.Add((int)item.NumRapportPreparation);
                                }
                                else
                                {
                                    var rIn = 0;
                                    foreach (var itemR in rapportsNum)
                                    {
                                        // check if the two posts has the same rapport
                                        if (itemR == item.NumRapportPreparation)
                                        {
                                            // we do not insert it
                                            rIn = 1;
                                        }
                                    }
                                    // if the posts have diff reports we add 
                                    if (rIn == 0)
                                    {
                                        rapportsNum.Add((int)item.NumRapportPreparation);
                                    }
                                }
                                //En cas il yas de changement de billete entre les posts dans la meme journee
                            }
                            if (Convert.ToDouble(item.DimBillete) == 125)
                                fact = XpertHelper.NetTonnage125;
                            if (Convert.ToDouble(item.DimBillete) == 130)
                                fact = XpertHelper.NetTonnage130;
                            if(item.NbrRealisee != null)
                                total += (double)item.NbrRealisee * fact;
                        }
                        XpertHelper.Total = (double)System.Math.Round((decimal)total, 2);
                        // Check if there is an Arret
                        //Get les arrets of the same day
                        var arretproductionjournee = _context.ArretProductionJournee.Where(c => c.DateArret == model.Date)
                        .Select(i => new {
                            i.Id,
                            i.NumRapport,
                            i.NumIncident,
                            i.CodeMachine,
                            i.SubMachine,
                            i.Cause,
                            i.HeureDebut,
                            i.HeureFin,
                            i.EnumArret,
                            i.NbrBilleteDefournees,
                            i.NbrBilleteRejetees,
                            i.NbrBilleteCisalleTrio,
                            i.NbrBilleteRealisees,
                            i.NbrBilleteCisalleFinisseuse
                        });
                        List<ArretProductionJourneeModel> arretProductionJourneeModels = new List<ArretProductionJourneeModel>();
                        foreach (var elementArret in arretproductionjournee)
                        {
                            ArretProductionJourneeModel arretProductionJourneeModel = new ArretProductionJourneeModel();
                            arretProductionJourneeModel.Cause = elementArret.Cause;
                            arretProductionJourneeModel.CodeMachine = elementArret.CodeMachine;
                            arretProductionJourneeModel.EnumArret = elementArret.EnumArret;
                            arretProductionJourneeModel.HeureDebut = elementArret.HeureDebut;
                            arretProductionJourneeModel.HeureFin = elementArret.HeureFin;
                            arretProductionJourneeModel.NbrBilleteCisalleFinisseuse = elementArret.NbrBilleteCisalleFinisseuse;
                            arretProductionJourneeModel.NbrBilleteCisalleTrio = elementArret.NbrBilleteCisalleTrio;
                            arretProductionJourneeModel.NbrBilleteDefournees = elementArret.NbrBilleteDefournees;
                            arretProductionJourneeModel.NbrBilleteRealisees = elementArret.NbrBilleteRealisees;
                            arretProductionJourneeModel.NbrBilleteRejetees = elementArret.NbrBilleteRejetees;
                            arretProductionJourneeModel.SubMachine = elementArret.SubMachine;
                            arretProductionJourneeModel.NumRapport = elementArret.NumRapport;
                            arretProductionJourneeModel.NumIncident = elementArret.NumIncident;
                            arretProductionJourneeModel.Id = elementArret.Id;
                            arretProductionJourneeModels.Add(arretProductionJourneeModel);
                        }
                        // check if we are updating the result of prduction or inserting a new one 
                        int exists =  await CalculateTonnageInUpdateProduction(model,prodTonnagesCagesModels,LastprodTonnagesCagesModel,total,rapportsNum,productionJourneeModels, NbrPostes);
                    }
                }

                //===========================================
                // Working the Totaux expoloitation
                await _context.SaveChangesAsync();
                ProdTotaux prodTotaux = new ProdTotaux();
                var prodTotauxList = await _context.ProdTotaux
                     .Select(i => new
                     {
                         i.DateProduction
                     }).ToListAsync();
                // Check if this prodTotaux exists
                int exist = 0;
                foreach (var item in prodTotauxList)
                {
                    var hours = model.Date.Hour;
                    model.Date = model.Date.AddHours(-hours);
                    if(model.Date == item.DateProduction)
                    {
                        exist = 1;
                        model.Date = model.Date.AddHours(hours);
                        break;
                    }
                }
                // check if there are multiple posts in this post
                // get the data of the sameMain post of the other subpost
                // if it does exist we do an update
                if (exist == 1)
                {
                    var updtProd =  await _context.ProdTotaux.Where(c => c.DateProduction == model.Date).FirstOrDefaultAsync();
                    //Init The PK
                    updtProd.DateProduction = model.Date;
                    //Preparation
                    double factTonnage = 0.0;
                    double factTonnageBrut = 0.0;
                    if (updtProd.Tonnage1 == null)
                    {
                        updtProd.Tonnage1 = 0;
                    }
                    if (updtProd.Tonnage2 == null)
                    {
                        updtProd.Tonnage2 = 0;
                    }
                    if (updtProd.Tonnage3 == null)
                    {
                        updtProd.Tonnage3 = 0;
                    }
                    if (updtProd.TonnageH1 == null)
                    {
                        updtProd.TonnageH1 = 0;
                    }
                    if (updtProd.TonnageH2 == null)
                    {
                        updtProd.TonnageH2 = 0;
                    }
                    if (updtProd.TonnageH3 == null)
                    {
                        updtProd.TonnageH3 = 0;
                    }
                    if (updtProd.TonnageBrutH1 == null)
                    {
                        updtProd.TonnageBrutH1 = 0;
                    }
                    if (updtProd.TonnageBrutH2 == null)
                    {
                        updtProd.TonnageBrutH2 = 0;
                    }
                    if (updtProd.TonnageBrutH3 == null)
                    {
                        updtProd.TonnageBrutH3 = 0;
                    }
                    if (updtProd.TonnageCisaille1 == null)
                    {
                        updtProd.TonnageCisaille1 = 0;
                    }
                    if (updtProd.TonnageCisaille2 == null)
                    {
                        updtProd.TonnageCisaille2 = 0;
                    }
                    if (updtProd.TonnageCisaille3 == null)
                    {
                        updtProd.TonnageCisaille3 = 0;
                    }
                    if (updtProd.TonnageDefournee1 == null)
                    {
                        updtProd.TonnageDefournee1 = 0;
                    }
                    if (updtProd.TonnageDefournee2 == null)
                    {
                        updtProd.TonnageDefournee2 = 0;
                    }
                    if (updtProd.TonnageDefournee3 == null)
                    {
                        updtProd.TonnageDefournee3 = 0;
                    }
                    if (prodTotaux.TonnageFardeau1 == null)
                    {
                        prodTotaux.TonnageFardeau1 = 0;
                    }
                    if (prodTotaux.TonnageFardeau2 == null)
                    {
                        prodTotaux.TonnageFardeau2 = 0;
                    }
                    if (prodTotaux.TonnageFardeau3 == null)
                    {
                        prodTotaux.TonnageFardeau3 = 0;
                    }
                    //Get Fardeau Facteur 
                    if (Convert.ToInt64(model.DimBillete) == 125)
                    {
                        //AFAIRE: Square

                        //Round
                        factTonnage = 0.45;
                        factTonnageBrut = 0.47;
                    }
                    if (Convert.ToInt64(model.DimBillete) == 130)
                    {
                        factTonnage = 0.51;
                        factTonnageBrut = 0.53;
                    }
                    // we locolise our selves 
                    if (model.Poste == 1)
                    {
                        int isMany = await CheckManyBillettesSamePoste1(model, updtProd, oldModel);
                        if(isMany == 0)
                        {
                            // We are ready to go
                            if (updtProd.Poste1C == null)
                            {
                                updtProd.Poste1C = model.NbrCisaille;
                                updtProd.SommeC += model.NbrCisaille;
                                updtProd.TonnageCisaille1 += model.NbrCisaille * factTonnage;
                                updtProd.TonnageCisaille += updtProd.TonnageCisaille1;
                                updtProd.TonnageCisaille1 = (double)System.Math.Round((decimal)updtProd.TonnageCisaille1, 2);
                                updtProd.TonnageCisaille = (double)System.Math.Round((decimal)updtProd.TonnageCisaille, 2);

                            }
                            else
                            {
                                updtProd.TonnageCisaille -= updtProd.TonnageCisaille1;
                                updtProd.TonnageCisaille1 -= updtProd.Poste1C * factTonnage;
                                updtProd.SommeC -= updtProd.Poste1C;
                                updtProd.Poste1C = model.NbrCisaille;
                                updtProd.SommeC += updtProd.Poste1C;
                                updtProd.TonnageCisaille1 += updtProd.Poste1C * factTonnage;
                                updtProd.TonnageCisaille += updtProd.TonnageCisaille1;
                                updtProd.TonnageCisaille1 = (double)System.Math.Round((decimal)updtProd.TonnageCisaille1, 2);
                                updtProd.TonnageCisaille = (double)System.Math.Round((decimal)updtProd.TonnageCisaille, 2);

                            }
                            if (updtProd.Poste1E == null)
                            {
                                updtProd.Poste1E = model.NbrExpulsee;
                                updtProd.SommeE += updtProd.Poste1E;
                            }
                            else
                            {
                                updtProd.SommeE -= updtProd.Poste1E;
                                updtProd.Poste1E = model.NbrExpulsee;
                                updtProd.SommeE += updtProd.Poste1E;
                            }
                            if (updtProd.Poste1F == null)
                            {
                                updtProd.Poste1F = model.NbrFardeaux;
                                updtProd.TonnageFardeau1 = updtProd.Poste1F * factTonnage;

                                updtProd.SommeF += updtProd.Poste1F;
                                updtProd.TonnageFardeau += updtProd.TonnageFardeau1;

                                updtProd.TonnageFardeau1 = (double)System.Math.Round((decimal)updtProd.TonnageFardeau1, 2);
                                updtProd.TonnageFardeau = (double)System.Math.Round((decimal)updtProd.TonnageFardeau, 2);

                            }
                            else
                            {
                                updtProd.TonnageFardeau -= updtProd.TonnageFardeau1;
                                updtProd.SommeF -= updtProd.Poste1F;
                                updtProd.Poste1F = model.NbrFardeaux;
                                updtProd.TonnageFardeau1 = updtProd.Poste1F * factTonnage;
                                updtProd.SommeF += updtProd.Poste1F;
                                updtProd.TonnageFardeau += updtProd.TonnageFardeau1;

                                updtProd.TonnageFardeau1 = (double)System.Math.Round((decimal)updtProd.TonnageFardeau1, 2);
                                updtProd.TonnageFardeau = (double)System.Math.Round((decimal)updtProd.TonnageFardeau, 2);
                            }
                            if (updtProd.Poste1R == null)
                            {

                                updtProd.Poste1R = model.NbrRealisee;
                                updtProd.SommeR += model.NbrRealisee;
                                updtProd.Tonnage1 += updtProd.Poste1R * factTonnage;
                                updtProd.TonnageH1 += updtProd.Poste1R * factTonnage / 24;
                                updtProd.TonnageBrutH1 += updtProd.Poste1R * factTonnage / 24;

                                updtProd.Tonnage1 = (double)System.Math.Round((decimal)updtProd.Tonnage1, 2);
                                updtProd.TonnageH1 = (double)System.Math.Round((decimal)updtProd.TonnageH1, 2);
                                updtProd.TonnageBrutH1 = (double)System.Math.Round((decimal)updtProd.TonnageBrutH1, 2);
                            }
                            else
                            {
                                updtProd.SommeR -= updtProd.Poste1R;
                                updtProd.Tonnage1 -= updtProd.Poste1R * factTonnage;
                                updtProd.TonnageH1 -= updtProd.Poste1R * factTonnage / 24;
                                updtProd.TonnageBrutH1 -= updtProd.Poste1R * factTonnageBrut / 24;

                                updtProd.Poste1R = model.NbrRealisee;
                                updtProd.SommeR += updtProd.Poste1R;
                                //TODO : update with the new way
                                updtProd.Tonnage1 += updtProd.Poste1R * factTonnage;
                                updtProd.TonnageH1 += updtProd.Poste1R * factTonnage / 24;
                                updtProd.TonnageBrutH1 += updtProd.Poste1R * factTonnageBrut / 24;

                                updtProd.Tonnage1 = (double)System.Math.Round((decimal)updtProd.Tonnage1, 2);
                                updtProd.TonnageH1 = (double)System.Math.Round((decimal)updtProd.TonnageH1, 2);
                                updtProd.TonnageBrutH1 = (double)System.Math.Round((decimal)updtProd.TonnageBrutH1, 2);
                            }
                            updtProd.TonnageDefournee1 = (updtProd.Poste1C + updtProd.Poste1R) * factTonnage;
                            updtProd.TonnageDefournee1 = (double)System.Math.Round((decimal)updtProd.TonnageDefournee1, 2);
                        }
                    }
                    if (model.Poste == 2)
                    {
                        
                        int isMany = await CheckManyBillettesSamePoste2(model, updtProd,oldModel);
                        if(isMany == 0)
                        {
                            // We are ready to go
                            if (updtProd.Pote2C == null)
                            {
                                updtProd.TonnageCisaille2 += model.NbrCisaille * factTonnage;
                                updtProd.Pote2C = model.NbrCisaille;
                                updtProd.SommeC += model.NbrCisaille;
                                updtProd.TonnageCisaille += updtProd.TonnageCisaille2;

                                updtProd.TonnageCisaille2 = (double)System.Math.Round((decimal)updtProd.TonnageCisaille2, 2);
                                updtProd.TonnageCisaille = (double)System.Math.Round((decimal)updtProd.TonnageCisaille, 2);

                            }
                            else
                            {
                                updtProd.TonnageCisaille -= updtProd.TonnageCisaille2;
                                updtProd.TonnageCisaille2 -= updtProd.Pote2C * factTonnage;
                                updtProd.SommeC -= updtProd.Pote2C;
                                updtProd.Pote2C = model.NbrCisaille;
                                updtProd.SommeC += updtProd.Pote2C;
                                updtProd.TonnageCisaille2 += updtProd.Pote2C * factTonnage;
                                updtProd.TonnageCisaille += updtProd.TonnageCisaille2;

                                updtProd.TonnageCisaille2 = (double)System.Math.Round((decimal)updtProd.TonnageCisaille2, 2);
                                updtProd.TonnageCisaille = (double)System.Math.Round((decimal)updtProd.TonnageCisaille, 2);
                            }
                            if (updtProd.Poste2E == null)
                            {
                                updtProd.Poste2E = model.NbrExpulsee;
                                updtProd.SommeE += updtProd.Poste2E;
                            }
                            else
                            {
                                updtProd.SommeE -= updtProd.Poste2E;
                                updtProd.Poste2E = model.NbrExpulsee;
                                updtProd.SommeE += updtProd.Poste2E;
                            }
                            if (updtProd.Poste2F == null)
                            {
                                updtProd.Poste2F = model.NbrFardeaux;
                                updtProd.TonnageFardeau2 = updtProd.Poste2F * factTonnage;

                                updtProd.SommeF += updtProd.Poste2F;
                                updtProd.TonnageFardeau += updtProd.TonnageFardeau2;

                                updtProd.TonnageFardeau2 = (double)System.Math.Round((decimal)updtProd.TonnageFardeau2, 2);
                                updtProd.TonnageFardeau = (double)System.Math.Round((decimal)updtProd.TonnageFardeau, 2);
                            }
                            else
                            {
                                updtProd.TonnageFardeau -= updtProd.TonnageFardeau2;
                                updtProd.SommeF -= updtProd.Poste2F;
                                updtProd.Poste2F = model.NbrFardeaux;
                                updtProd.TonnageFardeau2 = updtProd.Poste2F * factTonnage;
                                updtProd.TonnageFardeau += updtProd.TonnageFardeau2;
                                updtProd.SommeF += updtProd.Poste2F;

                                updtProd.TonnageFardeau2 = (double)System.Math.Round((decimal)updtProd.TonnageFardeau2, 2);
                                updtProd.TonnageFardeau = (double)System.Math.Round((decimal)updtProd.TonnageFardeau, 2);

                            }
                            if (updtProd.Poste2R == null)
                            {
                                updtProd.Poste2R = model.NbrRealisee;
                                updtProd.SommeR += model.NbrRealisee;
                                updtProd.Tonnage2 += updtProd.Poste2R * factTonnage;
                                updtProd.TonnageH2 += updtProd.Poste2R * factTonnage / 24;
                                updtProd.TonnageBrutH2 += updtProd.Poste2R * factTonnageBrut / 24;

                                updtProd.Tonnage2 = (double)System.Math.Round((decimal)updtProd.Tonnage2, 2);
                                updtProd.TonnageH2 = (double)System.Math.Round((decimal)updtProd.TonnageH2, 2);
                                updtProd.TonnageBrutH2 = (double)System.Math.Round((decimal)updtProd.TonnageBrutH2, 2);
                            }
                            else
                            {
                                updtProd.Tonnage2 -= updtProd.Poste2R * factTonnage;
                                updtProd.TonnageH2 -= updtProd.Poste2R * factTonnage / 24;
                                updtProd.TonnageBrutH2 -= updtProd.Poste2R * factTonnageBrut / 24;
                                updtProd.SommeR -= updtProd.Poste2R;

                                updtProd.Poste2R = model.NbrRealisee;
                                updtProd.SommeR += updtProd.Poste2R;
                                updtProd.Tonnage2 = updtProd.Poste2R * factTonnage;
                                updtProd.TonnageH2 = updtProd.Poste2R * factTonnage / 24;
                                updtProd.TonnageBrutH2 = updtProd.Poste2R * factTonnageBrut / 24;

                                updtProd.Tonnage2 = (double)System.Math.Round((decimal)updtProd.Tonnage2, 2);
                                updtProd.TonnageH2 = (double)System.Math.Round((decimal)updtProd.TonnageH2, 2);
                                updtProd.TonnageBrutH2 = (double)System.Math.Round((decimal)updtProd.TonnageBrutH2, 2);
                            }
                            updtProd.TonnageDefournee2 = (updtProd.Pote2C + updtProd.Poste2R) * factTonnage;
                            updtProd.TonnageDefournee2 = (double)System.Math.Round((decimal)updtProd.TonnageDefournee2, 2);
                        }
                    }
                    if (model.Poste == 3)
                    {
                        // We are ready to go
                        if (updtProd.Poste3C == null)
                        {
                            updtProd.TonnageCisaille3 += model.NbrCisaille * factTonnage;
                            updtProd.Poste3C = model.NbrCisaille;
                            updtProd.SommeC += model.NbrCisaille;
                            updtProd.TonnageCisaille += updtProd.TonnageCisaille3;

                            updtProd.TonnageCisaille3 = (double)System.Math.Round((decimal)updtProd.TonnageCisaille3, 2);
                            updtProd.TonnageCisaille = (double)System.Math.Round((decimal)updtProd.TonnageCisaille, 2);

                        }
                        else
                        {
                            updtProd.TonnageCisaille -= updtProd.TonnageCisaille3;
                            updtProd.TonnageCisaille3 -= updtProd.Poste3C * factTonnage;
                            updtProd.SommeC -= updtProd.Poste3C;
                            updtProd.Poste3C = model.NbrCisaille;
                            updtProd.SommeC += updtProd.Poste3C;
                            updtProd.TonnageCisaille3 += updtProd.Poste3C * factTonnage;
                            updtProd.TonnageCisaille += updtProd.TonnageCisaille3;

                            updtProd.TonnageCisaille3 = (double)System.Math.Round((decimal)updtProd.TonnageCisaille3, 2);
                            updtProd.TonnageCisaille = (double)System.Math.Round((decimal)updtProd.TonnageCisaille, 2);
                        }
                        if (updtProd.Poste3E == null)
                        {
                            updtProd.Poste3E = model.NbrExpulsee;
                            updtProd.SommeE += updtProd.Poste3E;
                        }
                        else
                        {
                            updtProd.SommeE -= updtProd.Poste3E;
                            updtProd.Poste3E = model.NbrExpulsee;
                            updtProd.SommeE += updtProd.Poste3E;
                        }
                        if (updtProd.Poste3F == null)
                        {
                            updtProd.Poste3F = model.NbrFardeaux;
                            updtProd.TonnageFardeau3 = updtProd.Poste3F * factTonnage;

                            updtProd.SommeF += updtProd.Poste3F;
                            updtProd.TonnageFardeau += updtProd.TonnageFardeau3;

                            updtProd.TonnageFardeau3 = (double)System.Math.Round((decimal)updtProd.TonnageFardeau3, 2);
                            updtProd.TonnageFardeau = (double)System.Math.Round((decimal)updtProd.TonnageFardeau, 2);
                        }
                        else
                        {
                            updtProd.TonnageFardeau -= updtProd.TonnageFardeau3;
                            updtProd.SommeF -= updtProd.Poste3F;
                            updtProd.Poste3F = model.NbrFardeaux;
                            updtProd.TonnageFardeau3 = updtProd.Poste3F * factTonnage;
                            updtProd.TonnageFardeau += updtProd.TonnageFardeau3;
                            updtProd.SommeF += updtProd.Poste3F;

                            updtProd.TonnageFardeau3 = (double)System.Math.Round((decimal)updtProd.TonnageFardeau3, 2);
                            updtProd.TonnageFardeau = (double)System.Math.Round((decimal)updtProd.TonnageFardeau, 2);
                        }
                        if (updtProd.Poste3R == null)
                        {
                            updtProd.Poste3R = model.NbrRealisee;
                            updtProd.SommeR += model.NbrRealisee;
                            updtProd.Tonnage3 += updtProd.Poste3R * factTonnage;
                            updtProd.TonnageH3 += updtProd.Poste3R * factTonnage / 24;
                            updtProd.TonnageBrutH3 += updtProd.Poste3R * factTonnage / 24;

                            updtProd.Tonnage3 = (double)System.Math.Round((decimal)updtProd.Tonnage3, 2);
                            updtProd.TonnageH3 = (double)System.Math.Round((decimal)updtProd.TonnageH3, 2);
                            updtProd.TonnageBrutH3 = (double)System.Math.Round((decimal)updtProd.TonnageBrutH3, 2);
                        }
                        else
                        {
                            updtProd.SommeR -= updtProd.Poste3R;
                            updtProd.Tonnage3 -= updtProd.Poste3R * factTonnage;
                            updtProd.TonnageH3 -= updtProd.Poste3R * factTonnage / 24;
                            updtProd.TonnageBrutH3 -= updtProd.Poste3R * factTonnageBrut / 24;

                            updtProd.Poste3R = model.NbrRealisee;
                            updtProd.SommeR += updtProd.Poste3R;
                            updtProd.Tonnage3 += updtProd.Poste3R * factTonnage;
                            updtProd.TonnageH3 += updtProd.Poste3R * factTonnage / 24;
                            updtProd.TonnageBrutH3 += updtProd.Poste3R * factTonnageBrut / 24;

                            updtProd.Tonnage3 = (double)System.Math.Round((decimal)updtProd.Tonnage3, 2);
                            updtProd.TonnageH3 = (double)System.Math.Round((decimal)updtProd.TonnageH3, 2);
                            updtProd.TonnageBrutH3 = (double)System.Math.Round((decimal)updtProd.TonnageBrutH3, 2);
                        }
                        updtProd.TonnageDefournee3 = (updtProd.Poste3C  + updtProd.Poste3R) * factTonnage;
                        updtProd.TonnageDefournee3 = (double)System.Math.Round((decimal)updtProd.TonnageDefournee3, 2);
                        CheckManyBillettesSamePoste3(model, updtProd);

                    }

                    updtProd.Tonnage = updtProd.Tonnage1 + updtProd.Tonnage2 + updtProd.Tonnage3;
                    updtProd.Tonnage = (double)System.Math.Round((decimal)updtProd.Tonnage, 2);

                    //Finition We compute Tonnage Par heure
                    updtProd.TonageH = updtProd.TonnageH1 + updtProd.TonnageH2 + updtProd.TonnageH3;
                    updtProd.TonageH = (double)System.Math.Round((decimal)updtProd.TonageH, 2);

                    updtProd.TonnageBrutH = updtProd.TonnageBrutH1 + updtProd.TonnageBrutH2 + updtProd.TonnageBrutH3;
                    updtProd.TonnageBrutH = (double)System.Math.Round((decimal)updtProd.TonnageBrutH, 2);

                    updtProd.TonnageDefournee = updtProd.TonnageDefournee1 + updtProd.TonnageDefournee2 + updtProd.TonnageDefournee3;
                    updtProd.TonnageDefournee = (double)System.Math.Round((decimal)updtProd.TonnageDefournee, 2);

                    // we Update the prodtotaux To database
                    _context.ProdTotaux.Update(updtProd);
                    await _context.SaveChangesAsync();
                }
                // if it does not exit we don an insert
                if (exist == 0)
                {
                    //Init The PK
                    prodTotaux.DateProduction = model.Date;
                    //Preparation
                    double factTonnage = 0.0;
                    double factTonnageBrut = 0.0;
                    if (prodTotaux.Tonnage1 == null)
                    {
                        prodTotaux.Tonnage1 = 0;
                    }
                    if (prodTotaux.Tonnage2 == null)
                    {
                        prodTotaux.Tonnage2 = 0;
                    }
                    if (prodTotaux.Tonnage3 == null)
                    {
                        prodTotaux.Tonnage3 = 0;
                    }
                    if (prodTotaux.TonnageH1 == null)
                    {
                        prodTotaux.TonnageH1 = 0;
                    }
                    if (prodTotaux.TonnageH2 == null)
                    {
                        prodTotaux.TonnageH2 = 0;
                    }
                    if (prodTotaux.TonnageH3 == null)
                    {
                        prodTotaux.TonnageH3 = 0;
                    }
                    if (prodTotaux.TonnageBrutH1 == null)
                    {
                        prodTotaux.TonnageBrutH1 = 0;
                    }
                    if (prodTotaux.TonnageBrutH2 == null)
                    {
                        prodTotaux.TonnageBrutH2 = 0;
                    }
                    if (prodTotaux.TonnageBrutH3 == null)
                    {
                        prodTotaux.TonnageBrutH3 = 0;
                    }
                    if (prodTotaux.TonnageCisaille1 == null)
                    {
                        prodTotaux.TonnageCisaille1 = 0;
                    }
                    if (prodTotaux.TonnageCisaille2 == null)
                    {
                        prodTotaux.TonnageCisaille2 = 0;
                    }
                    if (prodTotaux.TonnageCisaille3 == null)
                    {
                        prodTotaux.TonnageCisaille3 = 0;
                    }
                    if (prodTotaux.TonnageDefournee1 == null)
                    {
                        prodTotaux.TonnageDefournee1 = 0;
                    }
                    if (prodTotaux.TonnageDefournee2 == null)
                    {
                        prodTotaux.TonnageDefournee2 = 0;
                    }
                    if (prodTotaux.TonnageDefournee3 == null)
                    {
                        prodTotaux.TonnageDefournee3 = 0;
                    }
                    if (prodTotaux.TonnageFardeau1 == null)
                    {
                        prodTotaux.TonnageFardeau1 = 0;
                    }
                    if (prodTotaux.TonnageFardeau2 == null)
                    {
                        prodTotaux.TonnageFardeau2 = 0;
                    }
                    if (prodTotaux.TonnageFardeau3 == null)
                    {
                        prodTotaux.TonnageFardeau3 = 0;
                    }
                    //Get Fardeau Facteur 
                    if (Convert.ToInt64(model.DimBillete) == 125)
                    {
                        factTonnage = 0.47;
                        factTonnageBrut = 0.45;
                    }
                    if (Convert.ToInt64(model.DimBillete) == 130)
                    {
                        factTonnage = 0.51;
                        factTonnageBrut = 0.53;
                    }

                    // we locolise our selves 
                    if (model.Poste == 1)
                    {
                        // TODO: check if there are multiple posts in this post

                        // TODO: get the data of the sameMain post of the other subpost

                        // We are ready to go
                        prodTotaux.Poste1C = model.NbrCisaille;

                        prodTotaux.Poste1E = model.NbrExpulsee;

                        prodTotaux.Poste1F = model.NbrFardeaux;
                        prodTotaux.Poste1R = model.NbrRealisee;

                        prodTotaux.Tonnage1 = model.NbrRealisee * factTonnage;
                        prodTotaux.TonnageH1 = prodTotaux.Poste1R * factTonnage / 24;
                        prodTotaux.TonnageBrutH1 = prodTotaux.Poste1R * factTonnageBrut / 24;

                        prodTotaux.TonnageCisaille1 = model.NbrCisaille * factTonnage;
                        prodTotaux.TonnageDefournee1 = (prodTotaux.Poste1R  + prodTotaux.Poste1C) * factTonnage;
                        prodTotaux.TonnageFardeau1 = (prodTotaux.Poste1F) * factTonnage;

                        prodTotaux.Tonnage1 = (double)System.Math.Round((decimal)prodTotaux.Tonnage1, 2);
                        prodTotaux.TonnageH1 = (double)System.Math.Round((decimal)prodTotaux.TonnageH1, 2);
                        prodTotaux.TonnageBrutH1 = (double)System.Math.Round((decimal)prodTotaux.TonnageBrutH1, 2);
                        prodTotaux.TonnageCisaille1 = (double)System.Math.Round((decimal)prodTotaux.TonnageCisaille1, 2);
                        prodTotaux.TonnageDefournee1 = (double)System.Math.Round((decimal)prodTotaux.TonnageDefournee1, 2);
                        prodTotaux.TonnageFardeau1 = (double)System.Math.Round((decimal)prodTotaux.TonnageFardeau1, 2);

                        //we update the sum
                        prodTotaux.SommeC = model.NbrCisaille;
                        prodTotaux.SommeE = model.NbrExpulsee;
                        prodTotaux.SommeF = prodTotaux.Poste1F;
                        prodTotaux.SommeR = model.NbrRealisee;
                    }
                   
                    if (model.Poste == 2)
                    {
                        // We are ready to go
                        prodTotaux.Pote2C = model.NbrCisaille;
                        prodTotaux.Poste2E = model.NbrExpulsee;
                        prodTotaux.Poste2F = model.NbrFardeaux;
                        prodTotaux.Poste2R = model.NbrRealisee;

                        prodTotaux.Tonnage2 = model.NbrRealisee * factTonnage;
                        prodTotaux.TonnageH2 = prodTotaux.Poste2R * factTonnage / 24;
                        prodTotaux.TonnageBrutH2 = prodTotaux.Poste2R * factTonnageBrut / 24;

                        prodTotaux.TonnageCisaille2 = model.NbrCisaille * factTonnage;
                        prodTotaux.TonnageDefournee2 = (prodTotaux.Poste2R  + prodTotaux.Pote2C) * factTonnage;
                        prodTotaux.TonnageFardeau2 = (prodTotaux.Poste2F) * factTonnage;


                        prodTotaux.Tonnage2 = (double)System.Math.Round((decimal)prodTotaux.Tonnage2, 2);
                        prodTotaux.TonnageH2 = (double)System.Math.Round((decimal)prodTotaux.TonnageH2, 2);
                        prodTotaux.TonnageBrutH2 = (double)System.Math.Round((decimal)prodTotaux.TonnageBrutH2, 2);
                        prodTotaux.TonnageCisaille2 = (double)System.Math.Round((decimal)prodTotaux.TonnageCisaille2, 2);
                        prodTotaux.TonnageDefournee2 = (double)System.Math.Round((decimal)prodTotaux.TonnageDefournee2, 2);
                        prodTotaux.TonnageFardeau2 = (double)System.Math.Round((decimal)prodTotaux.TonnageFardeau2, 2);
                        //we update the sum
                        prodTotaux.SommeC = model.NbrCisaille;
                        prodTotaux.SommeE = model.NbrExpulsee;
                        prodTotaux.SommeF = prodTotaux.Poste2F;
                        prodTotaux.SommeR = model.NbrRealisee;
                    }
                 
                    if (model.Poste == 3)
                    {
                        // We are ready to go
                        prodTotaux.Poste3C = model.NbrCisaille;
                        prodTotaux.Poste3E = model.NbrExpulsee;
                        prodTotaux.Poste3F = model.NbrFardeaux;
                        prodTotaux.Poste3R = model.NbrRealisee;

                        prodTotaux.Tonnage3 = model.NbrRealisee * factTonnage;
                        prodTotaux.TonnageH3 = prodTotaux.Poste3R * factTonnage / 24;
                        prodTotaux.TonnageBrutH3 = prodTotaux.Poste3R * factTonnageBrut / 24;

                        prodTotaux.TonnageCisaille3 = model.NbrCisaille * factTonnage;
                        prodTotaux.TonnageDefournee3 = (prodTotaux.Poste3R + prodTotaux.Poste3C) * factTonnage;
                        prodTotaux.TonnageFardeau3 = (prodTotaux.Poste3F) * factTonnage;


                        prodTotaux.Tonnage3 = (double)System.Math.Round((decimal)prodTotaux.Tonnage3, 2);
                        prodTotaux.TonnageH3 = (double)System.Math.Round((decimal)prodTotaux.TonnageH3, 2);
                        prodTotaux.TonnageBrutH3 = (double)System.Math.Round((decimal)prodTotaux.TonnageBrutH3, 2);
                        prodTotaux.TonnageCisaille3 = (double)System.Math.Round((decimal)prodTotaux.TonnageCisaille3, 2);
                        prodTotaux.TonnageDefournee3 = (double)System.Math.Round((decimal)prodTotaux.TonnageDefournee3, 2);
                        prodTotaux.TonnageFardeau3 = (double)System.Math.Round((decimal)prodTotaux.TonnageFardeau3, 2);
                        //we update the sum
                        prodTotaux.SommeC = model.NbrCisaille;
                        prodTotaux.SommeE = model.NbrExpulsee;
                        prodTotaux.SommeF = prodTotaux.Poste3F;
                        prodTotaux.SommeR = model.NbrRealisee;
                    }

                    prodTotaux.Tonnage = prodTotaux.Tonnage1 + prodTotaux.Tonnage2 + prodTotaux.Tonnage3;
                    prodTotaux.Tonnage = (double)System.Math.Round((decimal)prodTotaux.Tonnage, 2);

                    //Finition We compute Tonnage Par heure
                    prodTotaux.TonageH = prodTotaux.TonnageH1 + prodTotaux.TonnageH2 + prodTotaux.TonnageH3;
                    prodTotaux.Tonnage = (double)System.Math.Round((decimal)prodTotaux.Tonnage, 2);

                    prodTotaux.TonnageBrutH = prodTotaux.TonnageBrutH1 + prodTotaux.TonnageBrutH2 + prodTotaux.TonnageBrutH3;
                    prodTotaux.TonnageBrutH = (double)System.Math.Round((decimal)prodTotaux.TonnageBrutH, 2);
                    prodTotaux.TonnageCisaille = prodTotaux.TonnageCisaille1 + prodTotaux.TonnageCisaille2 + prodTotaux.TonnageCisaille3;
                    prodTotaux.TonnageCisaille = (double)System.Math.Round((decimal)prodTotaux.TonnageCisaille, 2);
                    prodTotaux.TonnageDefournee = prodTotaux.TonnageDefournee1 + prodTotaux.TonnageDefournee2 + prodTotaux.TonnageDefournee3;
                    prodTotaux.TonnageDefournee = (double)System.Math.Round((decimal)prodTotaux.TonnageDefournee, 2);
                    prodTotaux.TonnageFardeau = prodTotaux.TonnageFardeau1 + prodTotaux.TonnageFardeau2 + prodTotaux.TonnageFardeau3;
                    prodTotaux.TonnageFardeau = (double)System.Math.Round((decimal)prodTotaux.TonnageFardeau, 2);

                    // we add the prodtotaux To database
                    _context.ProdTotaux.Add(prodTotaux);

                }
            }
            await _context.SaveChangesAsync();
            return Ok();
        }
        [HttpPut]
        public async Task<IActionResult> PutCylindres(int key, string values)
        {
            var model = await _context.ProdPreparationCylindre.FirstOrDefaultAsync(item => item.Id == key);
            if (model == null)
                return StatusCode(409, "Object not found");

            var valuesDict = JsonConvert.DeserializeObject<IDictionary>(values);
            PopulateModelCylindre(model, valuesDict);

            if (!TryValidateModel(model))
                return BadRequest(GetFullErrorMessage(ModelState));

            await _context.SaveChangesAsync();
            return Ok();
        }
        [HttpPut]
        public async Task<IActionResult> PutCalibres(int key, string values)
        {
            var model = await _context.ProdPreparationCalibre.FirstOrDefaultAsync(item => item.Id == key);
            if (model == null)
                return StatusCode(409, "Object not found");

            var valuesDict = JsonConvert.DeserializeObject<IDictionary>(values);
            PopulateModelCalibres(model, valuesDict);

            if (!TryValidateModel(model))
                return BadRequest(GetFullErrorMessage(ModelState));

            await _context.SaveChangesAsync();
            return Ok();
        }
        [HttpDelete]
        public async Task Delete(int key) {
            var model = await _context.JourneeProduction.FirstOrDefaultAsync(item => item.NumRapport == key);

            _context.JourneeProduction.Remove(model);
            await _context.SaveChangesAsync();
        }
        [HttpDelete]
        public async Task DeleteCylindres(int key)
        {
            var model = await _context.ProdPreparationCylindre.FirstOrDefaultAsync(item => item.Id == key);

            _context.ProdPreparationCylindre.Remove(model);
            await _context.SaveChangesAsync();
        }
        [HttpDelete]
        public async Task DeleteCalibres(int key)
        {
            var model = await _context.ProdPreparationCalibre.FirstOrDefaultAsync(item => item.Id == key);

            _context.ProdPreparationCalibre.Remove(model);
            await _context.SaveChangesAsync();
        }
        [HttpGet]
        public async Task<IActionResult> BonProductionLookup(DataSourceLoadOptions loadOptions) {
            var lookup = from i in _context.BonProduction
                         orderby i.NumBon
                         select new {
                             Value = i.NumBon,
                             Text = i.NumBon
                         };
            return Json(await DataSourceLoader.LoadAsync(lookup, loadOptions));
        }
        [HttpGet]
        public async Task<IActionResult> IntervenantLookup(DataSourceLoadOptions loadOptions)
        {
            var lookup = from i in _context.Intervenant
                         where i.CodeStructure.Equals("3")
                         orderby i.NmPr
                         select new
                         {
                             Value = i.CodeIntervenant,
                             Text = i.NmPr
                         };
            return Json(await DataSourceLoader.LoadAsync(lookup, loadOptions));
        }
        [HttpGet]
        public async Task<IActionResult> MachineLookup(DataSourceLoadOptions loadOptions)
        {
            var lookup = from i in _context.Machines
                         orderby i.NumMachine
                         select new
                         {
                             Value = i.NumMachine,
                             Text = i.NomMachine
                         };
            return Json(await DataSourceLoader.LoadAsync(lookup, loadOptions));
        }
        [HttpGet]
        public async Task<IActionResult> SubMachinesLookup(DataSourceLoadOptions loadOptions)
        {
            var lookup = from i in _context.SubMachineArret
                         orderby i.DesignationSub
                         select new
                         {
                             Value = i.DesignationSub,
                             Text = i.DesignationSub
                         };
            return Json(await DataSourceLoader.LoadAsync(lookup, loadOptions));
        }
        [HttpGet]
        public async Task<IActionResult> EnumArretLookup(DataSourceLoadOptions loadOptions)
        {
            var lookup = from i in _context.EnumArret
                         orderby i.Designation
                         select new
                         {
                             Value = i.Designation,
                             Text = i.Designation
                         };
            return Json(await DataSourceLoader.LoadAsync(lookup, loadOptions));
        }
        private void PopulateModelCylindre(ProdPreparationCylindre model, IDictionary values)
        {
            string NUM_RAPPORT = nameof(ProdPreparationCylindre.NumRapport);
            string Designation = nameof(ProdPreparationCylindre.CodeMachine);
            string AncienDiametre = nameof(ProdPreparationCylindre.AncienDiametre);
            string NouveauDiametre = nameof(ProdPreparationCylindre.NouveauDiametre);
            string RefAncienCylindre = nameof(ProdPreparationCylindre.RefAncienCylindre);
            string RefNouveauCylindre = nameof(ProdPreparationCylindre.RefNouveauCylindre);
            string Id = nameof(ProdPreparationCylindre.Id);
            if (values.Contains(RefAncienCylindre))
            {
                model.RefAncienCylindre = Convert.ToString(values[RefAncienCylindre]);
            }
            if (values.Contains(RefNouveauCylindre))
            {
                model.RefNouveauCylindre = Convert.ToString(values[RefNouveauCylindre]);
            }
            if (values.Contains(Id))
            {
                model.Id = Convert.ToInt32(values[Id]);
            }
            if (values.Contains(NUM_RAPPORT))
            {
                model.NumRapport = Convert.ToInt32(values[NUM_RAPPORT]);
            }
            if (values.Contains(Designation))
            {
                model.CodeMachine = Convert.ToInt32(values[Designation]);
            }
            if (values.Contains(AncienDiametre))
            {
                model.AncienDiametre = Convert.ToInt32(values[AncienDiametre]);
            }
            if (values.Contains(NouveauDiametre))
            {
                model.NouveauDiametre = Convert.ToInt32(values[NouveauDiametre]);
            }
        }
        private void PopulateModelCalibres(ProdPreparationCalibre model, IDictionary values)
        {
            string NUM_RAPPORT = nameof(ProdPreparationCalibre.NumRapport);
            string Designation = nameof(ProdPreparationCalibre.CodeMachine);
            string NumCalibre = nameof(ProdPreparationCalibre.NumCalibre);
            string Id = nameof(ProdPreparationCalibre.Id);

            if (values.Contains(Id))
            {
                model.Id = Convert.ToInt32(values[Id]);
            }
            if (values.Contains(NUM_RAPPORT))
            {
                model.NumRapport = Convert.ToInt32(values[NUM_RAPPORT]);
            }
            if (values.Contains(Designation))
            {
                model.CodeMachine = Convert.ToInt32(values[Designation]);
            }
            if (values.Contains(NumCalibre))
            {
                model.NumCalibre = Convert.ToInt32(values[NumCalibre]);
            }

        }
        private void PopulateModel(JourneeProduction model, IDictionary values) {
            string NUM_RAPPORT = nameof(JourneeProduction.NumRapport);
            string DATE = nameof(JourneeProduction.Date);
            string POSTE = nameof(JourneeProduction.Poste);
            string NUM_BON = nameof(JourneeProduction.NumBon);
            string OPERATEUR_PCP = nameof(JourneeProduction.OperateurPcp);
            string CHEF_POSTE = nameof(JourneeProduction.ChefPoste);
            string ING_PROCESS = nameof(JourneeProduction.IngProcess);
            string DIM_PRODUIT_FINI = nameof(JourneeProduction.DimProduitFini);
            string DIM_PRODUIT_CONFORME = nameof(JourneeProduction.DimProduitConforme);
            string DIM_BILLETE = nameof(JourneeProduction.DimBillete);
            string LONG_BILLETE = nameof(JourneeProduction.LongBillete);
            string NbrCisaille = nameof(JourneeProduction.NbrCisaille);
            string NbrDefourne = nameof(JourneeProduction.NbrDefourne);
            string NbrExpulsee = nameof(JourneeProduction.NbrExpulsee);
            string NbrRealisee = nameof(JourneeProduction.NbrRealisee);
            string NumRapportPreparation = nameof(JourneeProduction.NumRapportPreparation);
            string NbrFardeau = nameof(JourneeProduction.NbrFardeaux);
            string Note = nameof(JourneeProduction.Note);
            if (values.Contains(Note))
            {
                model.Note = Convert.ToString(values[Note]);
            }
            if (values.Contains(NbrFardeau))
            {
                model.NbrFardeaux = Convert.ToInt32(values[NbrFardeau]);
            }
            if (values.Contains(NumRapportPreparation))
            {
                model.NumRapportPreparation = Convert.ToInt32(values[NumRapportPreparation]);
            }
            if (values.Contains(NbrCisaille))
            {
                model.NbrCisaille = Convert.ToInt32(values[NbrCisaille]);
            }
            if (values.Contains(NbrDefourne))
            {
                model.NbrDefourne = Convert.ToInt32(values[NbrDefourne]);
            }
            if (values.Contains(NbrExpulsee))
            {
                model.NbrExpulsee = Convert.ToInt32(values[NbrExpulsee]);
            }
            if (values.Contains(NbrRealisee))
            {
                model.NbrRealisee = Convert.ToInt32(values[NbrRealisee]);
            }
            if (values.Contains(NUM_RAPPORT)) {
                model.NumRapport = Convert.ToInt32(values[NUM_RAPPORT]);
            }
            if(values.Contains(DATE)) {
                model.Date = Convert.ToDateTime(values[DATE]);
            }
            if(values.Contains(POSTE)) {
                model.Poste = Convert.ToInt32(values[POSTE]);
            }
            if(values.Contains(NUM_BON)) {
                model.NumBon = Convert.ToInt32(values[NUM_BON]);
            }
            if (values.Contains(OPERATEUR_PCP))
            {
                model.OperateurPcp = Convert.ToInt32(values[OPERATEUR_PCP]);
            }
            if (values.Contains(CHEF_POSTE))
            {
                model.ChefPoste = Convert.ToInt32(values[CHEF_POSTE]);
            }
            if (values.Contains(ING_PROCESS))
            {
                model.IngProcess = Convert.ToInt32(values[ING_PROCESS]);
            }
            if(values.Contains(DIM_PRODUIT_FINI)) {
                model.DimProduitFini = Convert.ToString(values[DIM_PRODUIT_FINI]);
            }
            if(values.Contains(DIM_PRODUIT_CONFORME)) {
                model.DimProduitConforme = Convert.ToString(values[DIM_PRODUIT_CONFORME]);
            }
            if(values.Contains(DIM_BILLETE)) {
                model.DimBillete = Convert.ToString(values[DIM_BILLETE]);
            }
            if(values.Contains(LONG_BILLETE)) {
                model.LongBillete = Convert.ToString(values[LONG_BILLETE]);
            }
        }
        private void PopulateModelTonnage(ProdTonnagesCages model, IDictionary values)
        {
            string Id = nameof(ProdTonnagesCages.Id);
            string DateJournee = nameof(ProdTonnagesCages.DateJournee);
            string Cage01 = nameof(ProdTonnagesCages.Cage01);
            string Cage02 = nameof(ProdTonnagesCages.Cage02);
            string Cage03 = nameof(ProdTonnagesCages.Cage03);
            string Cage04 = nameof(ProdTonnagesCages.Cage04);
            string Cage05 = nameof(ProdTonnagesCages.Cage05);
            string Cage06 = nameof(ProdTonnagesCages.Cage06);
            string Cage07 = nameof(ProdTonnagesCages.Cage07);
            string Cage08 = nameof(ProdTonnagesCages.Cage08);
            string Cage09 = nameof(ProdTonnagesCages.Cage09);
            string Cage10 = nameof(ProdTonnagesCages.Cage10);
            string Cage11 = nameof(ProdTonnagesCages.Cage11);
            string Cage12 = nameof(ProdTonnagesCages.Cage12);
            string Cage13 = nameof(ProdTonnagesCages.Cage13);

            if (values.Contains(Id))
            {
                model.Id = Convert.ToInt32(values[Id]);
            }
           
            if (values.Contains(DateJournee))
            {
                model.DateJournee = Convert.ToDateTime(values[DateJournee]);
            }

            if (values.Contains(Cage01))
            {
                model.Cage01 = Convert.ToString(values[Cage01]);
            }

            if (values.Contains(Cage02))
            {
                model.Cage02 = Convert.ToString(values[Cage02]);
            }

            if (values.Contains(Cage03))
            {
                model.Cage03 = Convert.ToString(values[Cage03]);
            }
            if (values.Contains(Cage04))
            {
                model.Cage04 = Convert.ToString(values[Cage04]);
            }
            if (values.Contains(Cage05))
            {
                model.Cage05 = Convert.ToString(values[Cage05]);
            }
            if (values.Contains(Cage06))
            {
                model.Cage06 = Convert.ToString(values[Cage06]);
            }
            if (values.Contains(Cage07))
            {
                model.Cage07 = Convert.ToString(values[Cage07]);
            }
            if (values.Contains(Cage08))
            {
                model.Cage08 = Convert.ToString(values[Cage08]);
            }
            if (values.Contains(Cage09))
            {
                model.Cage09 = Convert.ToString(values[Cage09]);
            }
            if (values.Contains(Cage10))
            {
                model.Cage10 = Convert.ToString(values[Cage10]);
            }
            if (values.Contains(Cage11))
            {
                model.Cage11 = Convert.ToString(values[Cage11]);
            }
            if (values.Contains(Cage12))
            {
                model.Cage12 = Convert.ToString(values[Cage12]);
            }
            if (values.Contains(Cage13))
            {
                model.Cage13 = Convert.ToString(values[Cage13]);
            }
        }
        private string GetFullErrorMessage(ModelStateDictionary modelState) {
            var messages = new List<string>();

            foreach(var entry in modelState) {
                foreach(var error in entry.Value.Errors)
                    messages.Add(error.ErrorMessage);
            }

            return String.Join(" ", messages);
        }
        public async Task<int> CheckManyBillettesSamePoste1(JourneeProduction model,ProdTotaux updtProd, JourneeProduction oldModel)
        {
            //We check if there is another billete in this poste
            var prodTotauxListToCheck = _context.JourneeProduction
                .Where(c => c.Date == model.Date)
                .Where(c => c.Poste == model.Poste)
                .Where(c => c.NumRapport == model.NumRapport)
                .Select(i => new
                {
                    i.NbrCisaille,
                    i.NbrDefourne,
                    i.NbrExpulsee,
                    i.NbrFardeaux,
                    i.NbrRealisee,
                    i.DimBillete
                }).ToList();
            var theOtherPoste = _context.JourneeProduction
                .Where(c => c.Date == model.Date)
                .Where(c => c.Poste == model.Poste)
                .Where(c => c.NumRapport != model.NumRapport)
                .Select(i => new
                {
                    i.NbrCisaille,
                    i.NbrDefourne,
                    i.NbrExpulsee,
                    i.NbrFardeaux,
                    i.NbrRealisee,
                    i.DimBillete
                }).ToList();
            //If there is we do get it and save it that we add it to this billette
            if (prodTotauxListToCheck.Count > 0)
            {

                var factTonnage = 0.0;
                var factTonnageBrut = 0.0;

                var oldFactTonnage = 0.0;
                var oldFactTonnageBrut = 0.0;
                var otherFactTonnage = 0.0;
                var otherFactTonnageBrut = 0.0;

                var last = prodTotauxListToCheck.Last();
                if (Convert.ToInt64(last.DimBillete) == 125)
                {
                    factTonnage = 0.45;
                    factTonnageBrut = 0.47;
                }
                if (Convert.ToInt64(last.DimBillete) == 130)
                {
                    factTonnage = 0.51;
                    factTonnageBrut = 0.53;
                }

                //TODO : check if it is an update or it is an inert
                // if it is an insert
                // if the prototaux value equal to the other pote value
                // the init just add
                if (theOtherPoste.Count > 0)
                {
                    var otherLast = theOtherPoste.Last();
                    if (updtProd.Poste1R == otherLast.NbrRealisee && updtProd.Poste1E == otherLast.NbrExpulsee && updtProd.Poste1C == otherLast.NbrCisaille)
                    {
                        #region//cisaillées
                        updtProd.TonnageCisaille1 += last.NbrCisaille * factTonnage;
                        updtProd.Poste1C += last.NbrCisaille;
                        updtProd.SommeC += last.NbrCisaille;
                        updtProd.TonnageCisaille += last.NbrCisaille * factTonnage;
                        #endregion

                        #region//Explusées
                        updtProd.Poste1E += last.NbrExpulsee;
                        updtProd.SommeE += updtProd.Poste2E;
                        #endregion

                        #region//Fardeaux
                        updtProd.Poste1F += last.NbrFardeaux;
                        updtProd.TonnageFardeau1 += last.NbrFardeaux * factTonnage;
                        updtProd.SommeF += last.NbrFardeaux;
                        updtProd.TonnageFardeau += last.NbrFardeaux * factTonnage;
                        updtProd.TonnageFardeau1 = (double)System.Math.Round((decimal)updtProd.TonnageFardeau1, 2);
                        updtProd.TonnageFardeau = (double)System.Math.Round((decimal)updtProd.TonnageFardeau, 2);
                        #endregion

                        #region//Realiséées
                        updtProd.Poste1R += last.NbrRealisee;
                        updtProd.SommeR += last.NbrRealisee;
                        updtProd.Tonnage1 += last.NbrRealisee * factTonnage;
                        updtProd.TonnageH1 += last.NbrRealisee * factTonnage / 24;
                        updtProd.TonnageBrutH1 += last.NbrRealisee * factTonnageBrut / 24;
                        updtProd.Tonnage1 = (double)System.Math.Round((decimal)updtProd.Tonnage1, 2);
                        updtProd.TonnageH1 = (double)System.Math.Round((decimal)updtProd.TonnageH1, 2);
                        updtProd.TonnageBrutH1 = (double)System.Math.Round((decimal)updtProd.TonnageBrutH1, 2);
                        #endregion
                        updtProd.TonnageDefournee1 = (updtProd.Poste1C   + updtProd.Poste1R) * factTonnage;
                        updtProd.TonnageDefournee1 = (double)System.Math.Round((decimal)updtProd.TonnageDefournee1, 2);

                        _context.ProdTotaux.Update(updtProd);
                        await _context.SaveChangesAsync();
                        return 1;
                    }
                    else
                    {
                        // if not -> it is an update
                        // we substruct from prodtotaux the old we add the new value 
                        if (Convert.ToInt64(oldModel.DimBillete) == 125)
                        {
                            oldFactTonnage = 0.45;
                            oldFactTonnageBrut = 0.47;
                        }
                        if (Convert.ToInt64(oldModel.DimBillete) == 130)
                        {
                            oldFactTonnage = 0.51;
                            oldFactTonnageBrut = 0.53;
                        }
                        if (Convert.ToInt64(otherLast.DimBillete) == 125)
                        {
                            otherFactTonnage = 0.45;
                            otherFactTonnageBrut = 0.47;
                        }
                        if (Convert.ToInt64(otherLast.DimBillete) == 130)
                        {
                            otherFactTonnage = 0.51;
                            otherFactTonnageBrut = 0.53;
                        }
                        #region//cisaillées
                        updtProd.Poste1C = otherLast.NbrCisaille + last.NbrCisaille;
                        updtProd.TonnageCisaille1 = otherLast.NbrCisaille* otherFactTonnage + last.NbrCisaille * factTonnage;
                        updtProd.TonnageCisaille1 = (double)System.Math.Round((decimal)updtProd.TonnageCisaille1, 2);
                        #endregion

                        #region//Expulsées
                        updtProd.Poste1E = otherLast.NbrExpulsee+last.NbrExpulsee;
                        #endregion

                        #region//Fardeaux
                        updtProd.Poste1F = otherLast.NbrFardeaux + last.NbrFardeaux;
                        updtProd.TonnageFardeau1 = otherLast.NbrFardeaux* otherFactTonnage + last.NbrFardeaux * factTonnage;
                        updtProd.TonnageFardeau1 = (double)System.Math.Round((decimal)updtProd.TonnageFardeau1, 2);
                        #endregion

                        #region//Relaisées
                        updtProd.Poste1R = otherLast.NbrRealisee + last.NbrRealisee;
                        updtProd.Tonnage1 = otherLast.NbrRealisee* otherFactTonnage + last.NbrRealisee * factTonnage;
                        updtProd.TonnageH1 = updtProd.Tonnage1 / 24;
                        updtProd.TonnageBrutH1 = (otherLast.NbrRealisee * otherFactTonnageBrut + last.NbrRealisee * factTonnageBrut) / 24;
                        updtProd.Tonnage1 = (double)System.Math.Round((decimal)updtProd.Tonnage1, 2);
                        updtProd.TonnageH1 = (double)System.Math.Round((decimal)updtProd.TonnageH1, 2);
                        updtProd.TonnageBrutH1 = (double)System.Math.Round((decimal)updtProd.TonnageBrutH1, 2);
                        #endregion
                        Poste3IsNull(updtProd);
                        Poste2IsNull(updtProd);
                        updtProd.SommeR = updtProd.Poste1R + updtProd.Poste2R + updtProd.Poste3R;
                        updtProd.SommeC = updtProd.Poste1C + updtProd.Pote2C + updtProd.Poste3C;
                        updtProd.SommeF = updtProd.Poste1F + updtProd.Poste2F + updtProd.Poste3F;
                        updtProd.SommeE = updtProd.Poste1E + updtProd.Poste2E + updtProd.Poste3E;

                        updtProd.TonnageCisaille = updtProd.TonnageCisaille1 + updtProd.TonnageCisaille2 + updtProd.TonnageCisaille3;
                        updtProd.TonnageCisaille = (double)System.Math.Round((decimal)updtProd.TonnageCisaille, 2);

                        updtProd.TonnageFardeau = updtProd.TonnageFardeau1+ updtProd.TonnageFardeau2+ updtProd.TonnageFardeau3;
                        updtProd.TonnageFardeau = (double)System.Math.Round((decimal)updtProd.TonnageFardeau, 2);

                        updtProd.Tonnage = updtProd.Tonnage1 + updtProd.Tonnage2 + updtProd.Tonnage3;
                        updtProd.Tonnage = (double)System.Math.Round((decimal)updtProd.Tonnage, 2);

                        updtProd.TonnageDefournee1 = (updtProd.TonnageCisaille1 + updtProd.Tonnage1);
                        updtProd.TonnageDefournee1 = (double)System.Math.Round((decimal)updtProd.TonnageDefournee1, 2);

                        updtProd.TonnageDefournee = updtProd.TonnageDefournee1 + updtProd.TonnageDefournee2 + updtProd.TonnageDefournee3;
                        updtProd.TonnageDefournee = (double)System.Math.Round((decimal)updtProd.TonnageDefournee, 2);

                        _context.ProdTotaux.Update(updtProd);
                        await _context.SaveChangesAsync();
                        return 1;
                    }
                }
                else
                {
                    //there is no subPoste
                    return 0;
                }
            }
            else
            {
                //there is no subPoste
                return 0;
            }
        }
        public async Task<int> CheckManyBillettesSamePoste2(JourneeProduction model, ProdTotaux updtProd, JourneeProduction oldModel)
        {
            //We check if there is another billete in this poste
            var prodTotauxListToCheck = _context.JourneeProduction
                .Where(c => c.Date == model.Date)
                .Where(c => c.Poste == model.Poste)
                .Where(c => c.NumRapport == model.NumRapport)
                .Select(i => new
                {
                    i.NbrCisaille,
                    i.NbrDefourne,
                    i.NbrExpulsee,
                    i.NbrFardeaux,
                    i.NbrRealisee,
                    i.DimBillete
                }).ToList();
            var theOtherPoste = _context.JourneeProduction
                .Where(c => c.Date == model.Date)
                .Where(c => c.Poste == model.Poste)
                .Where(c => c.NumRapport != model.NumRapport)
                .Select(i => new
                {
                    i.NbrCisaille,
                    i.NbrDefourne,
                    i.NbrExpulsee,
                    i.NbrFardeaux,
                    i.NbrRealisee,
                    i.DimBillete
                }).ToList();
            //If there is we do get it and save it that we add it to this billette
            if (prodTotauxListToCheck.Count > 0)
            {

                var factTonnage = 0.0;
                var factTonnageBrut = 0.0;
                var oldFactTonnage = 0.0;
                var oldFactTonnageBrut = 0.0;
                var otherFactTonnage = 0.0;
                var otherFactTonnageBrut = 0.0;
                var last = prodTotauxListToCheck.Last();
                if (Convert.ToInt64(last.DimBillete) == 125)
                {
                    factTonnage = 0.45;
                    factTonnageBrut = 0.47;
                }
                if (Convert.ToInt64(last.DimBillete) == 130)
                {
                    factTonnage = 0.51;
                    factTonnageBrut = 0.53;
                }

                //check if it is an update or it is an inert
                // if it is an insert
                // if the prototaux value equal to the other pote value
                // the init just add
                if(theOtherPoste.Count > 0)
                {
                    var otherLast = theOtherPoste.Last();
                    if (updtProd.Poste2R == otherLast.NbrRealisee && updtProd.Poste2E == otherLast.NbrExpulsee && updtProd.Pote2C == otherLast.NbrCisaille)
                    {


                        #region//cisaillées
                        updtProd.TonnageCisaille2 += last.NbrCisaille * factTonnage;
                        updtProd.Pote2C += last.NbrCisaille;
                        updtProd.SommeC += last.NbrCisaille;
                        updtProd.TonnageCisaille += last.NbrCisaille * factTonnage;
                        #endregion

                        #region//Explusées
                        updtProd.Poste2E += last.NbrExpulsee;
                        updtProd.SommeE += updtProd.Poste2E;
                        #endregion

                        #region//Fardeaux
                        updtProd.Poste2F += last.NbrFardeaux;
                        updtProd.TonnageFardeau2 += last.NbrFardeaux * factTonnage;
                        updtProd.SommeF += last.NbrFardeaux;
                        updtProd.TonnageFardeau += last.NbrFardeaux * factTonnage;
                        updtProd.TonnageFardeau2 = (double)System.Math.Round((decimal)updtProd.TonnageFardeau2, 2);
                        updtProd.TonnageFardeau = (double)System.Math.Round((decimal)updtProd.TonnageFardeau, 2);
                        #endregion

                        #region//Realiséées
                        updtProd.Poste2R += last.NbrRealisee;
                        updtProd.SommeR += last.NbrRealisee;
                        updtProd.Tonnage2 += last.NbrRealisee * factTonnage;
                        updtProd.TonnageH2 += last.NbrRealisee * factTonnage / 24;
                        updtProd.TonnageBrutH2 += last.NbrRealisee * factTonnageBrut / 24;
                        updtProd.Tonnage2 = (double)System.Math.Round((decimal)updtProd.Tonnage2, 2);
                        updtProd.TonnageH2 = (double)System.Math.Round((decimal)updtProd.TonnageH2, 2);
                        updtProd.TonnageBrutH2 = (double)System.Math.Round((decimal)updtProd.TonnageBrutH2, 2);
                        #endregion
                        updtProd.TonnageDefournee2 = (updtProd.Pote2C + updtProd.Poste2R) * factTonnage;
                        updtProd.TonnageDefournee2 = (double)System.Math.Round((decimal)updtProd.TonnageDefournee2, 2);

                        _context.ProdTotaux.Update(updtProd);
                        await _context.SaveChangesAsync();
                        return 1;
                    }
                    else
                    {

                        // if not -> it is an update
                        // we substruct from prodtotaux the old we add the new value 
                        if (Convert.ToInt64(oldModel.DimBillete) == 125)
                        {
                            oldFactTonnage = 0.45;
                            oldFactTonnageBrut = 0.47;
                        }
                        if (Convert.ToInt64(oldModel.DimBillete) == 130)
                        {
                            oldFactTonnage = 0.51;
                            oldFactTonnageBrut = 0.53;
                        }
                        if (Convert.ToInt64(otherLast.DimBillete) == 125)
                        {
                            otherFactTonnage = 0.45;
                            otherFactTonnageBrut = 0.47;
                        }
                        if (Convert.ToInt64(otherLast.DimBillete) == 130)
                        {
                            otherFactTonnage = 0.51;
                            otherFactTonnageBrut = 0.53;
                        }
                        #region//cisaillées
                        updtProd.Pote2C = otherLast.NbrCisaille + last.NbrCisaille;
                        updtProd.TonnageCisaille2 = otherLast.NbrCisaille * otherFactTonnage + last.NbrCisaille * factTonnage;
                        updtProd.TonnageCisaille2 = (double)System.Math.Round((decimal)updtProd.TonnageCisaille2, 2);
                        #endregion

                        #region//Expulsées
                        updtProd.Poste2E = otherLast.NbrExpulsee + last.NbrExpulsee;
                        #endregion

                        #region//Fardeaux
                        updtProd.Poste2F = otherLast.NbrFardeaux + last.NbrFardeaux;
                        updtProd.TonnageFardeau2 = otherLast.NbrFardeaux * otherFactTonnage + last.NbrFardeaux * factTonnage;
                        updtProd.TonnageFardeau2 = (double)System.Math.Round((decimal)updtProd.TonnageFardeau2, 2);
                        #endregion
                            
                        #region//Relaisées
                        updtProd.Poste2R = otherLast.NbrRealisee + last.NbrRealisee;
                        updtProd.Tonnage2 = otherLast.NbrRealisee * otherFactTonnage + last.NbrRealisee * factTonnage;
                        updtProd.TonnageH2 = updtProd.Tonnage2 / 24;
                        updtProd.TonnageBrutH2 = (otherLast.NbrRealisee * otherFactTonnageBrut + last.NbrRealisee * factTonnageBrut) / 24;
                        updtProd.Tonnage2 = (double)System.Math.Round((decimal)updtProd.Tonnage2, 2);
                        updtProd.TonnageH2 = (double)System.Math.Round((decimal)updtProd.TonnageH2, 2);
                        updtProd.TonnageBrutH2 = (double)System.Math.Round((decimal)updtProd.TonnageBrutH2, 2);
                        #endregion
                        Poste3IsNull(updtProd);
                        Poste1IsNull(updtProd);
                        updtProd.SommeR = updtProd.Poste1R + updtProd.Poste2R + updtProd.Poste3R;
                        updtProd.SommeC = updtProd.Poste1C + updtProd.Pote2C + updtProd.Poste3C;
                        updtProd.SommeF = updtProd.Poste1F + updtProd.Poste2F + updtProd.Poste3F;
                        updtProd.SommeE = updtProd.Poste1E + updtProd.Poste2E + updtProd.Poste3E;

                        updtProd.TonnageCisaille = updtProd.TonnageCisaille1 + updtProd.TonnageCisaille2 + updtProd.TonnageCisaille3;
                        updtProd.TonnageCisaille = (double)System.Math.Round((decimal)updtProd.TonnageCisaille, 2);

                        updtProd.TonnageFardeau = updtProd.TonnageFardeau1 + updtProd.TonnageFardeau2 + updtProd.TonnageFardeau3;
                        updtProd.TonnageFardeau = (double)System.Math.Round((decimal)updtProd.TonnageFardeau, 2);

                        updtProd.Tonnage = updtProd.Tonnage1 + updtProd.Tonnage2 + updtProd.Tonnage3;
                        updtProd.Tonnage = (double)System.Math.Round((decimal)updtProd.Tonnage, 2);

                        updtProd.TonnageDefournee2 = (updtProd.TonnageCisaille2 + updtProd.Tonnage2);
                        updtProd.TonnageDefournee2 = (double)System.Math.Round((decimal)updtProd.TonnageDefournee2, 2);

                        updtProd.TonnageDefournee = updtProd.TonnageDefournee1 + updtProd.TonnageDefournee2 + updtProd.TonnageDefournee3;
                        updtProd.TonnageDefournee = (double)System.Math.Round((decimal)updtProd.TonnageDefournee, 2);

                        _context.ProdTotaux.Update(updtProd);
                        await _context.SaveChangesAsync();
                        return 1;
                    }
                }
                else
                {
                    //there is no subPoste
                    return 0;
                }
            }
            else
            {
                //there is no subPoste
                return 0;
            }
        }
        public void CheckManyBillettesSamePoste3(JourneeProduction model, ProdTotaux updtProd)
        {
            //We check if there is another billete in this poste
            var prodTotauxListToCheck = _context.JourneeProduction
                .Where(c => c.Date == model.Date)
                .Where(c => c.Poste == model.Poste)
                .Where(c => c.NumRapport != model.NumRapport)
                .Select(i => new
                {
                    i.NbrCisaille,
                    i.NbrDefourne,
                    i.NbrExpulsee,
                    i.NbrFardeaux,
                    i.NbrRealisee
                }).ToList();
            //If there is we do get it and save it that we add it to this billette
            if (prodTotauxListToCheck.Count > 0)
            {
                var last = prodTotauxListToCheck.Last();
                updtProd.Poste3C += last.NbrCisaille;
                updtProd.Poste3E += last.NbrExpulsee;
                updtProd.Poste3F += last.NbrFardeaux;
                updtProd.Poste3R += last.NbrRealisee;
            }
        }
        public void Poste3IsNull(ProdTotaux updtProd)
        {
            if (updtProd.Poste3C == null)
                updtProd.Poste3C = 0;
            if (updtProd.Poste3E == null)
                updtProd.Poste3E = 0;
            if (updtProd.Poste3F == null)
                updtProd.Poste3F = 0;
            if (updtProd.Poste3R == null)
                updtProd.Poste3R = 0;

        }
        public void Poste2IsNull(ProdTotaux updtProd)
        {
            if (updtProd.Pote2C == null)
                updtProd.Pote2C = 0;
            if (updtProd.Poste2E == null)
                updtProd.Poste2E = 0;
            if (updtProd.Poste2F == null)
                updtProd.Poste2F = 0;
            if (updtProd.Poste2R == null)
                updtProd.Poste2R = 0;

        }
        public void Poste1IsNull(ProdTotaux updtProd)
        {
            if (updtProd.Poste1C == null)
                updtProd.Poste1C = 0;
            if (updtProd.Poste1E == null)
                updtProd.Poste1E = 0;
            if (updtProd.Poste1F == null)
                updtProd.Poste1F = 0;
            if (updtProd.Poste1R == null)
                updtProd.Poste1R = 0;

        }
        public async Task<int> CalculateTonnageInUpdateProduction
            (JourneeProduction model, List<ProdTonnagesCagesModel> prodTonnagesCagesModels, 
            ProdTonnagesCagesModel LastprodTonnagesCagesModel, double total, List<int> rapportsNum, 
            List<ProductionJourneeModel> productionJourneeModels,int NbrPostes)
        {
            if (prodTonnagesCagesModels.Count ==0)
            {
                return 0;
            }
            else
            {
                //Check if this poste Has Tonnage Calculated
                var TonnagesList = _context.ProdTonnagesCages
                    .AsNoTracking()
                    .Select(i => new
                    {
                        i.Id,
                        i.DateJournee,
                        i.Cage01,
                        i.Cage02,
                        i.Cage03,
                        i.Cage04,
                        i.Cage05,
                        i.Cage06,
                        i.Cage07,
                        i.Cage08,
                        i.Cage09,
                        i.Cage10,
                        i.Cage11,
                        i.Cage12,
                        i.Cage13
                    }).ToList();
                var id = 0;
                foreach (var itemTonnagesList in TonnagesList)
                {
                    if (itemTonnagesList.DateJournee.Date == model.Date.Date)
                    {
                        id = itemTonnagesList.Id;
                    }
                }//Get its Id if it does Exist
                if (id == 0)
                {
                    ProdTonnagesCages newTonnage = new ProdTonnagesCages();
                    newTonnage.Id = TonnagesList.Last().Id + 1;
                    newTonnage.DateJournee = model.Date;
                    newTonnage.Cage01 = Convert.ToString(XpertHelper.Total);
                    newTonnage.Cage02 = Convert.ToString(XpertHelper.Total);
                    newTonnage.Cage03 = Convert.ToString(XpertHelper.Total);
                    newTonnage.Cage04 = Convert.ToString(XpertHelper.Total);
                    newTonnage.Cage05 = Convert.ToString(XpertHelper.Total);
                    newTonnage.Cage06 = Convert.ToString(XpertHelper.Total);
                    newTonnage.Cage07 = Convert.ToString(XpertHelper.Total);
                    newTonnage.Cage08 = Convert.ToString(XpertHelper.Total);
                    newTonnage.Cage09 = Convert.ToString(XpertHelper.Total);
                    newTonnage.Cage10 = Convert.ToString(XpertHelper.Total);
                    newTonnage.Cage11 = Convert.ToString(XpertHelper.Total);
                    newTonnage.Cage12 = Convert.ToString(XpertHelper.Total);
                    newTonnage.Cage13 = Convert.ToString(XpertHelper.Total);
                    _context.ProdTonnagesCages.Add(newTonnage);
                    await _context.SaveChangesAsync();

                }//If it does not exist
                foreach (var item in prodTonnagesCagesModels)
                {
                    ProdTonnagesCages updtModel = new ProdTonnagesCages();
                    if (item.DateJournee == model.Date)
                    {
                        var updt = await _context.ProdTonnagesCages.AsNoTracking().Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
                        updtModel.Cage01 = updt.Cage01;
                        updtModel.Cage02 = updt.Cage02;
                        updtModel.Cage03 = updt.Cage03;
                        updtModel.Cage04 = updt.Cage04;
                        updtModel.Cage05 = updt.Cage05;
                        updtModel.Cage06 = updt.Cage06;
                        updtModel.Cage07 = updt.Cage07;
                        updtModel.Cage08 = updt.Cage08;
                        updtModel.Cage09 = updt.Cage09;
                        updtModel.Cage10 = updt.Cage10;
                        updtModel.Cage11 = updt.Cage11;
                        updtModel.Cage12 = updt.Cage12;
                        updtModel.Cage13 = updt.Cage13;
                        updtModel.DateJournee = updt.DateJournee;
                        updtModel.Id = updt.Id;
                        //First calcul tonnage without arret
                        int indexe = item.Id - 1;
                        var Lt = prodTonnagesCagesModels[indexe - 1];
                        ProdTonnagesCagesModel previousTonnagemodel = new ProdTonnagesCagesModel();
                        previousTonnagemodel.Cage01 = Lt.Cage01;
                        previousTonnagemodel.Cage02 = Lt.Cage02;
                        previousTonnagemodel.Cage03 = Lt.Cage03;
                        previousTonnagemodel.Cage04 = Lt.Cage04;
                        previousTonnagemodel.Cage05 = Lt.Cage05;
                        previousTonnagemodel.Cage06 = Lt.Cage06;
                        previousTonnagemodel.Cage07 = Lt.Cage07;
                        previousTonnagemodel.Cage08 = Lt.Cage08;
                        previousTonnagemodel.Cage09 = Lt.Cage09;
                        previousTonnagemodel.Cage10 = Lt.Cage10;
                        previousTonnagemodel.Cage11 = Lt.Cage11;
                        previousTonnagemodel.Cage12 = Lt.Cage12;
                        previousTonnagemodel.Cage13 = Lt.Cage13;


                        #region//First acalcul tonnage without arret
                        var Lat = LastprodTonnagesCagesModel;
                        //get previous one
                        if (Lt.Cage01.Contains("-"))
                        {
                            var splited = Lt.Cage01.Split("-");
                            var ns = double.Parse(splited[1]);
                            var ps = (double)total + ns;
                            ps = (double)System.Math.Round(ps, 2);
                            updtModel.Cage01 = Convert.ToString(ps);
                        }
                        else
                        {
                            var nC1 = Convert.ToDouble(Lt.Cage01.ToString());
                            var pC1 = (double)total + nC1;
                            pC1 = (double)System.Math.Round(pC1, 2);
                            updtModel.Cage01 = Convert.ToString(pC1);
                        }

                        if (Lt.Cage02.Contains("-"))
                        {
                            var splited = Lt.Cage02.Split("-");
                            var ns = double.Parse(splited[1]);
                            var ps = (double)total + ns;
                            ps = (double)System.Math.Round(ps, 2);
                            updtModel.Cage02 = Convert.ToString(ps);
                        }
                        else
                        {
                            var nC1 = Convert.ToDouble(Lt.Cage02.ToString());
                            var pC1 = (double)total + nC1;
                            pC1 = (double)System.Math.Round(pC1, 2);
                            updtModel.Cage02 = Convert.ToString(pC1);
                        }

                        if (Lt.Cage03.Contains("-"))
                        {
                            var splited = Lt.Cage03.Split("-");
                            var ns = double.Parse(splited[1]);
                            var ps = (double)total + ns;
                            ps = (double)System.Math.Round(ps, 2);
                            updtModel.Cage03 = Convert.ToString(ps);
                        }
                        else
                        {
                            var nC1 = Convert.ToDouble(Lt.Cage03.ToString());
                            var pC1 = (double)total + nC1;
                            pC1 = (double)System.Math.Round(pC1, 2);
                            updtModel.Cage03 = Convert.ToString(pC1);
                        }

                        if (Lt.Cage04.Contains("-"))
                        {
                            var splited = Lt.Cage04.Split("-");
                            var ns = double.Parse(splited[1]);
                            var ps = (double)total + ns;
                            ps = (double)System.Math.Round(ps, 2);
                            updtModel.Cage04 = Convert.ToString(ps);
                        }
                        else
                        {
                            var nC1 = Convert.ToDouble(Lt.Cage04.ToString());
                            var pC1 = (double)total + nC1;
                            pC1 = (double)System.Math.Round(pC1, 2);
                            updtModel.Cage04 = Convert.ToString(pC1);
                        }

                        if (Lt.Cage05.Contains("-"))
                        {
                            var splited = Lt.Cage05.Split("-");
                            var ns = double.Parse(splited[1]);
                            var ps = (double)total + ns;
                            ps = (double)System.Math.Round(ps, 2);
                            updtModel.Cage05 = Convert.ToString(ps);
                        }
                        else
                        {
                            var nC1 = Convert.ToDouble(Lt.Cage05.ToString());
                            var pC1 = (double)total + nC1;
                            pC1 = (double)System.Math.Round(pC1, 2);
                            updtModel.Cage05 = Convert.ToString(pC1);
                        }

                        if (Lt.Cage06.Contains("-"))
                        {
                            var splited = Lt.Cage06.Split("-");
                            var ns = double.Parse(splited[1]);
                            var ps = (double)total + ns;
                            ps = (double)System.Math.Round(ps, 2);
                            updtModel.Cage06 = Convert.ToString(ps);
                        }
                        else
                        {
                            var nC1 = Convert.ToDouble(Lt.Cage06.ToString());
                            var pC1 = (double)total + nC1;
                            pC1 = (double)System.Math.Round(pC1, 2);
                            updtModel.Cage06 = Convert.ToString(pC1);
                        }

                        if (Lt.Cage07.Contains("-"))
                        {
                            var splited = Lt.Cage07.Split("-");
                            var ns = double.Parse(splited[1]);
                            var ps = (double)total + ns;
                            ps = (double)System.Math.Round(ps, 2);
                            updtModel.Cage07 = Convert.ToString(ps);
                        }
                        else
                        {
                            var nC1 = Convert.ToDouble(Lt.Cage07.ToString());
                            var pC1 = (double)total + nC1;
                            pC1 = (double)System.Math.Round(pC1, 2);
                            updtModel.Cage07 = Convert.ToString(pC1);
                        }

                        if (Lt.Cage08.Contains("-"))
                        {
                            var splited = Lt.Cage08.Split("-");
                            var ns = double.Parse(splited[1]);
                            var ps = (double)total + ns;
                            ps = (double)System.Math.Round(ps, 2);
                            updtModel.Cage08 = Convert.ToString(ps);
                        }
                        else
                        {
                            var nC1 = Convert.ToDouble(Lt.Cage08.ToString());
                            var pC1 = (double)total + nC1;
                            pC1 = (double)System.Math.Round(pC1, 2);
                            updtModel.Cage08 = Convert.ToString(pC1);
                        }

                        if (Lt.Cage09.Contains("-"))
                        {
                            var splited = Lt.Cage09.Split("-");
                            var ns = double.Parse(splited[1]);
                            var ps = (double)total + ns;
                            ps = (double)System.Math.Round(ps, 2);
                            updtModel.Cage09 = Convert.ToString(ps);
                        }
                        else
                        {
                            var nC1 = Convert.ToDouble(Lt.Cage09.ToString());
                            var pC1 = (double)total + nC1;
                            pC1 = (double)System.Math.Round(pC1, 2);
                            updtModel.Cage09 = Convert.ToString(pC1);
                        }

                        if (Lt.Cage10.Contains("-"))
                        {
                            var splited = Lt.Cage10.Split("-");
                            var ns = double.Parse(splited[1]);
                            var ps = (double)total + ns;
                            ps = (double)System.Math.Round(ps, 2);
                            updtModel.Cage10 = Convert.ToString(ps);
                        }
                        else
                        {
                            var nC1 = Convert.ToDouble(Lt.Cage10.ToString());
                            var pC1 = (double)total + nC1;
                            pC1 = (double)System.Math.Round(pC1, 2);
                            updtModel.Cage10 = Convert.ToString(pC1);
                        }

                        if (Lt.Cage11.Contains("-"))
                        {
                            var splited = Lt.Cage11.Split("-");
                            var ns = double.Parse(splited[1]);
                            var ps = (double)total + ns;
                            ps = (double)System.Math.Round(ps, 2);
                            updtModel.Cage11 = Convert.ToString(ps);
                        }
                        else
                        {
                            var nC1 = Convert.ToDouble(Lt.Cage11.ToString());
                            var pC1 = (double)total + nC1;
                            pC1 = (double)System.Math.Round(pC1, 2);
                            updtModel.Cage11 = Convert.ToString(pC1);
                        }

                        if (Lt.Cage12.Contains("-"))
                        {
                            var splited = Lt.Cage12.Split("-");
                            var ns = double.Parse(splited[1]);
                            var ps = (double)total + ns;
                            ps = (double)System.Math.Round(ps, 2);
                            updtModel.Cage12 = Convert.ToString(ps);
                        }
                        else
                        {
                            var nC1 = Convert.ToDouble(Lt.Cage12.ToString());
                            var pC1 = (double)total + nC1;
                            pC1 = (double)System.Math.Round(pC1, 2);
                            updtModel.Cage12 = Convert.ToString(pC1);
                        }

                        if (Lt.Cage13.Contains("-"))
                        {
                            var splited = Lt.Cage13.Split("-");
                            var ns = double.Parse(splited[1]);
                            var ps = (double)total + ns;
                            ps = (double)System.Math.Round(ps, 2);
                            updtModel.Cage13 = Convert.ToString(ps);
                        }
                        else
                        {
                            var nC1 = Convert.ToDouble(Lt.Cage13.ToString());
                            var pC1 = (double)total + nC1;
                            pC1 = (double)System.Math.Round(pC1, 2);
                            updtModel.Cage13 = Convert.ToString(pC1);
                        }
                        #endregion
                        // Ajout du cas Diff Rapport
                        // get repports of all PorductionJ

                        //Navigate throgh each elem
                        // Calculation
                        // 1 st we get prepartion calibres ou cylindres
                        // In cas put it here

                        //2nd in case there is arret 
                        //===========================

                        var arretes = _context.ArretProductionJournee.Where(c => c.DateArret == model.Date)
                         .AsNoTracking()
                        .Select(i => new {
                            i.NumRapport,
                            i.SubMachine,
                            i.NbrBilleteDefournees,
                            i.NbrBilleteRejetees,
                            i.NbrBilleteCisalleTrio,
                            i.NbrBilleteRealisees,
                            i.NbrBilleteCisalleFinisseuse,
                            i.EnumArret
                        }).ToList();
                        List<ArretProductionJourneeModel> arretProductionJourneeModels = new List<ArretProductionJourneeModel>();
                        foreach (var itemarretProductionJourneeModels in arretes)
                        {
                            if (itemarretProductionJourneeModels.SubMachine != null || itemarretProductionJourneeModels.EnumArret.Equals("PS"))
                            {
                                ArretProductionJourneeModel arretProductionJourneeModel = new ArretProductionJourneeModel();
                                arretProductionJourneeModel.NumRapport = itemarretProductionJourneeModels.NumRapport;
                                arretProductionJourneeModel.SubMachine = itemarretProductionJourneeModels.SubMachine;
                                arretProductionJourneeModel.NbrBilleteCisalleFinisseuse = itemarretProductionJourneeModels.NbrBilleteCisalleFinisseuse;
                                arretProductionJourneeModel.NbrBilleteCisalleTrio = itemarretProductionJourneeModels.NbrBilleteCisalleTrio;
                                arretProductionJourneeModel.NbrBilleteDefournees = itemarretProductionJourneeModels.NbrBilleteDefournees;
                                arretProductionJourneeModel.NbrBilleteRealisees = itemarretProductionJourneeModels.NbrBilleteRealisees;
                                arretProductionJourneeModel.NbrBilleteRejetees = itemarretProductionJourneeModels.NbrBilleteRejetees;
                                arretProductionJourneeModel.EnumArret = itemarretProductionJourneeModels.EnumArret;
                                arretProductionJourneeModels.Add(arretProductionJourneeModel);
                            }
                        }
                        // Arrets Computing
                        ArretsComputing(arretProductionJourneeModels, model, previousTonnagemodel, productionJourneeModels, total, NbrPostes, updtModel, rapportsNum);
                        // Prepartion Computing
                        // First we get when RealiseAtPs
                        PreparationComputing(model, total, rapportsNum, productionJourneeModels, updtModel);
                        updtModel.Cage07 = updtModel.Cage06;
                        _context.ProdTonnagesCages.Update(updtModel);
                        await _context.SaveChangesAsync();
                    }
                }
            }
            return 0;
        }
        //=================ComputingTonnagesMethodes=====
        public void InitTonnage(ProdTonnagesCages tonnage)
        {
            var prodTotauxList = _context.ProdTonnagesCages.AsNoTracking()
             .Select(i => new
             {
                 i.Id
             }).ToList();
            var lastId = prodTotauxList.Last();
            if (prodTotauxList.Count == 0)
                tonnage.Id = 1;
            else
                tonnage.Id = lastId.Id+1;
            tonnage.Cage01 = Convert.ToString(0.0);
            tonnage.Cage02 = Convert.ToString(0.0);
            tonnage.Cage03 = Convert.ToString(0.0);
            tonnage.Cage04 = Convert.ToString(0.0);
            tonnage.Cage05 = Convert.ToString(0.0);
            tonnage.Cage06 = Convert.ToString(0.0);
            tonnage.Cage07 = Convert.ToString(0.0);
            tonnage.Cage08 = Convert.ToString(0.0);
            tonnage.Cage09 = Convert.ToString(0.0);
            tonnage.Cage10 = Convert.ToString(0.0);
            tonnage.Cage11 = Convert.ToString(0.0);
            tonnage.Cage12 = Convert.ToString(0.0);
            tonnage.Cage13 = Convert.ToString(0.0);
        }
        public void PreparationComputing
            (JourneeProduction model, double total, List<int> rapportsNum,
            List<ProductionJourneeModel> productionJourneeModels, ProdTonnagesCages updt)
        {
            foreach (var itemrapportsNum in rapportsNum)
            {
                var postes =  _context.JourneeProduction.Where(c => c.NumRapportPreparation == itemrapportsNum)
                    .AsNoTracking()
                    .Select(i => new {
                        i.Poste
                    }).ToList();
                var poste = postes.Last();
                var raeliseAtPs = 0;
                if (poste.Poste == 1)
                {
                    raeliseAtPs = XpertHelper.RealiseAtPs1;
                }
                if (poste.Poste == 2)
                {
                    raeliseAtPs = XpertHelper.RealiseAtPs2;
                }
                if (poste.Poste == 3)
                {
                    raeliseAtPs = XpertHelper.RealiseAtPs3;
                }
                var cylindres =  _context.ProdPreparationCylindre.Where(c => c.NumRapport == itemrapportsNum)
                    .AsNoTracking()
                    .Select(i => new {
                        i.CodeMachine
                    }).ToList();
                if (cylindres.Count > 0)
                {
                    var LastCylindre = cylindres.Last();
                    //CalculateTonnageOfPreparation
                    foreach (var itemcylindres in cylindres)
                    {
                        if (itemcylindres.CodeMachine == 3)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage01 = Convert.ToString(XpertHelper.Total);
                            }
                            if (model.Poste == 2)
                            {
                                var New = 0.0;
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage125);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage01 = Convert.ToString(New);
                                }
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage130);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage01 = Convert.ToString(New);
                                }
                            }
                            if (model.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee- raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage01 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage01 = Convert.ToString(modified);
                                }
                            }
                        }//Cage01
                        if (itemcylindres.CodeMachine == 4)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage02 = Convert.ToString(XpertHelper.Total);
                            }
                            if (model.Poste == 2)
                            {
                                var New = 0.0;
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage125);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage02 = Convert.ToString(New);
                                }
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage130);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage02 = Convert.ToString(New);
                                }
                            }
                            if (model.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs )* XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage02 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs )* XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage02 = Convert.ToString(modified);
                                }
                            }
                        }//Cage02
                        if (itemcylindres.CodeMachine == 5)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage03 = Convert.ToString(XpertHelper.Total);
                            }

                            if (model.Poste == 2)
                            {
                                var New = 0.0;
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage125);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage03 = Convert.ToString(New);
                                }
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage130);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage03 = Convert.ToString(New);
                                }
                            }
                            if (model.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage03 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage03 = Convert.ToString(modified);
                                }
                            }
                        }//Cage03
                        if (itemcylindres.CodeMachine == 6)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage04 = Convert.ToString(XpertHelper.Total);
                            }
                            if (model.Poste == 2)
                            {
                                var New = 0.0;
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage125);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage04 = Convert.ToString(New);
                                }
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage130);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage04 = Convert.ToString(New);
                                }
                            }
                            if (model.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage04 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage04 = Convert.ToString(modified);
                                }
                            }
                        }//Cage04
                        if (itemcylindres.CodeMachine == 7)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage05 = Convert.ToString(XpertHelper.Total);
                            }
                            if (model.Poste == 2)
                            {
                                var New = 0.0;
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage125);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage05 = Convert.ToString(New);
                                }
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage130);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage05 = Convert.ToString(New);
                                }
                            }
                            if (model.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage05 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage05 = Convert.ToString(modified);
                                }
                            }
                        }//Cage05
                        if (itemcylindres.CodeMachine == 8)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage06 = Convert.ToString(XpertHelper.Total);
                            }
                            if (model.Poste == 2)
                            {
                                var New = 0.0;
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage125);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage06 = Convert.ToString(New);
                                }
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage130);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage06 = Convert.ToString(New);
                                }
                            }
                            if (model.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage06 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage06 = Convert.ToString(modified);
                                }
                            }
                        }//Cage06
                        if (itemcylindres.CodeMachine == 26)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage07 = Convert.ToString(XpertHelper.Total);
                            }
                            if (model.Poste == 2)
                            {
                                var New = 0.0;
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage125);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage07 = Convert.ToString(New);
                                }
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage130);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage07 = Convert.ToString(New);
                                }
                            }
                            if (model.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage07 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage07 = Convert.ToString(modified);
                                }
                            }
                        }//Cage07
                        if (itemcylindres.CodeMachine == 9)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage08 = Convert.ToString(XpertHelper.Total);
                            }
                            if (model.Poste == 2)
                            {
                                var New = 0.0;
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage125);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage08 = Convert.ToString(New);
                                }
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage130);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage08 = Convert.ToString(New);
                                }
                            }
                            if (model.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage08 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage08 = Convert.ToString(modified);
                                }
                            }
                        }//Cage08
                        if (itemcylindres.CodeMachine == 10)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage09 = Convert.ToString(XpertHelper.Total);
                            }
                            if (model.Poste == 2)
                            {
                                var New = 0.0;
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage125);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage09 = Convert.ToString(New);
                                }
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage130);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage09 = Convert.ToString(New);
                                }
                            }
                            if (model.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage09 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage09 = Convert.ToString(modified);
                                }
                            }
                        }//Cage09
                        if (itemcylindres.CodeMachine == 11)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage10 = Convert.ToString(XpertHelper.Total);
                            }
                            if (model.Poste == 2)
                            {
                                var New = 0.0;
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage125);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage10 = Convert.ToString(New);
                                }
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage130);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage10 = Convert.ToString(New);
                                }
                            }
                            if (model.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage10 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage10 = Convert.ToString(modified);
                                }
                            }
                        }//Cage10
                        if (itemcylindres.CodeMachine == 12)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage11 = Convert.ToString(XpertHelper.Total);
                            }
                            if (model.Poste == 2)
                            {
                                var New = 0.0;
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage125);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage11 = Convert.ToString(New);
                                }
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage130);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage11 = Convert.ToString(New);
                                }
                            }
                            if (model.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage11 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage11 = Convert.ToString(modified);
                                }
                            }
                        }//Cage11
                        if (itemcylindres.CodeMachine == 13)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage12 = Convert.ToString(XpertHelper.Total);
                            }
                            if (model.Poste == 2)
                            {
                                var New = 0.0;
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage125);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage12 = Convert.ToString(New);
                                }
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage130);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage12 = Convert.ToString(New);
                                }
                            }
                            if (model.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage12 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage12 = Convert.ToString(modified);
                                }
                            }
                        }//Cage12
                        if (itemcylindres.CodeMachine == 14)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage13 = Convert.ToString(XpertHelper.Total);
                            }
                            if (model.Poste == 2)
                            {
                                var New = 0.0;
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage125);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage13 = Convert.ToString(New);
                                }
                                if (Convert.ToInt64(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    New += Convert.ToDouble(productionJourneeModels[0].NbrRealisee * XpertHelper.NetTonnage130);
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    }
                                    if (Convert.ToInt64(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        New += Convert.ToDouble((productionJourneeModels[1].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    }
                                    New = (double)System.Math.Round(New, 2);
                                    updt.Cage13 = Convert.ToString(New);
                                }
                            }
                            if (model.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage13 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage13 = Convert.ToString(modified);
                                }
                            }
                        }//Cage13
                    }
                }
                var calibres =   _context.ProdPreparationCalibre.Where(c => c.NumRapport == itemrapportsNum)
                    .AsNoTracking()
                    .Select(i => new {
                        i.CodeMachine
                    }).ToList();
                if (calibres.Count > 0)
                {
                    var LastCalibres = calibres.Last();
                    //CalculateTonnageOfPreparation
                    foreach (var itemcalibres in calibres)
                    {
                        if (itemcalibres.CodeMachine == 3)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage01 = Convert.ToString(XpertHelper.Total);
                            }
                            if (poste.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage01 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage01 = Convert.ToString(modified);
                                }
                            }
                        }//Cage01
                        if (itemcalibres.CodeMachine == 4)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage02 = Convert.ToString(XpertHelper.Total);
                            }
                            if (poste.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage02 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage02 = Convert.ToString(modified);
                                }
                            }
                        }//Cage02
                        if (itemcalibres.CodeMachine == 5)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage03 = Convert.ToString(XpertHelper.Total);
                            }
                            if (poste.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage03 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage03 = Convert.ToString(modified);
                                }
                            }
                        }//Cage03
                        if (itemcalibres.CodeMachine == 6)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage04 = Convert.ToString(XpertHelper.Total);
                            }
                            if (poste.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage04 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage04 = Convert.ToString(modified);
                                }
                            }
                        }//Cage04
                        if (itemcalibres.CodeMachine == 7)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage05 = Convert.ToString(XpertHelper.Total);
                            }
                            if (poste.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage05 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage05 = Convert.ToString(modified);
                                }
                            }
                        }//Cage05
                        if (itemcalibres.CodeMachine == 8)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage06 = Convert.ToString(XpertHelper.Total);
                            }
                            if (poste.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage06 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage06 = Convert.ToString(modified);
                                }
                            }
                        }//Cage06
                        if (itemcalibres.CodeMachine == 26)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage07 = Convert.ToString(XpertHelper.Total);
                            }
                            if (poste.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage07 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage07 = Convert.ToString(modified);
                                }
                            }
                        }//Cage07
                        if (itemcalibres.CodeMachine == 9)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage08 = Convert.ToString(XpertHelper.Total);
                            }
                            if (poste.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage08 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage08 = Convert.ToString(modified);
                                }
                            }
                        }//Cage08
                        if (itemcalibres.CodeMachine == 10)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage09 = Convert.ToString(XpertHelper.Total);
                            }
                            if (poste.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage09 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage09 = Convert.ToString(modified);
                                }
                            }
                        }//Cage09
                        if (itemcalibres.CodeMachine == 11)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage10 = Convert.ToString(XpertHelper.Total);
                            }
                            if (poste.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage10 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage10 = Convert.ToString(modified);
                                }
                            }
                        }//Cage10
                        if (itemcalibres.CodeMachine == 12)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage11 = Convert.ToString(XpertHelper.Total);
                            }
                            if (poste.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage11 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage11 = Convert.ToString(modified);
                                }
                            }
                        }//Cage11
                        if (itemcalibres.CodeMachine == 13)
                        {
                            if (poste.Poste ==  1)
                            {
                                updt.Cage12 = Convert.ToString(XpertHelper.Total);
                            }
                            if (poste.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage12 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage12 = Convert.ToString(modified);
                                }
                            }
                        }//Cage12
                        if (itemcalibres.CodeMachine == 14)
                        {
                            if (poste.Poste == 1)
                            {
                                updt.Cage13 = Convert.ToString(XpertHelper.Total);
                            }
                            if (poste.Poste == 3)
                            {
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage125);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage13 = Convert.ToString(modified);
                                }
                                if (Convert.ToInt64(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    double modified = Convert.ToDouble((productionJourneeModels[2].NbrRealisee - raeliseAtPs) * XpertHelper.NetTonnage130);
                                    modified = (double)System.Math.Round(modified, 2);
                                    updt.Cage13 = Convert.ToString(modified);
                                }
                            }
                        }//Cage13
                    }
                }
            }
        }
        public void ArretsComputing
            (List<ArretProductionJourneeModel> arretProductionJourneeModels, JourneeProduction model, ProdTonnagesCagesModel Lt,
            List<ProductionJourneeModel> productionJourneeModels, double total, int NbrPostes, ProdTonnagesCages updtModel
            , List<int> rapportsNum)
        {
            List<ProdPreparationCylindreModele> prodPreparationCylindreModeles = new List<ProdPreparationCylindreModele>();
            List<ProdPreparationCalibreModele> prodPreparationCalibreModeles = new List<ProdPreparationCalibreModele>();
            //get RapportNum foreach
            foreach (var itemrapportsNum in rapportsNum)
            {
                var cylindres = _context.ProdPreparationCylindre.Where(c => c.NumRapport == itemrapportsNum)
                    .AsNoTracking()
                    .Select(i => new
                    {
                        i.CodeMachine
                    }).ToList();
                foreach (var itemProdPreparationCylindreModele in cylindres)
                {
                    ProdPreparationCylindreModele prodPreparationCylindreModele = new ProdPreparationCylindreModele();
                    prodPreparationCylindreModele.CodeMachine = itemProdPreparationCylindreModele.CodeMachine;
                    prodPreparationCylindreModeles.Add(prodPreparationCylindreModele);
                }
                var calibres = _context.ProdPreparationCalibre.Where(c => c.NumRapport == itemrapportsNum)
                    .AsNoTracking()
                    .Select(i => new
                    {
                        i.CodeMachine
                    }).ToList();
                foreach (var itemprodPreparationCalibreModele in calibres)
                {
                    ProdPreparationCalibreModele prodPreparationCalibreModele = new ProdPreparationCalibreModele();
                    prodPreparationCalibreModele.CodeMachine = itemprodPreparationCalibreModele.CodeMachine;
                    prodPreparationCalibreModeles.Add(prodPreparationCalibreModele);
                }
            }
            NbrPostes = productionJourneeModels.Count;
            //check if this arret is in other postes
            List<int> MachinesArretDuplicated = new List<int>();
            for(int inc = 0;  inc < arretProductionJourneeModels.Count(); inc++)
            {
                if (arretProductionJourneeModels[inc].SubMachine != null)
                {
                    for (int incA = inc +1; incA < arretProductionJourneeModels.Count(); incA++)
                    {
                        if (arretProductionJourneeModels[incA].SubMachine != null)
                        {
                            if (arretProductionJourneeModels[inc].SubMachine.Equals(arretProductionJourneeModels[incA].SubMachine))
                            {
                                if (!MachinesArretDuplicated.Contains(arretProductionJourneeModels[incA].NumRapport))
                                {
                                    MachinesArretDuplicated.Add(arretProductionJourneeModels[incA].NumRapport);
                                }
                            }
                        }
                    }
                }
            }
            foreach (var arret in arretProductionJourneeModels)
            {
                ProductionJourneeModel jpm = new ProductionJourneeModel();
                {
                    var productionA = _context.JourneeProduction
                        .Where(c => c.NumRapport == arret.NumRapport)
                        .AsNoTracking()
                        .Select(i => new
                        {
                            i.Poste
                        }).ToList();
                    foreach (var poste in productionA)
                    {
                        jpm.Poste = poste.Poste;
                    }
                    var TonnageOld = 0.0;
                    var TonnageNew = 0.0;
                    if (jpm.Poste == 1 && arret.EnumArret.Equals("PS"))
                    {
                        XpertHelper.RealiseAtPs1 = (int)arret.NbrBilleteRealisees;
                    }
                    if (jpm.Poste == 2 && arret.EnumArret.Equals("PS"))
                    {
                        XpertHelper.RealiseAtPs2 = (int)arret.NbrBilleteRealisees;
                    }
                    if (jpm.Poste == 3 && arret.EnumArret.Equals("PS"))
                    {
                        XpertHelper.RealiseAtPs3 = (int)arret.NbrBilleteRealisees;
                    }
                    if (arret.SubMachine != null)
                    {
                        TonnageCage09Computing3postes(jpm, TonnageOld, TonnageNew, arret, productionJourneeModels, total,
                            prodPreparationCylindreModeles, prodPreparationCalibreModeles, Lt, model, updtModel);
                    }
                }
            }
        }
        #region//====================TonnageDesCagesArrets============
        //===================Cage01======================
        public async void TonnageCage01Computing3postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres, 
            ProdTonnagesCagesModel Lt,  JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            if (jpm.Poste == 3)
            {
                foreach (var elem in cylindres)
                {
                    var machineCylindres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCylindres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        inCylindre = 1;
                    }
                }
                foreach (var elem in calibres)
                {
                    var machineCalibres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        incalibres = 1;
                    }
                }
                if (inCylindre == 0 && incalibres == 0)
                {
                    var p = 0.0;
                    if (Lt.Cage01.Contains("-"))
                    {
                        var splited = Lt.Cage01.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage01.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var facteur1 = 0.0;
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                facteur1 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                facteur1 = XpertHelper.NetTonnage130;
                            }
                            var facteur2 = 0.0;
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                facteur2 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                facteur2 = XpertHelper.NetTonnage130;
                            }
                            var facteur3 = 0.0;
                            if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                            {
                                facteur3 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                            {
                                facteur3 = XpertHelper.NetTonnage130;
                            }
                            var ns = 0.0;
                            if (Lt.Cage01.Contains("-"))
                            {
                                var splited = Lt.Cage01.Split("-");
                                ns = double.Parse(splited[1]);
                            }
                            else
                            {
                                ns = Convert.ToDouble(Lt.Cage01.ToString());
                            }
                            ns = (double)System.Math.Round(ns, 2);
                            //TODO: check the confusion here in 3 posts
                            TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + productionJourneeModels[1].NbrRealisee * facteur2 + +arret.NbrBilleteRealisees * facteur3) + ns;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            TonnageNew = (double)(productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur3);
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if (jpm.Poste == 2)
            {
                var facteur1 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                {
                    facteur1 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                {
                    facteur1 = XpertHelper.NetTonnage130;
                }

                var facteur2 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                {
                    facteur2 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                {
                    facteur2 = XpertHelper.NetTonnage130;
                }
                var facteur3 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                {
                    facteur3 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                {
                    facteur3 = XpertHelper.NetTonnage130;
                }
                var ns = 0.0;
                if (Lt.Cage01.Contains("-"))
                {
                    var splited = Lt.Cage01.Split("-");
                    ns = double.Parse(splited[1]);
                }
                else
                {
                    ns = Convert.ToDouble(Lt.Cage01.ToString());
                }
                ns = (double)System.Math.Round(ns, 2);
                //TODO: check the confusion here in 3 posts
                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 + productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur2);
                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
            }
            if (jpm.Poste == 1)
            {
                var p = 0.0;
                if (Lt.Cage01.Contains("-"))
                {
                    var splited = Lt.Cage01.Split("-");
                    p = double.Parse(splited[1]);
                }
                else
                {
                    p = Convert.ToDouble(Lt.Cage01.ToString());
                }
                p = (double)System.Math.Round(p, 2);
                foreach (var itemU in productionJourneeModels)
                {
                    if (itemU.NumRapport == arret.NumRapport)
                    {
                        var f = 0.0;
                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                        {
                            f = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                        {
                            f = XpertHelper.NetTonnage130;
                        }
                        TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                        var totalpost1 = 0.0;
                        var totalpost2 = 0.0;
                        var totalpost3 = 0.0;
                        //En cas il yas de changement de billete entre les posts dans la meme journee
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                        {
                            totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                        {
                            totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                        {
                            totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                        {
                            totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                        {
                            totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                        {
                            totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130;
                        }
                        TonnageNew = totalpost1 + totalpost2 + totalpost3;
                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                    }
                }
            }
            var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
            updt.Cage01 = Convert.ToString(TonnageOld + "-" + TonnageNew);
             _context.ProdTonnagesCages.Update(updt);
        }
        public async void TonnageCage01Computing2postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
                {
                    var inCylindre = 0;
                    var incalibres = 0;
                    if (jpm.Poste == 1)
                    {
                        foreach (var elem in cylindres)
                        {
                            var machineCylindres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCylindres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                inCylindre = 1;
                            }
                        }
                        foreach (var elem in calibres)
                        {
                            var machineCalibres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCalibres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                incalibres = 1;
                            }
                        }
                        if (inCylindre == 0 && incalibres == 0)
                        {
                            var p = 0.0;
                            if (Lt.Cage01.Contains("-"))
                            {
                                var splited = Lt.Cage01.Split("-");
                                p = double.Parse(splited[1]);
                            }
                            else
                            {
                                p = Convert.ToDouble(Lt.Cage01.ToString());
                            }
                            p = (double)System.Math.Round(p, 2);
                            foreach (var itemU in productionJourneeModels)
                            {
                                if (itemU.NumRapport == arret.NumRapport)
                                {
                                    var f = 0.0;
                                    if (Convert.ToDouble(itemU.DimBillete) == 125)
                                    {
                                        f = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(itemU.DimBillete) == 130)
                                    {
                                        f = XpertHelper.NetTonnage130;
                                    }
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    var totalpost1 = 0.0;
                                    var totalpost2 = 0.0;
                                    //En cas il yas de changement de billete entre les posts dans la meme journee
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                    {
                                        totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                    {
                                        totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                                    }

                                    TonnageNew = totalpost1 + totalpost2;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                    }
                    if (jpm.Poste == 2)
                    {
                        var facteur1 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                        {
                            facteur1 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                        {
                            facteur1 = XpertHelper.NetTonnage130;
                        }

                        var facteur2 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                        {
                            facteur2 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                        {
                            facteur2 = XpertHelper.NetTonnage130;
                        }

                        var ns = 0.0;
                        if (Lt.Cage01.Contains("-"))
                        {
                            var splited = Lt.Cage01.Split("-");
                            ns = double.Parse(splited[1]);
                        }
                        else
                        {
                            ns = Convert.ToDouble(Lt.Cage01.ToString());
                        }
                        ns = (double)System.Math.Round(ns, 2);
                        //TODO: check the confusion here in 3 posts
                        TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                        TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 - arret.NbrBilleteRealisees * facteur2);
                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                    }
                    var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
                    updt.Cage01 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                    _context.ProdTonnagesCages.Update(updt);
                }
        //===================Cage02======================
        public async void TonnageCage02Computing3postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            if (jpm.Poste == 3)
            {
                foreach (var elem in cylindres)
                {
                    var machineCylindres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCylindres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        inCylindre = 1;
                    }
                }
                foreach (var elem in calibres)
                {
                    var machineCalibres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        incalibres = 1;
                    }
                }
                if (inCylindre == 0 && incalibres == 0)
                {
                    var p = 0.0;
                    if (Lt.Cage02.Contains("-"))
                    {
                        var splited = Lt.Cage02.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage02.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var facteur1 = 0.0;
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                facteur1 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                facteur1 = XpertHelper.NetTonnage130;
                            }
                            var facteur2 = 0.0;
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                facteur2 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                facteur2 = XpertHelper.NetTonnage130;
                            }
                            var facteur3 = 0.0;
                            if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                            {
                                facteur3 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                            {
                                facteur3 = XpertHelper.NetTonnage130;
                            }
                            var ns = 0.0;
                            if (Lt.Cage01.Contains("-"))
                            {
                                var splited = Lt.Cage01.Split("-");
                                ns = double.Parse(splited[1]);
                            }
                            else
                            {
                                ns = Convert.ToDouble(Lt.Cage01.ToString());
                            }
                            ns = (double)System.Math.Round(ns, 2);
                            //TODO: check the confusion here in 3 posts
                            TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + productionJourneeModels[1].NbrRealisee * facteur2 + +arret.NbrBilleteRealisees * facteur3) + ns;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            TonnageNew = (double)(productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur3);
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if (jpm.Poste == 2)
            {
                var facteur1 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                {
                    facteur1 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                {
                    facteur1 = XpertHelper.NetTonnage130;
                }

                var facteur2 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                {
                    facteur2 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                {
                    facteur2 = XpertHelper.NetTonnage130;
                }
                var facteur3 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                {
                    facteur3 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                {
                    facteur3 = XpertHelper.NetTonnage130;
                }
                var ns = 0.0;
                if (Lt.Cage02.Contains("-"))
                {
                    var splited = Lt.Cage02.Split("-");
                    ns = double.Parse(splited[1]);
                }
                else
                {
                    ns = Convert.ToDouble(Lt.Cage02.ToString());
                }
                ns = (double)System.Math.Round(ns, 2);
                //TODO: check the confusion here in 3 posts
                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 + productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur2);
                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
            }
            if (jpm.Poste == 1)
            {
                var p = 0.0;
                if (Lt.Cage02.Contains("-"))
                {
                    var splited = Lt.Cage02.Split("-");
                    p = double.Parse(splited[1]);
                }
                else
                {
                    p = Convert.ToDouble(Lt.Cage02.ToString());
                }
                p = (double)System.Math.Round(p, 2);
                foreach (var itemU in productionJourneeModels)
                {
                    if (itemU.NumRapport == arret.NumRapport)
                    {
                        var f = 0.0;
                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                        {
                            f = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                        {
                            f = XpertHelper.NetTonnage130;
                        }
                        TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                        var totalpost1 = 0.0;
                        var totalpost2 = 0.0;
                        var totalpost3 = 0.0;
                        //En cas il yas de changement de billete entre les posts dans la meme journee
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                        {
                            totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                        {
                            totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                        {
                            totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                        {
                            totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                        {
                            totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                        {
                            totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130;
                        }
                        TonnageNew = totalpost1 + totalpost2 + totalpost3;
                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                    }
                }
            }
            var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
            updt.Cage02 = Convert.ToString(TonnageOld + "-" + TonnageNew);
            _context.ProdTonnagesCages.Update(updt);
        }
        public async void TonnageCage02Computing2postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            if (jpm.Poste == 1)
            {
                foreach (var elem in cylindres)
                {
                    var machineCylindres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCylindres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        inCylindre = 1;
                    }
                }
                foreach (var elem in calibres)
                {
                    var machineCalibres =
                        _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToList();
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        incalibres = 1;
                    }
                }
                if (inCylindre == 0 && incalibres == 0)
                {
                    var p = 0.0;
                    if (Lt.Cage02.Contains("-"))
                    {
                        var splited = Lt.Cage02.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage02.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var f = 0.0;
                            if (Convert.ToDouble(itemU.DimBillete) == 125)
                            {
                                f = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(itemU.DimBillete) == 130)
                            {
                                f = XpertHelper.NetTonnage130;
                            }
                            TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            var totalpost1 = 0.0;
                            var totalpost2 = 0.0;
                            //En cas il yas de changement de billete entre les posts dans la meme journee
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                            }

                            TonnageNew = totalpost1 + totalpost2;
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if (jpm.Poste == 2)
            {
                var facteur1 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                {
                    facteur1 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                {
                    facteur1 = XpertHelper.NetTonnage130;
                }

                var facteur2 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                {
                    facteur2 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                {
                    facteur2 = XpertHelper.NetTonnage130;
                }

                var ns = 0.0;
                if (Lt.Cage02.Contains("-"))
                {
                    var splited = Lt.Cage02.Split("-");
                    ns = double.Parse(splited[1]);
                }
                else
                {
                    ns = Convert.ToDouble(Lt.Cage02.ToString());
                }
                ns = (double)System.Math.Round(ns, 2);
                //TODO: check the confusion here in 3 posts
                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 - arret.NbrBilleteRealisees * facteur2);
                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
            }
            var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
            updt.Cage02 = Convert.ToString(TonnageOld + "-" + TonnageNew);
            _context.ProdTonnagesCages.Update(updt);
        }
        //===================Cage03======================
        public async void TonnageCage03Computing3postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            if (jpm.Poste == 3)
            {
                foreach (var elem in cylindres)
                {
                    var machineCylindres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCylindres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        inCylindre = 1;
                    }
                }
                foreach (var elem in calibres)
                {
                    var machineCalibres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        incalibres = 1;
                    }
                }
                if (inCylindre == 0 && incalibres == 0)
                {
                    var p = 0.0;
                    if (Lt.Cage03.Contains("-"))
                    {
                        var splited = Lt.Cage03.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage03.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var facteur1 = 0.0;
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                facteur1 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                facteur1 = XpertHelper.NetTonnage130;
                            }
                            var facteur2 = 0.0;
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                facteur2 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                facteur2 = XpertHelper.NetTonnage130;
                            }
                            var facteur3 = 0.0;
                            if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                            {
                                facteur3 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                            {
                                facteur3 = XpertHelper.NetTonnage130;
                            }
                            var ns = 0.0;
                            if (Lt.Cage03.Contains("-"))
                            {
                                var splited = Lt.Cage03.Split("-");
                                ns = double.Parse(splited[1]);
                            }
                            else
                            {
                                ns = Convert.ToDouble(Lt.Cage03.ToString());
                            }
                            ns = (double)System.Math.Round(ns, 2);
                            //TODO: check the confusion here in 3 posts
                            TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + productionJourneeModels[1].NbrRealisee * facteur2 + +arret.NbrBilleteRealisees * facteur3) + ns;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            TonnageNew = (double)(productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur3);
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if (jpm.Poste == 2)
            {
                var facteur1 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                {
                    facteur1 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                {
                    facteur1 = XpertHelper.NetTonnage130;
                }

                var facteur2 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                {
                    facteur2 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                {
                    facteur2 = XpertHelper.NetTonnage130;
                }
                var facteur3 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                {
                    facteur3 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                {
                    facteur3 = XpertHelper.NetTonnage130;
                }
                var ns = 0.0;
                if (Lt.Cage03.Contains("-"))
                {
                    var splited = Lt.Cage03.Split("-");
                    ns = double.Parse(splited[1]);
                }
                else
                {
                    ns = Convert.ToDouble(Lt.Cage03.ToString());
                }
                ns = (double)System.Math.Round(ns, 2);
                //TODO: check the confusion here in 3 posts
                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 + productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur2);
                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
            }
            if (jpm.Poste == 1)
            {
                var p = 0.0;
                if (Lt.Cage03.Contains("-"))
                {
                    var splited = Lt.Cage03.Split("-");
                    p = double.Parse(splited[1]);
                }
                else
                {
                    p = Convert.ToDouble(Lt.Cage03.ToString());
                }
                p = (double)System.Math.Round(p, 2);
                foreach (var itemU in productionJourneeModels)
                {
                    if (itemU.NumRapport == arret.NumRapport)
                    {
                        var f = 0.0;
                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                        {
                            f = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                        {
                            f = XpertHelper.NetTonnage130;
                        }
                        TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                        var totalpost1 = 0.0;
                        var totalpost2 = 0.0;
                        var totalpost3 = 0.0;
                        //En cas il yas de changement de billete entre les posts dans la meme journee
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                        {
                            totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                        {
                            totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                        {
                            totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                        {
                            totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                        {
                            totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                        {
                            totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130;
                        }
                        TonnageNew = totalpost1 + totalpost2 + totalpost3;
                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                    }
                }
            }
            var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
            updt.Cage03 = Convert.ToString(TonnageOld + "-" + TonnageNew);
            _context.ProdTonnagesCages.Update(updt);
        }
        public async void TonnageCage03Computing2postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            if (jpm.Poste == 1)
            {
                foreach (var elem in cylindres)
                {
                    var machineCylindres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCylindres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        inCylindre = 1;
                    }
                }
                foreach (var elem in calibres)
                {
                    var machineCalibres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        incalibres = 1;
                    }
                }
                if (inCylindre == 0 && incalibres == 0)
                {
                    var p = 0.0;
                    if (Lt.Cage03.Contains("-"))
                    {
                        var splited = Lt.Cage03.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage03.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var f = 0.0;
                            if (Convert.ToDouble(itemU.DimBillete) == 125)
                            {
                                f = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(itemU.DimBillete) == 130)
                            {
                                f = XpertHelper.NetTonnage130;
                            }
                            TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            var totalpost1 = 0.0;
                            var totalpost2 = 0.0;
                            //En cas il yas de changement de billete entre les posts dans la meme journee
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                            }

                            TonnageNew = totalpost1 + totalpost2;
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if (jpm.Poste == 2)
            {
                var facteur1 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                {
                    facteur1 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                {
                    facteur1 = XpertHelper.NetTonnage130;
                }

                var facteur2 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                {
                    facteur2 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                {
                    facteur2 = XpertHelper.NetTonnage130;
                }

                var ns = 0.0;
                if (Lt.Cage03.Contains("-"))
                {
                    var splited = Lt.Cage03.Split("-");
                    ns = double.Parse(splited[1]);
                }
                else
                {
                    ns = Convert.ToDouble(Lt.Cage03.ToString());
                }
                ns = (double)System.Math.Round(ns, 2);
                //TODO: check the confusion here in 3 posts
                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 - arret.NbrBilleteRealisees * facteur2);
                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
            }
            var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
            updt.Cage03 = Convert.ToString(TonnageOld + "-" + TonnageNew);
            _context.ProdTonnagesCages.Update(updt);
        }
        //===================Cage04======================
        public async void TonnageCage04Computing3postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
                {
                    var inCylindre = 0;
                    var incalibres = 0;
                    if (jpm.Poste == 3)
                    {
                        foreach (var elem in cylindres)
                        {
                            var machineCylindres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCylindres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                inCylindre = 1;
                            }
                        }
                        foreach (var elem in calibres)
                        {
                            var machineCalibres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCalibres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                incalibres = 1;
                            }
                        }
                        if (inCylindre == 0 && incalibres == 0)
                        {
                            var p = 0.0;
                            if (Lt.Cage04.Contains("-"))
                            {
                                var splited = Lt.Cage04.Split("-");
                                p = double.Parse(splited[1]);
                            }
                            else
                            {
                                p = Convert.ToDouble(Lt.Cage04.ToString());
                            }
                            p = (double)System.Math.Round(p, 2);
                            foreach (var itemU in productionJourneeModels)
                            {
                                if (itemU.NumRapport == arret.NumRapport)
                                {
                                    var facteur1 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                    {
                                        facteur1 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                    {
                                        facteur1 = XpertHelper.NetTonnage130;
                                    }
                                    var facteur2 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        facteur2 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        facteur2 = XpertHelper.NetTonnage130;
                                    }
                                    var facteur3 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                                    {
                                        facteur3 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                                    {
                                        facteur3 = XpertHelper.NetTonnage130;
                                    }
                                    var ns = 0.0;
                                    if (Lt.Cage04.Contains("-"))
                                    {
                                        var splited = Lt.Cage04.Split("-");
                                        ns = double.Parse(splited[1]);
                                    }
                                    else
                                    {
                                        ns = Convert.ToDouble(Lt.Cage04.ToString());
                                    }
                                    ns = (double)System.Math.Round(ns, 2);
                                    //TODO: check the confusion here in 3 posts
                                    TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + productionJourneeModels[1].NbrRealisee * facteur2 + +arret.NbrBilleteRealisees * facteur3) + ns;
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = (double)(productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur3);
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                    }
                    if (jpm.Poste == 2)
                    {
                        var facteur1 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                        {
                            facteur1 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                        {
                            facteur1 = XpertHelper.NetTonnage130;
                        }

                        var facteur2 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                        {
                            facteur2 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                        {
                            facteur2 = XpertHelper.NetTonnage130;
                        }
                        var facteur3 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                        {
                            facteur3 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                        {
                            facteur3 = XpertHelper.NetTonnage130;
                        }
                        var ns = 0.0;
                        if (Lt.Cage04.Contains("-"))
                        {
                            var splited = Lt.Cage04.Split("-");
                            ns = double.Parse(splited[1]);
                        }
                        else
                        {
                            ns = Convert.ToDouble(Lt.Cage04.ToString());
                        }
                        ns = (double)System.Math.Round(ns, 2);
                        //TODO: check the confusion here in 3 posts
                        TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                        TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 + productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur2);
                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                    }
                    if (jpm.Poste == 1)
                    {
                        var p = 0.0;
                        if (Lt.Cage04.Contains("-"))
                        {
                            var splited = Lt.Cage04.Split("-");
                            p = double.Parse(splited[1]);
                        }
                        else
                        {
                            p = Convert.ToDouble(Lt.Cage04.ToString());
                        }
                        p = (double)System.Math.Round(p, 2);
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                var f = 0.0;
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    f = XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    f = XpertHelper.NetTonnage130;
                                }
                                TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                var totalpost1 = 0.0;
                                var totalpost2 = 0.0;
                                var totalpost3 = 0.0;
                                //En cas il yas de changement de billete entre les posts dans la meme journee
                                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                                }
                                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                {
                                    totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                {
                                    totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                                }
                                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130;
                                }
                                TonnageNew = totalpost1 + totalpost2 + totalpost3;
                                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                            }
                        }
                    }
                    var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
                    updt.Cage04 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                    _context.ProdTonnagesCages.Update(updt);
                }
        public async void TonnageCage04Computing2postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            if (jpm.Poste == 1)
            {
                foreach (var elem in cylindres)
                {
                    var machineCylindres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCylindres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        inCylindre = 1;
                    }
                }
                foreach (var elem in calibres)
                {
                    var machineCalibres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        incalibres = 1;
                    }
                }
                if (inCylindre == 0 && incalibres == 0)
                {
                    var p = 0.0;
                    if (Lt.Cage04.Contains("-"))
                    {
                        var splited = Lt.Cage04.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage04.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var f = 0.0;
                            if (Convert.ToDouble(itemU.DimBillete) == 125)
                            {
                                f = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(itemU.DimBillete) == 130)
                            {
                                f = XpertHelper.NetTonnage130;
                            }
                            TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            var totalpost1 = 0.0;
                            var totalpost2 = 0.0;
                            //En cas il yas de changement de billete entre les posts dans la meme journee
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                            }

                            TonnageNew = totalpost1 + totalpost2;
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if (jpm.Poste == 2)
            {
                var facteur1 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                {
                    facteur1 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                {
                    facteur1 = XpertHelper.NetTonnage130;
                }

                var facteur2 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                {
                    facteur2 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                {
                    facteur2 = XpertHelper.NetTonnage130;
                }

                var ns = 0.0;
                if (Lt.Cage04.Contains("-"))
                {
                    var splited = Lt.Cage04.Split("-");
                    ns = double.Parse(splited[1]);
                }
                else
                {
                    ns = Convert.ToDouble(Lt.Cage04.ToString());
                }
                ns = (double)System.Math.Round(ns, 2);
                //TODO: check the confusion here in 3 posts
                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 - arret.NbrBilleteRealisees * facteur2);
                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
            }
            var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
            updt.Cage04 = Convert.ToString(TonnageOld + "-" + TonnageNew);
            _context.ProdTonnagesCages.Update(updt);
        }
        //===================Cage05======================
        public async void TonnageCage05Computing3postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
            {
                var inCylindre = 0;
                var incalibres = 0;
                if (jpm.Poste == 3)
                {
                    foreach (var elem in cylindres)
                    {
                        var machineCylindres =
                            await _context.Machines
                            .Where(c => c.NumMachine == elem.CodeMachine)
                            .Select(i => new
                            {
                                i.NomMachine
                            }).ToListAsync();
                        var nm = machineCylindres.Last();
                        // test if in calibres 
                        if (nm.NomMachine.Equals(arret.SubMachine))
                        {
                            // Tonnage realisee de cette machine
                            foreach (var itemU in productionJourneeModels)
                            {
                                if (itemU.NumRapport == arret.NumRapport)
                                {
                                    if (Convert.ToDouble(itemU.DimBillete) == 125)
                                    {
                                        TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                        TonnageNew = total - TonnageOld;
                                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                    }
                                    if (Convert.ToDouble(itemU.DimBillete) == 130)
                                    {
                                        TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                        TonnageNew = total - TonnageOld;
                                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                    }
                                }
                            }
                            inCylindre = 1;
                        }
                    }
                    foreach (var elem in calibres)
                    {
                        var machineCalibres =
                            await _context.Machines
                            .Where(c => c.NumMachine == elem.CodeMachine)
                            .Select(i => new
                            {
                                i.NomMachine
                            }).ToListAsync();
                        var nm = machineCalibres.Last();
                        // test if in calibres 
                        if (nm.NomMachine.Equals(arret.SubMachine))
                        {
                            // Tonnage realisee de cette machine
                            foreach (var itemU in productionJourneeModels)
                            {
                                if (itemU.NumRapport == arret.NumRapport)
                                {
                                    if (Convert.ToDouble(itemU.DimBillete) == 125)
                                    {
                                        TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                        TonnageNew = total - TonnageOld;
                                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                    }
                                    if (Convert.ToDouble(itemU.DimBillete) == 130)
                                    {
                                        TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                        TonnageNew = total - TonnageOld;
                                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                    }
                                }
                            }
                            incalibres = 1;
                        }
                    }
                    if (inCylindre == 0 && incalibres == 0)
                    {
                        var p = 0.0;
                        if (Lt.Cage05.Contains("-"))
                        {
                            var splited = Lt.Cage05.Split("-");
                            p = double.Parse(splited[1]);
                        }
                        else
                        {
                            p = Convert.ToDouble(Lt.Cage05.ToString());
                        }
                        p = (double)System.Math.Round(p, 2);
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                var facteur1 = 0.0;
                                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    facteur1 = XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    facteur1 = XpertHelper.NetTonnage130;
                                }
                                var facteur2 = 0.0;
                                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                {
                                    facteur2 = XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                {
                                    facteur2 = XpertHelper.NetTonnage130;
                                }
                                var facteur3 = 0.0;
                                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    facteur3 = XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    facteur3 = XpertHelper.NetTonnage130;
                                }
                                var ns = 0.0;
                                if (Lt.Cage05.Contains("-"))
                                {
                                    var splited = Lt.Cage05.Split("-");
                                    ns = double.Parse(splited[1]);
                                }
                                else
                                {
                                    ns = Convert.ToDouble(Lt.Cage05.ToString());
                                }
                                ns = (double)System.Math.Round(ns, 2);
                                //TODO: check the confusion here in 3 posts
                                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + productionJourneeModels[1].NbrRealisee * facteur2 + +arret.NbrBilleteRealisees * facteur3) + ns;
                                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                TonnageNew = (double)(productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur3);
                                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                            }
                        }
                    }
                }
                if (jpm.Poste == 2)
                {
                    var facteur1 = 0.0;
                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                    {
                        facteur1 = XpertHelper.NetTonnage125;
                    }
                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                    {
                        facteur1 = XpertHelper.NetTonnage130;
                    }

                    var facteur2 = 0.0;
                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                    {
                        facteur2 = XpertHelper.NetTonnage125;
                    }
                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                    {
                        facteur2 = XpertHelper.NetTonnage130;
                    }
                    var facteur3 = 0.0;
                    if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                    {
                        facteur3 = XpertHelper.NetTonnage125;
                    }
                    if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                    {
                        facteur3 = XpertHelper.NetTonnage130;
                    }
                    var ns = 0.0;
                    if (Lt.Cage05.Contains("-"))
                    {
                        var splited = Lt.Cage05.Split("-");
                        ns = double.Parse(splited[1]);
                    }
                    else
                    {
                        ns = Convert.ToDouble(Lt.Cage05.ToString());
                    }
                    ns = (double)System.Math.Round(ns, 2);
                    //TODO: check the confusion here in 3 posts
                    TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                    TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 + productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur2);
                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                }
                if (jpm.Poste == 1)
                {
                    var p = 0.0;
                    if (Lt.Cage05.Contains("-"))
                    {
                        var splited = Lt.Cage05.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage05.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var f = 0.0;
                            if (Convert.ToDouble(itemU.DimBillete) == 125)
                            {
                                f = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(itemU.DimBillete) == 130)
                            {
                                f = XpertHelper.NetTonnage130;
                            }
                            TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            var totalpost1 = 0.0;
                            var totalpost2 = 0.0;
                            var totalpost3 = 0.0;
                            //En cas il yas de changement de billete entre les posts dans la meme journee
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                            }
                            if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                            {
                                totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                            {
                                totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130;
                            }
                            TonnageNew = totalpost1 + totalpost2 + totalpost3;
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
                var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
                updt.Cage05 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                _context.ProdTonnagesCages.Update(updt);
            }
        public async void TonnageCage05Computing2postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            if (jpm.Poste == 1)
            {
                foreach (var elem in cylindres)
                {
                    var machineCylindres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCylindres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        inCylindre = 1;
                    }
                }
                foreach (var elem in calibres)
                {
                    var machineCalibres =
                        _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToList();
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        incalibres = 1;
                    }
                }
                if (inCylindre == 0 && incalibres == 0)
                {
                    var p = 0.0;
                    if (Lt.Cage05.Contains("-"))
                    {
                        var splited = Lt.Cage05.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage05.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var f = 0.0;
                            if (Convert.ToDouble(itemU.DimBillete) == 125)
                            {
                                f = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(itemU.DimBillete) == 130)
                            {
                                f = XpertHelper.NetTonnage130;
                            }
                            TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            var totalpost1 = 0.0;
                            var totalpost2 = 0.0;
                            //En cas il yas de changement de billete entre les posts dans la meme journee
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                            }

                            TonnageNew = totalpost1 + totalpost2;
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if (jpm.Poste == 2)
            {
                var facteur1 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                {
                    facteur1 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                {
                    facteur1 = XpertHelper.NetTonnage130;
                }

                var facteur2 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                {
                    facteur2 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                {
                    facteur2 = XpertHelper.NetTonnage130;
                }

                var ns = 0.0;
                if (Lt.Cage05.Contains("-"))
                {
                    var splited = Lt.Cage05.Split("-");
                    ns = double.Parse(splited[1]);
                }
                else
                {
                    ns = Convert.ToDouble(Lt.Cage05.ToString());
                }
                ns = (double)System.Math.Round(ns, 2);
                //TODO: check the confusion here in 3 posts
                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 - arret.NbrBilleteRealisees * facteur2);
                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
            }
            var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
            updt.Cage05 = Convert.ToString(TonnageOld + "-" + TonnageNew);
            _context.ProdTonnagesCages.Update(updt);
        }
        //===================Cage06======================
        public async void TonnageCage06Computing2postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            if (jpm.Poste == 1)
            {
                foreach (var elem in cylindres)
                {
                    var machineCylindres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCylindres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        inCylindre = 1;
                    }
                }
                foreach (var elem in calibres)
                {
                    var machineCalibres =
                       await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        incalibres = 1;
                    }
                }
                if (inCylindre == 0 && incalibres == 0)
                {
                    var p = 0.0;
                    if (Lt.Cage06.Contains("-"))
                    {
                        var splited = Lt.Cage06.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage06.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var f = 0.0;
                            if (Convert.ToDouble(itemU.DimBillete) == 125)
                            {
                                f = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(itemU.DimBillete) == 130)
                            {
                                f = XpertHelper.NetTonnage130;
                            }
                            TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            var totalpost1 = 0.0;
                            var totalpost2 = 0.0;
                            //En cas il yas de changement de billete entre les posts dans la meme journee
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                            }

                            TonnageNew = totalpost1 + totalpost2;
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if (jpm.Poste == 2)
            {
                var facteur1 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                {
                    facteur1 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                {
                    facteur1 = XpertHelper.NetTonnage130;
                }

                var facteur2 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                {
                    facteur2 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                {
                    facteur2 = XpertHelper.NetTonnage130;
                }

                var ns = 0.0;
                if (Lt.Cage06.Contains("-"))
                {
                    var splited = Lt.Cage06.Split("-");
                    ns = double.Parse(splited[1]);
                }
                else
                {
                    ns = Convert.ToDouble(Lt.Cage06.ToString());
                }
                ns = (double)System.Math.Round(ns, 2);
                //TODO: check the confusion here in 3 posts
                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 - arret.NbrBilleteRealisees * facteur2);
                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
            }
            var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
            updt.Cage06 = Convert.ToString(TonnageOld + "-" + TonnageNew);
            _context.ProdTonnagesCages.Update(updt);
        }
        public async void TonnageCage06Computing3postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            if (jpm.Poste == 3)
            {
                foreach (var elem in cylindres)
                {
                    var machineCylindres =
                        _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToList();
                    var nm = machineCylindres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        inCylindre = 1;
                    }
                }
                foreach (var elem in calibres)
                {
                    var machineCalibres =
                        _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToList();
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        incalibres = 1;
                    }
                }
                if (inCylindre == 0 && incalibres == 0)
                {
                    var p = 0.0;
                    if (Lt.Cage06.Contains("-"))
                    {
                        var splited = Lt.Cage06.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage06.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var facteur1 = 0.0;
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                facteur1 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                facteur1 = XpertHelper.NetTonnage130;
                            }
                            var facteur2 = 0.0;
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                facteur2 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                facteur2 = XpertHelper.NetTonnage130;
                            }
                            var facteur3 = 0.0;
                            if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                            {
                                facteur3 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                            {
                                facteur3 = XpertHelper.NetTonnage130;
                            }
                            var ns = 0.0;
                            if (Lt.Cage06.Contains("-"))
                            {
                                var splited = Lt.Cage06.Split("-");
                                ns = double.Parse(splited[1]);
                            }
                            else
                            {
                                ns = Convert.ToDouble(Lt.Cage06.ToString());
                            }
                            ns = (double)System.Math.Round(ns, 2);
                            //TODO: check the confusion here in 3 posts
                            TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + productionJourneeModels[1].NbrRealisee * facteur2 + +arret.NbrBilleteRealisees * facteur3) + ns;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            TonnageNew = (double)(productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur3);
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if (jpm.Poste == 2)
            {
                var facteur1 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                {
                    facteur1 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                {
                    facteur1 = XpertHelper.NetTonnage130;
                }

                var facteur2 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                {
                    facteur2 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                {
                    facteur2 = XpertHelper.NetTonnage130;
                }
                var facteur3 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                {
                    facteur3 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                {
                    facteur3 = XpertHelper.NetTonnage130;
                }
                var ns = 0.0;
                if (Lt.Cage06.Contains("-"))
                {
                    var splited = Lt.Cage06.Split("-");
                    ns = double.Parse(splited[1]);
                }
                else
                {
                    ns = Convert.ToDouble(Lt.Cage06.ToString());
                }
                ns = (double)System.Math.Round(ns, 2);
                //TODO: check the confusion here in 3 posts
                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 + productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur2);
                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
            }
            if (jpm.Poste == 1)
            {
                var p = 0.0;
                if (Lt.Cage06.Contains("-"))
                {
                    var splited = Lt.Cage06.Split("-");
                    p = double.Parse(splited[1]);
                }
                else
                {
                    p = Convert.ToDouble(Lt.Cage06.ToString());
                }
                p = (double)System.Math.Round(p, 2);
                foreach (var itemU in productionJourneeModels)
                {
                    if (itemU.NumRapport == arret.NumRapport)
                    {
                        var f = 0.0;
                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                        {
                            f = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                        {
                            f = XpertHelper.NetTonnage130;
                        }
                        TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                        var totalpost1 = 0.0;
                        var totalpost2 = 0.0;
                        var totalpost3 = 0.0;
                        //En cas il yas de changement de billete entre les posts dans la meme journee
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                        {
                            totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                        {
                            totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                        {
                            totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                        {
                            totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                        {
                            totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                        {
                            totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130;
                        }
                        TonnageNew = totalpost1 + totalpost2 + totalpost3;
                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                    }
                }
            }
            var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
            updt.Cage06 = Convert.ToString(TonnageOld + "-" + TonnageNew);
            _context.ProdTonnagesCages.Update(updt);

        }
        //===================Cage07======================
        public async void TonnageCage07Computing2postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
                {
                    var inCylindre = 0;
                    var incalibres = 0;
                    if (jpm.Poste == 1)
                    {
                        foreach (var elem in cylindres)
                        {
                            var machineCylindres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCylindres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                inCylindre = 1;
                            }
                        }
                        foreach (var elem in calibres)
                        {
                            var machineCalibres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCalibres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                incalibres = 1;
                            }
                        }
                        if (inCylindre == 0 && incalibres == 0)
                        {
                            var p = 0.0;
                            if (Lt.Cage07.Contains("-"))
                            {
                                var splited = Lt.Cage07.Split("-");
                                p = double.Parse(splited[1]);
                            }
                            else
                            {
                                p = Convert.ToDouble(Lt.Cage07.ToString());
                            }
                            p = (double)System.Math.Round(p, 2);
                            foreach (var itemU in productionJourneeModels)
                            {
                                if (itemU.NumRapport == arret.NumRapport)
                                {
                                    var f = 0.0;
                                    if (Convert.ToDouble(itemU.DimBillete) == 125)
                                    {
                                        f = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(itemU.DimBillete) == 130)
                                    {
                                        f = XpertHelper.NetTonnage130;
                                    }
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    var totalpost1 = 0.0;
                                    var totalpost2 = 0.0;
                                    //En cas il yas de changement de billete entre les posts dans la meme journee
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                    {
                                        totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                    {
                                        totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                                    }

                                    TonnageNew = totalpost1 + totalpost2;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                    }
                    if (jpm.Poste == 2)
                    {
                        var facteur1 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                        {
                            facteur1 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                        {
                            facteur1 = XpertHelper.NetTonnage130;
                        }

                        var facteur2 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                        {
                            facteur2 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                        {
                            facteur2 = XpertHelper.NetTonnage130;
                        }

                        var ns = 0.0;
                        if (Lt.Cage07.Contains("-"))
                        {
                            var splited = Lt.Cage07.Split("-");
                            ns = double.Parse(splited[1]);
                        }
                        else
                        {
                            ns = Convert.ToDouble(Lt.Cage07.ToString());
                        }
                        ns = (double)System.Math.Round(ns, 2);
                        //TODO: check the confusion here in 3 posts
                        TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                        TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 - arret.NbrBilleteRealisees * facteur2);
                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                    }
                    var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
                    updt.Cage07 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                    _context.ProdTonnagesCages.Update(updt);
                }
        public async void TonnageCage07Computing3postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
                {
                    var inCylindre = 0;
                    var incalibres = 0;
                    if (jpm.Poste == 3)
                    {
                        foreach (var elem in cylindres)
                        {
                            var machineCylindres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCylindres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                inCylindre = 1;
                            }
                        }
                        foreach (var elem in calibres)
                        {
                            var machineCalibres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCalibres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                incalibres = 1;
                            }
                        }
                        if (inCylindre == 0 && incalibres == 0)
                        {
                            var p = 0.0;
                            if (Lt.Cage07.Contains("-"))
                            {
                                var splited = Lt.Cage07.Split("-");
                                p = double.Parse(splited[1]);
                            }
                            else
                            {
                                p = Convert.ToDouble(Lt.Cage07.ToString());
                            }
                            p = (double)System.Math.Round(p, 2);
                            foreach (var itemU in productionJourneeModels)
                            {
                                if (itemU.NumRapport == arret.NumRapport)
                                {
                                    var facteur1 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                    {
                                        facteur1 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                    {
                                        facteur1 = XpertHelper.NetTonnage130;
                                    }
                                    var facteur2 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        facteur2 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        facteur2 = XpertHelper.NetTonnage130;
                                    }
                                    var facteur3 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                                    {
                                        facteur3 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                                    {
                                        facteur3 = XpertHelper.NetTonnage130;
                                    }
                                    var ns = 0.0;
                                    if (Lt.Cage07.Contains("-"))
                                    {
                                        var splited = Lt.Cage07.Split("-");
                                        ns = double.Parse(splited[1]);
                                    }
                                    else
                                    {
                                        ns = Convert.ToDouble(Lt.Cage07.ToString());
                                    }
                                    ns = (double)System.Math.Round(ns, 2);
                                    //TODO: check the confusion here in 3 posts
                                    TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + productionJourneeModels[1].NbrRealisee * facteur2 + +arret.NbrBilleteRealisees * facteur3) + ns;
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = (double)(productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur3);
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                    }
                    if (jpm.Poste == 2)
                    {
                        var facteur1 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                        {
                            facteur1 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                        {
                            facteur1 = XpertHelper.NetTonnage130;
                        }

                        var facteur2 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                        {
                            facteur2 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                        {
                            facteur2 = XpertHelper.NetTonnage130;
                        }
                        var facteur3 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                        {
                            facteur3 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                        {
                            facteur3 = XpertHelper.NetTonnage130;
                        }
                        var ns = 0.0;
                        if (Lt.Cage07.Contains("-"))
                        {
                            var splited = Lt.Cage07.Split("-");
                            ns = double.Parse(splited[1]);
                        }
                        else
                        {
                            ns = Convert.ToDouble(Lt.Cage07.ToString());
                        }
                        ns = (double)System.Math.Round(ns, 2);
                        //TODO: check the confusion here in 3 posts
                        TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                        TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 + productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur2);
                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                    }
                    if (jpm.Poste == 1)
                    {
                        var p = 0.0;
                        if (Lt.Cage07.Contains("-"))
                        {
                            var splited = Lt.Cage07.Split("-");
                            p = double.Parse(splited[1]);
                        }
                        else
                        {
                            p = Convert.ToDouble(Lt.Cage07.ToString());
                        }
                        p = (double)System.Math.Round(p, 2);
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                var f = 0.0;
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    f = XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    f = XpertHelper.NetTonnage130;
                                }
                                TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                var totalpost1 = 0.0;
                                var totalpost2 = 0.0;
                                var totalpost3 = 0.0;
                                //En cas il yas de changement de billete entre les posts dans la meme journee
                                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                                }
                                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                {
                                    totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                {
                                    totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                                }
                                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130;
                                }
                                TonnageNew = totalpost1 + totalpost2 + totalpost3;
                                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                            }
                        }
                    }
                    var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
                    updt.Cage07 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                    _context.ProdTonnagesCages.Update(updt);
                }
        //===================Cage08======================
        public async void TonnageCage08Computing2postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            if (jpm.Poste == 1)
            {
                foreach (var elem in cylindres)
                {
                    var machineCylindres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCylindres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        inCylindre = 1;
                    }
                }
                foreach (var elem in calibres)
                {
                    var machineCalibres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        incalibres = 1;
                    }
                }
                if (inCylindre == 0 && incalibres == 0)
                {
                    var p = 0.0;
                    if (Lt.Cage08.Contains("-"))
                    {
                        var splited = Lt.Cage08.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage08.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var f = 0.0;
                            if (Convert.ToDouble(itemU.DimBillete) == 125)
                            {
                                f = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(itemU.DimBillete) == 130)
                            {
                                f = XpertHelper.NetTonnage130;
                            }
                            TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            var totalpost1 = 0.0;
                            var totalpost2 = 0.0;
                            //En cas il yas de changement de billete entre les posts dans la meme journee
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                            }

                            TonnageNew = totalpost1 + totalpost2;
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if (jpm.Poste == 2)
            {
                var facteur1 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                {
                    facteur1 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                {
                    facteur1 = XpertHelper.NetTonnage130;
                }

                var facteur2 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                {
                    facteur2 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                {
                    facteur2 = XpertHelper.NetTonnage130;
                }

                var ns = 0.0;
                if (Lt.Cage08.Contains("-"))
                {
                    var splited = Lt.Cage08.Split("-");
                    ns = double.Parse(splited[1]);
                }
                else
                {
                    ns = Convert.ToDouble(Lt.Cage08.ToString());
                }
                ns = (double)System.Math.Round(ns, 2);
                //TODO: check the confusion here in 3 posts
                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 - arret.NbrBilleteRealisees * facteur2);
                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
            }
            var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
            updt.Cage08 = Convert.ToString(TonnageOld + "-" + TonnageNew);
            _context.ProdTonnagesCages.Update(updt);
        }
        public async void TonnageCage08Computing3postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            if (jpm.Poste == 3)
            {
                foreach (var elem in cylindres)
                {
                    var machineCylindres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCylindres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        inCylindre = 1;
                    }
                }
                foreach (var elem in calibres)
                {
                    var machineCalibres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        incalibres = 1;
                    }
                }
                if (inCylindre == 0 && incalibres == 0)
                {
                    var p = 0.0;
                    if (Lt.Cage08.Contains("-"))
                    {
                        var splited = Lt.Cage08.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage08.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var facteur1 = 0.0;
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                facteur1 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                facteur1 = XpertHelper.NetTonnage130;
                            }
                            var facteur2 = 0.0;
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                facteur2 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                facteur2 = XpertHelper.NetTonnage130;
                            }
                            var facteur3 = 0.0;
                            if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                            {
                                facteur3 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                            {
                                facteur3 = XpertHelper.NetTonnage130;
                            }
                            var ns = 0.0;
                            if (Lt.Cage08.Contains("-"))
                            {
                                var splited = Lt.Cage08.Split("-");
                                ns = double.Parse(splited[1]);
                            }
                            else
                            {
                                ns = Convert.ToDouble(Lt.Cage08.ToString());
                            }
                            ns = (double)System.Math.Round(ns, 2);
                            //TODO: check the confusion here in 3 posts
                            TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + productionJourneeModels[1].NbrRealisee * facteur2 + +arret.NbrBilleteRealisees * facteur3) + ns;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            TonnageNew = (double)(productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur3);
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if (jpm.Poste == 2)
            {
                var facteur1 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                {
                    facteur1 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                {
                    facteur1 = XpertHelper.NetTonnage130;
                }

                var facteur2 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                {
                    facteur2 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                {
                    facteur2 = XpertHelper.NetTonnage130;
                }
                var facteur3 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                {
                    facteur3 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                {
                    facteur3 = XpertHelper.NetTonnage130;
                }
                var ns = 0.0;
                if (Lt.Cage08.Contains("-"))
                {
                    var splited = Lt.Cage08.Split("-");
                    ns = double.Parse(splited[1]);
                }
                else
                {
                    ns = Convert.ToDouble(Lt.Cage08.ToString());
                }
                ns = (double)System.Math.Round(ns, 2);
                //TODO: check the confusion here in 3 posts
                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 + productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur2);
                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
            }
            if (jpm.Poste == 1)
            {
                var p = 0.0;
                if (Lt.Cage08.Contains("-"))
                {
                    var splited = Lt.Cage08.Split("-");
                    p = double.Parse(splited[1]);
                }
                else
                {
                    p = Convert.ToDouble(Lt.Cage08.ToString());
                }
                p = (double)System.Math.Round(p, 2);
                foreach (var itemU in productionJourneeModels)
                {
                    if (itemU.NumRapport == arret.NumRapport)
                    {
                        var f = 0.0;
                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                        {
                            f = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                        {
                            f = XpertHelper.NetTonnage130;
                        }
                        TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                        var totalpost1 = 0.0;
                        var totalpost2 = 0.0;
                        var totalpost3 = 0.0;
                        //En cas il yas de changement de billete entre les posts dans la meme journee
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                        {
                            totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                        {
                            totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                        {
                            totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                        {
                            totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                        {
                            totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                        {
                            totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130;
                        }
                        TonnageNew = totalpost1 + totalpost2 + totalpost3;
                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                    }
                }
            }
            var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
            updt.Cage08 = Convert.ToString(TonnageOld + "-" + TonnageNew);
            _context.ProdTonnagesCages.Update(updt);
        }
        //===================Cage09======================
        public async void TonnageCage09Computing2postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
                {
                    var inCylindre = 0;
                    var incalibres = 0;
                    if (jpm.Poste == 1)
                    {
                        foreach (var elem in cylindres)
                        {
                            var machineCylindres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCylindres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                inCylindre = 1;
                            }
                        }
                        foreach (var elem in calibres)
                        {
                            var machineCalibres =
                                _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToList();
                            var nm = machineCalibres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                incalibres = 1;
                            }
                        }
                        if (inCylindre == 0 && incalibres == 0)
                        {
                            var p = 0.0;
                            if (Lt.Cage09.Contains("-"))
                            {
                                var splited = Lt.Cage09.Split("-");
                                p = double.Parse(splited[1]);
                            }
                            else
                            {
                                p = Convert.ToDouble(Lt.Cage09.ToString());
                            }
                            p = (double)System.Math.Round(p, 2);
                            foreach (var itemU in productionJourneeModels)
                            {
                                if (itemU.NumRapport == arret.NumRapport)
                                {
                                    var f = 0.0;
                                    if (Convert.ToDouble(itemU.DimBillete) == 125)
                                    {
                                        f = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(itemU.DimBillete) == 130)
                                    {
                                        f = XpertHelper.NetTonnage130;
                                    }
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    var totalpost1 = 0.0;
                                    var totalpost2 = 0.0;
                                    //En cas il yas de changement de billete entre les posts dans la meme journee
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                    {
                                        totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                    {
                                        totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                                    }

                                    TonnageNew = totalpost1 + totalpost2;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                    }
                    if (jpm.Poste == 2)
                    {
                        var facteur1 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                        {
                            facteur1 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                        {
                            facteur1 = XpertHelper.NetTonnage130;
                        }

                        var facteur2 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                        {
                            facteur2 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                        {
                            facteur2 = XpertHelper.NetTonnage130;
                        }

                        var ns = 0.0;
                        if (Lt.Cage09.Contains("-"))
                        {
                            var splited = Lt.Cage09.Split("-");
                            ns = double.Parse(splited[1]);
                        }
                        else
                        {
                            ns = Convert.ToDouble(Lt.Cage09.ToString());
                        }
                        ns = (double)System.Math.Round(ns, 2);
                        //TODO: check the confusion here in 3 posts
                        TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                        TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 - arret.NbrBilleteRealisees * facteur2);
                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                    }
                    var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
                    updt.Cage09 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                    _context.ProdTonnagesCages.Update(updt);
                }
        public void TonnageCage09Computing3postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model,ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            int canUpdate = 1;
            foreach (var elem in cylindres)
            {
                var machineCylindres =
                        _context.Machines
                        .AsNoTracking()
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToList();
                var nm = machineCylindres.Last();
                // test if in calibres 
                if (nm.NomMachine.Equals(arret.SubMachine))
                {
                    // Tonnage realisee de cette machine
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            if(itemU .Poste != model.Poste)
                            {
                                canUpdate = 0;
                            }
                            if (jpm.Poste == 1)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                            if (jpm.Poste == 3)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = (double)((productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125) - TonnageOld);
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = (double)((productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130 + productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130) - TonnageOld);
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                            if (jpm.Poste == 2)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = (double)((productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125
                                        + productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130) - TonnageOld);
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = (double)((productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130
                                        + productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130) - TonnageOld);
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                    }
                    inCylindre = 1;
                }
            }
            foreach (var elem in calibres)
            {
                var machineCalibres =
                        _context.Machines
                        .AsNoTracking()
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToList();
                if (machineCalibres.Count != 0)
                {
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (itemU.Poste != 3 && model.Poste == 3)
                                {
                                    canUpdate = 0;
                                }
                                if (jpm.Poste == 1)
                                {
                                    if (Convert.ToDouble(itemU.DimBillete) == 125)
                                    {
                                        TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                        TonnageNew = total - TonnageOld;
                                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                    }
                                    if (Convert.ToDouble(itemU.DimBillete) == 130)
                                    {
                                        TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                        TonnageNew = total - TonnageOld;
                                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                    }
                                }
                                if (jpm.Poste == 3)
                                {
                                    if (Convert.ToDouble(itemU.DimBillete) == 125)
                                    {
                                        TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                        TonnageNew = (double)((productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125) - TonnageOld);
                                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);

                                    }
                                    if (Convert.ToDouble(itemU.DimBillete) == 130)
                                    {
                                        TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                        TonnageNew = (double)((productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130 + productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130) - TonnageOld);
                                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                    }
                                }
                                if (jpm.Poste == 2)
                                {
                                    if (Convert.ToDouble(itemU.DimBillete) == 125)
                                    {
                                        TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                        TonnageNew = (double)((productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125
                                            + productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130) - TonnageOld);
                                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                    }
                                    if (Convert.ToDouble(itemU.DimBillete) == 130)
                                    {
                                        TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                        TonnageNew = (double)((productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130
                                            + productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130) - TonnageOld);
                                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                    }
                                }
                            }
                        }
                        incalibres = 1;
                    }

                }
            }
            int test = 0;
            if(arret.EnumArret == "PS" && arret.NbrBilleteRealisees != 0)
            {
                test = 1;
            }
            if (inCylindre == 0 && incalibres == 0 && test ==0)
            {
                var p = 0.0;
                if (arret.SubMachine.Equals("Cage01"))
                {
                    if (Lt.Cage01.Contains("-"))
                    {
                        var splited = Lt.Cage01.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage01.ToString());
                    }
                }
                if (arret.SubMachine.Equals("Cage02"))
                {
                    if (Lt.Cage02.Contains("-"))
                    {
                        var splited = Lt.Cage02.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage02.ToString());
                    }
                }
                if (arret.SubMachine.Equals("Cage03"))
                {
                    if (Lt.Cage03.Contains("-"))
                    {
                        var splited = Lt.Cage03.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage03.ToString());
                    }
                }
                if (arret.SubMachine.Equals("Cage04"))
                {
                    if (Lt.Cage04.Contains("-"))
                    {
                        var splited = Lt.Cage04.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage04.ToString());
                    }
                }
                if (arret.SubMachine.Equals("Cage05"))
                {
                    if (Lt.Cage05.Contains("-"))
                    {
                        var splited = Lt.Cage05.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage05.ToString());
                    }
                }
                if (arret.SubMachine.Equals("Cage06"))
                {
                    if (Lt.Cage06.Contains("-"))
                    {
                        var splited = Lt.Cage06.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage06.ToString());
                    }
                }
                if (arret.SubMachine.Equals("Cage07"))
                {
                    if (Lt.Cage07.Contains("-"))
                    {
                        var splited = Lt.Cage06.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage06.ToString());
                    }
                }
                if (arret.SubMachine.Equals("Cage08"))
                {
                    if (Lt.Cage08.Contains("-"))
                    {
                        var splited = Lt.Cage08.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage08.ToString());
                    }
                }
                if (arret.SubMachine.Equals("Cage09"))
                {
                    if (Lt.Cage09.Contains("-"))
                    {
                        var splited = Lt.Cage09.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage09.ToString());
                    }
                }
                if (arret.SubMachine.Equals("Cage10"))
                {
                    if (Lt.Cage10.Contains("-"))
                    {
                        var splited = Lt.Cage10.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage10.ToString());
                    }
                }
                if (arret.SubMachine.Equals("Cage11"))
                {
                    if (Lt.Cage11.Contains("-"))
                    {
                        var splited = Lt.Cage11.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage11.ToString());
                    }
                }
                if (arret.SubMachine.Equals("Cage12"))
                {
                    if (Lt.Cage12.Contains("-"))
                    {
                        var splited = Lt.Cage12.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage12.ToString());
                    }
                }
                if (arret.SubMachine.Equals("Cage13"))
                {
                    if (Lt.Cage13.Contains("-"))
                    {
                        var splited = Lt.Cage13.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage13.ToString());
                    }
                }
                p = (double)System.Math.Round(p, 2);
                foreach (var itemU in productionJourneeModels)
                {
                    if (itemU.NumRapport == arret.NumRapport)
                    {
                        var facteur1 = 0.0;
                        var facteur2 = 0.0;
                        var facteur3 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                        {
                            facteur1 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                        {
                            facteur1 = XpertHelper.NetTonnage130;
                        }
                        if (productionJourneeModels.Count() > 1)
                        {
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                facteur2 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                facteur2 = XpertHelper.NetTonnage130;
                            }
                        }
                        if (productionJourneeModels.Count() > 2)
                        {
                            if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                            {
                                facteur3 = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                            {
                                facteur3 = XpertHelper.NetTonnage130;
                            }
                        }
                        if (jpm.Poste == 1)
                        {
                            TonnageOld = (double)arret.NbrBilleteRealisees * facteur1 + p;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            TonnageNew = (double)(XpertHelper.Total - arret.NbrBilleteRealisees * facteur1);
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                        if (jpm.Poste == 3)
                        {
                            TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + productionJourneeModels[1].NbrRealisee * facteur2 + +arret.NbrBilleteRealisees * facteur3) + p;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            TonnageNew = (double)(productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur3);
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                        if (jpm.Poste == 2)
                        {
                            TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + p;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            if(productionJourneeModels.Count() == 3)
                            {
                                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 + productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur2);
                            }
                            if (productionJourneeModels.Count() == 2)
                            {
                                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 - arret.NbrBilleteRealisees * facteur2);
                            }
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if(canUpdate == 1)
            {
                if (arret.SubMachine.Equals("Cage01"))
                {
                    updtModel.Cage01 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                }
                if (arret.SubMachine.Equals("Cage02"))
                {
                    updtModel.Cage02 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                }
                if (arret.SubMachine.Equals("Cage03"))
                {
                    updtModel.Cage03 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                }
                if (arret.SubMachine.Equals("Cage04"))
                {
                    updtModel.Cage04 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                }
                if (arret.SubMachine.Equals("Cage05"))
                {
                    updtModel.Cage05 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                }
                if (arret.SubMachine.Equals("Cage06"))
                {
                    updtModel.Cage06 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                }
                if (arret.SubMachine.Equals("Cage07"))
                {
                    updtModel.Cage07 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                }
                if (arret.SubMachine.Equals("Cage08"))
                {
                    updtModel.Cage08 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                }
                if (arret.SubMachine.Equals("Cage09"))
                {
                    updtModel.Cage09 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                }
                if (arret.SubMachine.Equals("Cage10"))
                {
                    updtModel.Cage10 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                }
                if (arret.SubMachine.Equals("Cage11"))
                {
                    updtModel.Cage11 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                }
                if (arret.SubMachine.Equals("Cage12"))
                {
                    updtModel.Cage12 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                }
                if (arret.SubMachine.Equals("Cage13"))
                {
                    updtModel.Cage13 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                }
            }

        }
        //===================Cage10======================
        public async void TonnageCage10Computing2postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            if (jpm.Poste == 1)
            {
                foreach (var elem in cylindres)
                {
                    var machineCylindres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCylindres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        inCylindre = 1;
                    }
                }
                foreach (var elem in calibres)
                {
                    var machineCalibres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        incalibres = 1;
                    }
                }
                if (inCylindre == 0 && incalibres == 0)
                {
                    var p = 0.0;
                    if (Lt.Cage10.Contains("-"))
                    {
                        var splited = Lt.Cage10.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage10.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var f = 0.0;
                            if (Convert.ToDouble(itemU.DimBillete) == 125)
                            {
                                f = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(itemU.DimBillete) == 130)
                            {
                                f = XpertHelper.NetTonnage130;
                            }
                            TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            var totalpost1 = 0.0;
                            var totalpost2 = 0.0;
                            //En cas il yas de changement de billete entre les posts dans la meme journee
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                            }

                            TonnageNew = totalpost1 + totalpost2;
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if (jpm.Poste == 2)
            {
                var facteur1 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                {
                    facteur1 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                {
                    facteur1 = XpertHelper.NetTonnage130;
                }

                var facteur2 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                {
                    facteur2 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                {
                    facteur2 = XpertHelper.NetTonnage130;
                }

                var ns = 0.0;
                if (Lt.Cage10.Contains("-"))
                {
                    var splited = Lt.Cage10.Split("-");
                    ns = double.Parse(splited[1]);
                }
                else
                {
                    ns = Convert.ToDouble(Lt.Cage10.ToString());
                }
                ns = (double)System.Math.Round(ns, 2);
                //TODO: check the confusion here in 3 posts
                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 - arret.NbrBilleteRealisees * facteur2);
                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
            }
            var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
            updt.Cage10 = Convert.ToString(TonnageOld + "-" + TonnageNew);
            _context.ProdTonnagesCages.Update(updt);
        }
        public async void TonnageCage10Computing3postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
                {
                    var inCylindre = 0;
                    var incalibres = 0;
                    if (jpm.Poste == 3)
                    {
                        foreach (var elem in cylindres)
                        {
                            var machineCylindres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCylindres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                inCylindre = 1;
                            }
                        }
                        foreach (var elem in calibres)
                        {
                            var machineCalibres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCalibres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                incalibres = 1;
                            }
                        }
                        if (inCylindre == 0 && incalibres == 0)
                        {
                            var p = 0.0;
                            if (Lt.Cage10.Contains("-"))
                            {
                                var splited = Lt.Cage10.Split("-");
                                p = double.Parse(splited[1]);
                            }
                            else
                            {
                                p = Convert.ToDouble(Lt.Cage10.ToString());
                            }
                            p = (double)System.Math.Round(p, 2);
                            foreach (var itemU in productionJourneeModels)
                            {
                                if (itemU.NumRapport == arret.NumRapport)
                                {
                                    var facteur1 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                    {
                                        facteur1 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                    {
                                        facteur1 = XpertHelper.NetTonnage130;
                                    }
                                    var facteur2 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        facteur2 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        facteur2 = XpertHelper.NetTonnage130;
                                    }
                                    var facteur3 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                                    {
                                        facteur3 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                                    {
                                        facteur3 = XpertHelper.NetTonnage130;
                                    }
                                    var ns = 0.0;
                                    if (Lt.Cage10.Contains("-"))
                                    {
                                        var splited = Lt.Cage10.Split("-");
                                        ns = double.Parse(splited[1]);
                                    }
                                    else
                                    {
                                        ns = Convert.ToDouble(Lt.Cage10.ToString());
                                    }
                                    ns = (double)System.Math.Round(ns, 2);
                                    //TODO: check the confusion here in 3 posts
                                    TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + productionJourneeModels[1].NbrRealisee * facteur2 + +arret.NbrBilleteRealisees * facteur3) + ns;
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = (double)(productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur3);
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                    }
                    if (jpm.Poste == 2)
                    {
                        var facteur1 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                        {
                            facteur1 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                        {
                            facteur1 = XpertHelper.NetTonnage130;
                        }

                        var facteur2 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                        {
                            facteur2 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                        {
                            facteur2 = XpertHelper.NetTonnage130;
                        }
                        var facteur3 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                        {
                            facteur3 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                        {
                            facteur3 = XpertHelper.NetTonnage130;
                        }
                        var ns = 0.0;
                        if (Lt.Cage10.Contains("-"))
                        {
                            var splited = Lt.Cage10.Split("-");
                            ns = double.Parse(splited[1]);
                        }
                        else
                        {
                            ns = Convert.ToDouble(Lt.Cage10.ToString());
                        }
                        ns = (double)System.Math.Round(ns, 2);
                        //TODO: check the confusion here in 3 posts
                        TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                        TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 + productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur2);
                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                    }
                    if (jpm.Poste == 1)
                    {
                        var p = 0.0;
                        if (Lt.Cage10.Contains("-"))
                        {
                            var splited = Lt.Cage10.Split("-");
                            p = double.Parse(splited[1]);
                        }
                        else
                        {
                            p = Convert.ToDouble(Lt.Cage10.ToString());
                        }
                        p = (double)System.Math.Round(p, 2);
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                var f = 0.0;
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    f = XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    f = XpertHelper.NetTonnage130;
                                }
                                TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                var totalpost1 = 0.0;
                                var totalpost2 = 0.0;
                                var totalpost3 = 0.0;
                                //En cas il yas de changement de billete entre les posts dans la meme journee
                                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                                }
                                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                {
                                    totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                {
                                    totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                                }
                                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130;
                                }
                                TonnageNew = totalpost1 + totalpost2 + totalpost3;
                                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                            }
                        }
                    }
                    var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
                    updt.Cage10 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                    _context.ProdTonnagesCages.Update(updt);
                }
        //===================Cage11======================
        public async void TonnageCage11Computing2postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            if (jpm.Poste == 1)
            {
                foreach (var elem in cylindres)
                {
                    var machineCylindres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCylindres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        inCylindre = 1;
                    }
                }
                foreach (var elem in calibres)
                {
                    var machineCalibres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        incalibres = 1;
                    }
                }
                if (inCylindre == 0 && incalibres == 0)
                {
                    var p = 0.0;
                    if (Lt.Cage11.Contains("-"))
                    {
                        var splited = Lt.Cage11.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage11.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var f = 0.0;
                            if (Convert.ToDouble(itemU.DimBillete) == 125)
                            {
                                f = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(itemU.DimBillete) == 130)
                            {
                                f = XpertHelper.NetTonnage130;
                            }
                            TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            var totalpost1 = 0.0;
                            var totalpost2 = 0.0;
                            //En cas il yas de changement de billete entre les posts dans la meme journee
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                            }

                            TonnageNew = totalpost1 + totalpost2;
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if (jpm.Poste == 2)
            {
                var facteur1 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                {
                    facteur1 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                {
                    facteur1 = XpertHelper.NetTonnage130;
                }

                var facteur2 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                {
                    facteur2 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                {
                    facteur2 = XpertHelper.NetTonnage130;
                }

                var ns = 0.0;
                if (Lt.Cage11.Contains("-"))
                {
                    var splited = Lt.Cage11.Split("-");
                    ns = double.Parse(splited[1]);
                }
                else
                {
                    ns = Convert.ToDouble(Lt.Cage11.ToString());
                }
                ns = (double)System.Math.Round(ns, 2);
                //TODO: check the confusion here in 3 posts
                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 - arret.NbrBilleteRealisees * facteur2);
                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
            }
            var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
            updt.Cage11 = Convert.ToString(TonnageOld + "-" + TonnageNew);
            _context.ProdTonnagesCages.Update(updt);
        }
        public async void TonnageCage11Computing3postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
                {
                    var inCylindre = 0;
                    var incalibres = 0;
                    if (jpm.Poste == 3)
                    {
                        foreach (var elem in cylindres)
                        {
                            var machineCylindres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCylindres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                inCylindre = 1;
                            }
                        }
                        foreach (var elem in calibres)
                        {
                            var machineCalibres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCalibres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                incalibres = 1;
                            }
                        }
                        if (inCylindre == 0 && incalibres == 0)
                        {
                            var p = 0.0;
                            if (Lt.Cage11.Contains("-"))
                            {
                                var splited = Lt.Cage11.Split("-");
                                p = double.Parse(splited[1]);
                            }
                            else
                            {
                                p = Convert.ToDouble(Lt.Cage11.ToString());
                            }
                            p = (double)System.Math.Round(p, 2);
                            foreach (var itemU in productionJourneeModels)
                            {
                                if (itemU.NumRapport == arret.NumRapport)
                                {
                                    var facteur1 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                    {
                                        facteur1 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                    {
                                        facteur1 = XpertHelper.NetTonnage130;
                                    }
                                    var facteur2 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        facteur2 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        facteur2 = XpertHelper.NetTonnage130;
                                    }
                                    var facteur3 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                                    {
                                        facteur3 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                                    {
                                        facteur3 = XpertHelper.NetTonnage130;
                                    }
                                    var ns = 0.0;
                                    if (Lt.Cage11.Contains("-"))
                                    {
                                        var splited = Lt.Cage11.Split("-");
                                        ns = double.Parse(splited[1]);
                                    }
                                    else
                                    {
                                        ns = Convert.ToDouble(Lt.Cage11.ToString());
                                    }
                                    ns = (double)System.Math.Round(ns, 2);
                                    //TODO: check the confusion here in 3 posts
                                    TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + productionJourneeModels[1].NbrRealisee * facteur2 + +arret.NbrBilleteRealisees * facteur3) + ns;
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = (double)(productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur3);
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                    }
                    if (jpm.Poste == 2)
                    {
                        var facteur1 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                        {
                            facteur1 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                        {
                            facteur1 = XpertHelper.NetTonnage130;
                        }

                        var facteur2 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                        {
                            facteur2 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                        {
                            facteur2 = XpertHelper.NetTonnage130;
                        }
                        var facteur3 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                        {
                            facteur3 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                        {
                            facteur3 = XpertHelper.NetTonnage130;
                        }
                        var ns = 0.0;
                        if (Lt.Cage11.Contains("-"))
                        {
                            var splited = Lt.Cage11.Split("-");
                            ns = double.Parse(splited[1]);
                        }
                        else
                        {
                            ns = Convert.ToDouble(Lt.Cage11.ToString());
                        }
                        ns = (double)System.Math.Round(ns, 2);
                        //TODO: check the confusion here in 3 posts
                        TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                        TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 + productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur2);
                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                    }
                    if (jpm.Poste == 1)
                    {
                        var p = 0.0;
                        if (Lt.Cage11.Contains("-"))
                        {
                            var splited = Lt.Cage11.Split("-");
                            p = double.Parse(splited[1]);
                        }
                        else
                        {
                            p = Convert.ToDouble(Lt.Cage11.ToString());
                        }
                        p = (double)System.Math.Round(p, 2);
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                var f = 0.0;
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    f = XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    f = XpertHelper.NetTonnage130;
                                }
                                TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                var totalpost1 = 0.0;
                                var totalpost2 = 0.0;
                                var totalpost3 = 0.0;
                                //En cas il yas de changement de billete entre les posts dans la meme journee
                                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                                }
                                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                {
                                    totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                {
                                    totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                                }
                                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130;
                                }
                                TonnageNew = totalpost1 + totalpost2 + totalpost3;
                                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                            }
                        }
                    }
                    var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
                    updt.Cage11 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                    _context.ProdTonnagesCages.Update(updt);
                }
        //===================Cage12======================
        public async void TonnageCage12Computing2postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            if (jpm.Poste == 1)
            {
                foreach (var elem in cylindres)
                {
                    var machineCylindres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCylindres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        inCylindre = 1;
                    }
                }
                foreach (var elem in calibres)
                {
                    var machineCalibres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        incalibres = 1;
                    }
                }
                if (inCylindre == 0 && incalibres == 0)
                {
                    var p = 0.0;
                    if (Lt.Cage12.Contains("-"))
                    {
                        var splited = Lt.Cage12.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage12.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var f = 0.0;
                            if (Convert.ToDouble(itemU.DimBillete) == 125)
                            {
                                f = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(itemU.DimBillete) == 130)
                            {
                                f = XpertHelper.NetTonnage130;
                            }
                            TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            var totalpost1 = 0.0;
                            var totalpost2 = 0.0;
                            //En cas il yas de changement de billete entre les posts dans la meme journee
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                            }

                            TonnageNew = totalpost1 + totalpost2;
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if (jpm.Poste == 2)
            {
                var facteur1 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                {
                    facteur1 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                {
                    facteur1 = XpertHelper.NetTonnage130;
                }

                var facteur2 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                {
                    facteur2 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                {
                    facteur2 = XpertHelper.NetTonnage130;
                }

                var ns = 0.0;
                if (Lt.Cage12.Contains("-"))
                {
                    var splited = Lt.Cage12.Split("-");
                    ns = double.Parse(splited[1]);
                }
                else
                {
                    ns = Convert.ToDouble(Lt.Cage12.ToString());
                }
                ns = (double)System.Math.Round(ns, 2);
                //TODO: check the confusion here in 3 posts
                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 - arret.NbrBilleteRealisees * facteur2);
                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
            }
            var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
            updt.Cage12 = Convert.ToString(TonnageOld + "-" + TonnageNew);
            _context.ProdTonnagesCages.Update(updt);
        }
        public async void TonnageCage12Computing3postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
                {
                    var inCylindre = 0;
                    var incalibres = 0;
                    if (jpm.Poste == 3)
                    {
                        foreach (var elem in cylindres)
                        {
                            var machineCylindres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCylindres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                inCylindre = 1;
                            }
                        }
                        foreach (var elem in calibres)
                        {
                            var machineCalibres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCalibres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                incalibres = 1;
                            }
                        }
                        if (inCylindre == 0 && incalibres == 0)
                        {
                            var p = 0.0;
                            if (Lt.Cage12.Contains("-"))
                            {
                                var splited = Lt.Cage12.Split("-");
                                p = double.Parse(splited[1]);
                            }
                            else
                            {
                                p = Convert.ToDouble(Lt.Cage12.ToString());
                            }
                            p = (double)System.Math.Round(p, 2);
                            foreach (var itemU in productionJourneeModels)
                            {
                                if (itemU.NumRapport == arret.NumRapport)
                                {
                                    var facteur1 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                    {
                                        facteur1 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                    {
                                        facteur1 = XpertHelper.NetTonnage130;
                                    }
                                    var facteur2 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        facteur2 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        facteur2 = XpertHelper.NetTonnage130;
                                    }
                                    var facteur3 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                                    {
                                        facteur3 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                                    {
                                        facteur3 = XpertHelper.NetTonnage130;
                                    }
                                    var ns = 0.0;
                                    if (Lt.Cage12.Contains("-"))
                                    {
                                        var splited = Lt.Cage12.Split("-");
                                        ns = double.Parse(splited[1]);
                                    }
                                    else
                                    {
                                        ns = Convert.ToDouble(Lt.Cage12.ToString());
                                    }
                                    ns = (double)System.Math.Round(ns, 2);
                                    //TODO: check the confusion here in 3 posts
                                    TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + productionJourneeModels[1].NbrRealisee * facteur2 + +arret.NbrBilleteRealisees * facteur3) + ns;
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = (double)(productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur3);
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                    }
                    if (jpm.Poste == 2)
                    {
                        var facteur1 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                        {
                            facteur1 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                        {
                            facteur1 = XpertHelper.NetTonnage130;
                        }

                        var facteur2 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                        {
                            facteur2 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                        {
                            facteur2 = XpertHelper.NetTonnage130;
                        }
                        var facteur3 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                        {
                            facteur3 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                        {
                            facteur3 = XpertHelper.NetTonnage130;
                        }
                        var ns = 0.0;
                        if (Lt.Cage12.Contains("-"))
                        {
                            var splited = Lt.Cage12.Split("-");
                            ns = double.Parse(splited[1]);
                        }
                        else
                        {
                            ns = Convert.ToDouble(Lt.Cage12.ToString());
                        }
                        ns = (double)System.Math.Round(ns, 2);
                        //TODO: check the confusion here in 3 posts
                        TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                        TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 + productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur2);
                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                    }
                    if (jpm.Poste == 1)
                    {
                        var p = 0.0;
                        if (Lt.Cage12.Contains("-"))
                        {
                            var splited = Lt.Cage12.Split("-");
                            p = double.Parse(splited[1]);
                        }
                        else
                        {
                            p = Convert.ToDouble(Lt.Cage12.ToString());
                        }
                        p = (double)System.Math.Round(p, 2);
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                var f = 0.0;
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    f = XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    f = XpertHelper.NetTonnage130;
                                }
                                TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                var totalpost1 = 0.0;
                                var totalpost2 = 0.0;
                                var totalpost3 = 0.0;
                                //En cas il yas de changement de billete entre les posts dans la meme journee
                                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                                }
                                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                {
                                    totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                {
                                    totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                                }
                                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130;
                                }
                                TonnageNew = totalpost1 + totalpost2 + totalpost3;
                                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                            }
                        }
                    }
                    var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
                    updt.Cage12 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                    _context.ProdTonnagesCages.Update(updt);
                }
        //===================Cage13======================
        public async void TonnageCage13Computing2postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
        {
            var inCylindre = 0;
            var incalibres = 0;
            if (jpm.Poste == 1)
            {
                foreach (var elem in cylindres)
                {
                    var machineCylindres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCylindres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        inCylindre = 1;
                    }
                }
                foreach (var elem in calibres)
                {
                    var machineCalibres =
                        await _context.Machines
                        .Where(c => c.NumMachine == elem.CodeMachine)
                        .Select(i => new
                        {
                            i.NomMachine
                        }).ToListAsync();
                    var nm = machineCalibres.Last();
                    // test if in calibres 
                    if (nm.NomMachine.Equals(arret.SubMachine))
                    {
                        // Tonnage realisee de cette machine
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = total - TonnageOld;
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                        incalibres = 1;
                    }
                }
                if (inCylindre == 0 && incalibres == 0)
                {
                    var p = 0.0;
                    if (Lt.Cage13.Contains("-"))
                    {
                        var splited = Lt.Cage13.Split("-");
                        p = double.Parse(splited[1]);
                    }
                    else
                    {
                        p = Convert.ToDouble(Lt.Cage13.ToString());
                    }
                    p = (double)System.Math.Round(p, 2);
                    foreach (var itemU in productionJourneeModels)
                    {
                        if (itemU.NumRapport == arret.NumRapport)
                        {
                            var f = 0.0;
                            if (Convert.ToDouble(itemU.DimBillete) == 125)
                            {
                                f = XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(itemU.DimBillete) == 130)
                            {
                                f = XpertHelper.NetTonnage130;
                            }
                            TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                            var totalpost1 = 0.0;
                            var totalpost2 = 0.0;
                            //En cas il yas de changement de billete entre les posts dans la meme journee
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                            {
                                totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                            }
                            if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                            {
                                totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                            }

                            TonnageNew = totalpost1 + totalpost2;
                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                        }
                    }
                }
            }
            if (jpm.Poste == 2)
            {
                var facteur1 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                {
                    facteur1 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                {
                    facteur1 = XpertHelper.NetTonnage130;
                }

                var facteur2 = 0.0;
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                {
                    facteur2 = XpertHelper.NetTonnage125;
                }
                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                {
                    facteur2 = XpertHelper.NetTonnage130;
                }

                var ns = 0.0;
                if (Lt.Cage12.Contains("-"))
                {
                    var splited = Lt.Cage13.Split("-");
                    ns = double.Parse(splited[1]);
                }
                else
                {
                    ns = Convert.ToDouble(Lt.Cage13.ToString());
                }
                ns = (double)System.Math.Round(ns, 2);
                //TODO: check the confusion here in 3 posts
                TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 - arret.NbrBilleteRealisees * facteur2);
                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
            }
            var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
            updt.Cage13 = Convert.ToString(TonnageOld + "-" + TonnageNew);
            _context.ProdTonnagesCages.Update(updt);
        }
        public async void TonnageCage13Computing3postes
            (ProductionJourneeModel jpm, double TonnageOld, double TonnageNew,
            ArretProductionJourneeModel arret, List<ProductionJourneeModel> productionJourneeModels, double total,
            List<ProdPreparationCylindreModele> cylindres, List<ProdPreparationCalibreModele> calibres,
            ProdTonnagesCagesModel Lt, JourneeProduction model, ProdTonnagesCages updtModel)//Lt is previousTonnagemodel
                {
                    var inCylindre = 0;
                    var incalibres = 0;
                    if (jpm.Poste == 3)
                    {
                        foreach (var elem in cylindres)
                        {
                            var machineCylindres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCylindres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                inCylindre = 1;
                            }
                        }
                        foreach (var elem in calibres)
                        {
                            var machineCalibres =
                                await _context.Machines
                                .Where(c => c.NumMachine == elem.CodeMachine)
                                .Select(i => new
                                {
                                    i.NomMachine
                                }).ToListAsync();
                            var nm = machineCalibres.Last();
                            // test if in calibres 
                            if (nm.NomMachine.Equals(arret.SubMachine))
                            {
                                // Tonnage realisee de cette machine
                                foreach (var itemU in productionJourneeModels)
                                {
                                    if (itemU.NumRapport == arret.NumRapport)
                                    {
                                        if (Convert.ToDouble(itemU.DimBillete) == 125)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage125);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                        if (Convert.ToDouble(itemU.DimBillete) == 130)
                                        {
                                            TonnageOld = (double)(arret.NbrBilleteRealisees * XpertHelper.NetTonnage130);
                                            TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                            TonnageNew = total - TonnageOld;
                                            TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                        }
                                    }
                                }
                                incalibres = 1;
                            }
                        }
                        if (inCylindre == 0 && incalibres == 0)
                        {
                            var p = 0.0;
                            if (Lt.Cage13.Contains("-"))
                            {
                                var splited = Lt.Cage13.Split("-");
                                p = double.Parse(splited[1]);
                            }
                            else
                            {
                                p = Convert.ToDouble(Lt.Cage13.ToString());
                            }
                            p = (double)System.Math.Round(p, 2);
                            foreach (var itemU in productionJourneeModels)
                            {
                                if (itemU.NumRapport == arret.NumRapport)
                                {
                                    var facteur1 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                    {
                                        facteur1 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                    {
                                        facteur1 = XpertHelper.NetTonnage130;
                                    }
                                    var facteur2 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                    {
                                        facteur2 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                    {
                                        facteur2 = XpertHelper.NetTonnage130;
                                    }
                                    var facteur3 = 0.0;
                                    if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                                    {
                                        facteur3 = XpertHelper.NetTonnage125;
                                    }
                                    if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                                    {
                                        facteur3 = XpertHelper.NetTonnage130;
                                    }
                                    var ns = 0.0;
                                    if (Lt.Cage13.Contains("-"))
                                    {
                                        var splited = Lt.Cage13.Split("-");
                                        ns = double.Parse(splited[1]);
                                    }
                                    else
                                    {
                                        ns = Convert.ToDouble(Lt.Cage13.ToString());
                                    }
                                    ns = (double)System.Math.Round(ns, 2);
                                    //TODO: check the confusion here in 3 posts
                                    TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + productionJourneeModels[1].NbrRealisee * facteur2 + +arret.NbrBilleteRealisees * facteur3) + ns;
                                    TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                    TonnageNew = (double)(productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur3);
                                    TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                                }
                            }
                        }
                    }
                    if (jpm.Poste == 2)
                    {
                        var facteur1 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                        {
                            facteur1 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                        {
                            facteur1 = XpertHelper.NetTonnage130;
                        }

                        var facteur2 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                        {
                            facteur2 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                        {
                            facteur2 = XpertHelper.NetTonnage130;
                        }
                        var facteur3 = 0.0;
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                        {
                            facteur3 = XpertHelper.NetTonnage125;
                        }
                        if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                        {
                            facteur3 = XpertHelper.NetTonnage130;
                        }
                        var ns = 0.0;
                        if (Lt.Cage13.Contains("-"))
                        {
                            var splited = Lt.Cage13.Split("-");
                            ns = double.Parse(splited[1]);
                        }
                        else
                        {
                            ns = Convert.ToDouble(Lt.Cage13.ToString());
                        }
                        ns = (double)System.Math.Round(ns, 2);
                        //TODO: check the confusion here in 3 posts
                        TonnageOld = (double)(productionJourneeModels[0].NbrRealisee * facteur1 + arret.NbrBilleteRealisees * facteur2) + ns;
                        TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                        TonnageNew = (double)(productionJourneeModels[1].NbrRealisee * facteur2 + productionJourneeModels[2].NbrRealisee * facteur3 - arret.NbrBilleteRealisees * facteur2);
                        TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                    }
                    if (jpm.Poste == 1)
                    {
                        var p = 0.0;
                        if (Lt.Cage13.Contains("-"))
                        {
                            var splited = Lt.Cage13.Split("-");
                            p = double.Parse(splited[1]);
                        }
                        else
                        {
                            p = Convert.ToDouble(Lt.Cage13.ToString());
                        }
                        p = (double)System.Math.Round(p, 2);
                        foreach (var itemU in productionJourneeModels)
                        {
                            if (itemU.NumRapport == arret.NumRapport)
                            {
                                var f = 0.0;
                                if (Convert.ToDouble(itemU.DimBillete) == 125)
                                {
                                    f = XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(itemU.DimBillete) == 130)
                                {
                                    f = XpertHelper.NetTonnage130;
                                }
                                TonnageOld = (double)(arret.NbrBilleteRealisees * f) + p;
                                TonnageOld = (double)System.Math.Round(TonnageOld, 2);
                                var totalpost1 = 0.0;
                                var totalpost2 = 0.0;
                                var totalpost3 = 0.0;
                                //En cas il yas de changement de billete entre les posts dans la meme journee
                                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 125)
                                {
                                    totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[0].DimBillete) == 130)
                                {
                                    totalpost1 = (double)(productionJourneeModels[0].NbrRealisee - Convert.ToDouble(arret.NbrBilleteRealisees)) * XpertHelper.NetTonnage130;
                                }
                                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 125)
                                {
                                    totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[1].DimBillete) == 130)
                                {
                                    totalpost2 = (double)productionJourneeModels[1].NbrRealisee * XpertHelper.NetTonnage130;
                                }
                                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 125)
                                {
                                    totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage125;
                                }
                                if (Convert.ToDouble(productionJourneeModels[2].DimBillete) == 130)
                                {
                                    totalpost3 = (double)productionJourneeModels[2].NbrRealisee * XpertHelper.NetTonnage130;
                                }
                                TonnageNew = totalpost1 + totalpost2 + totalpost3;
                                TonnageNew = (double)System.Math.Round(TonnageNew, 2);
                            }
                        }
                    }
                    var updt = await _context.ProdTonnagesCages.Where(c => c.DateJournee == model.Date).FirstOrDefaultAsync();
                    updt.Cage13 = Convert.ToString(TonnageOld + "-" + TonnageNew);
                    _context.ProdTonnagesCages.Update(updt);
                }
        #endregion
    }
}