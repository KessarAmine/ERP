@using DevKbfSteel.Models
@using DevExpress.XtraReports.UI;
@using DevKbfSteel.Controllers
@using DevExpress.XtraReports.Parameters;
@using DevKbfSteel.Reports
@using DevExpress.AspNetCore
@using DevExtreme.AspNet.Mvc
@using DevKbfSteel.Helpers;
@{
    ViewData["Title"] = "Exploitation-Configuration";
    Layout = "~/Views/Shared/_LayoutExploitationManager.cshtml";
}
@(Html.DevExtreme().Toolbar()
    .Items(items =>
    {
        items.Add()
           .Widget(w => w
           .Button()
           .Icon("refresh")
           .OnClick("refreshButton_click")
       )
       .LocateInMenu(ToolbarItemLocateInMenuMode.Auto)
       .Location(ToolbarItemLocation.Before);
    }
    )
)
@(Html.DevExtreme().DataGrid<DevKbfSteel.Entities.ConfigExploitation>()
.DataSource(ds => ds.Mvc()
 .Controller("ConfigExploitationManager")
 .LoadAction("Get")
 .InsertAction("Post")
 .UpdateAction("Put")
 .DeleteAction("Delete")
 .Key("Id")
 )
.Scrolling(scrolling => scrolling
.ScrollByContent(true)
.ShowScrollbar(ShowScrollbarMode.Always)
.Mode(GridScrollingMode.Virtual))
.Height("95%")
.RemoteOperations(true)
.ID("RhContratsDesEmployesGrid")
.NoDataText("Aucune donnée à afficher")
.CacheEnabled(true)
.SearchPanel(sp => sp.Placeholder("Rechercher").Visible(true))
.Columns(columns => {
    columns.AddFor(m => m.LimiteDemandeFourniture).MinWidth(100);
    columns.AddFor(m => m.LimiteCage1).Caption("Cage1").MinWidth(100);
    columns.AddFor(m => m.LimiteCage2).Caption("Cage2").MinWidth(100);
    columns.AddFor(m => m.LimiteCage3).Caption("Cage3").MinWidth(100);
    columns.AddFor(m => m.LimiteCage4).Caption("Cage4").MinWidth(100);
    columns.AddFor(m => m.LimiteCage5).Caption("Cage5").MinWidth(100);
    columns.AddFor(m => m.LimiteCage6).Caption("Cage6").MinWidth(100);
    columns.AddFor(m => m.LimiteCage7).Caption("Cage7").MinWidth(100);
    columns.AddFor(m => m.LimiteCage8).Caption("Cage8").MinWidth(100);
    columns.AddFor(m => m.LimiteCage9).Caption("Cage9").MinWidth(100);
    columns.AddFor(m => m.LimiteCage10).Caption("Cage10").MinWidth(100);
    columns.AddFor(m => m.LimiteCage11).Caption("Cage11").MinWidth(100);
    columns.AddFor(m => m.LimiteCage12).Caption("Cage12").MinWidth(100);
    columns.AddFor(m => m.LimiteCage13).Caption("Cage13").MinWidth(100);

    columns.Add()
    .Type(GridCommandColumnType.Buttons)
    .Width(110)
    .Buttons(b => {
        b.Add().Name(GridColumnButtonName.Edit);
        b.Add().Name(GridColumnButtonName.Delete);
    });
})
.Editing(editing =>
{
    editing.AllowUpdating(true);
    editing.AllowDeleting(true);
    editing.AllowAdding(true);
    editing.Mode(GridEditMode.Row);
})
.Export(e => e.Enabled(true).AllowExportSelectedData(true))
.FilterRow(f => f.Visible(true))
.HeaderFilter(headerfilter => headerfilter.Visible(true))
.GroupPanel(p => p.Visible(true))
.AllowColumnReordering(true)
.AllowColumnResizing(true)
.OnCellPrepared("receptionCell_prepared")
.Selection(s => s.Mode(SelectionMode.Multiple))
)
<script>

    function gridBoxIdEmployee_valueChanged(e) {
        var $dataGrid = $("#embedded-datagridMultipleIdEmployee");
        if ($dataGrid.length) {
            var dataGrid = $dataGrid.dxDataGrid("instance");
            dataGrid.selectRows(e.value, false);
        }
    }

    function gridBox_valueChanged(args, setValueMethod) {
        var $dataGrid = $("#embedded-datagridMultipleIdEmployee");

        if ($dataGrid.length) {
            var dataGrid = $dataGrid.dxDataGrid("instance");
            dataGrid.selectRows(args.value, false);
        }
        setValueMethod(args.value);
    }
    function onSelectionChanged(e, dropDownBoxInstance) {
        var keys = e.selectedRowKeys;
        dropDownBoxInstance.option("value", keys);
        console.log(dropDownBoxInstance);
    }

    function refreshButton_click() {
        DevExpress.ui.notify("Rafraichissement en cours!");
        var demandesTravailGrid = $("#RhContratsDesEmployesGrid").dxDataGrid("instance");
        var demandesTravailDS = demandesTravailGrid.getDataSource();
        demandesTravailGrid.beginCustomLoading("Chargement en cours...");
        demandesTravailDS.reload();
        demandesTravailGrid.refresh();
        demandesTravailGrid.endCustomLoading();
    }

    function addButton_click() {
        DevExpress.ui.notify("Ajouter une demande!");
        window.location.href = '@Url.Action("NewReception")';
    }

    function dateDebutBox_value() {
        var dateDebutBox = $("#FilterDateDebut").dxDateBox("instance");
        console.log(dateDebutBox.option('value'));
        return new Date(dateDebutBox.option('value')).toJSON();
    }

    function dateFinBox_value() {
        var dateFinBox = $("#FilterDateFin").dxDateBox("instance");
        console.log(dateFinBox.option('value'));
        return new Date(dateFinBox.option('value')).toJSON();
    }

    function receptionCell_prepared(e) {
        if (e.rowType === "data" && e.column.command === "edit") {
            var isEditing = e.row.isEditing, $links = e.cellElement.find(".dx-link");
            $links.text("");
            if (isEditing) {
                $links.filter(".dx-link-save").addClass("dx-icon-save");
                $links.filter(".dx-link-cancel").addClass("dx-icon-revert");
            } else {
                $links.filter(".dx-link-edit").addClass("dx-icon-edit");
                $links.filter(".dx-link-delete").addClass("dx-icon-trash");
            }
        }
        if (e.rowType === "data") {
            var dangerColor = "#f54542";
            if (e.column.dataField == "DateFinAmbouche") {
                var Today = new Date();
                var str = e.value;
                var aday = new Date();
                aday = str;
                console.log(aday);
                console.log(aday.getMonth() + 1);
                var month = Today.getMonth() + 1;
                if (month >= 12) {
                    month = 0;
                }
                console.log(month);
                if ((aday.getMonth() + 1 - month ) <= 2) {
                    $(e.cellElement).get(0).style.backgroundColor = dangerColor;
                }
            }
        }
    }

</script>