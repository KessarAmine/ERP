@using DevKbfSteel.Models
@using DevExpress.XtraReports.UI;
@using DevKbfSteel.Controllers
@using DevExpress.XtraReports.Parameters;
@using DevKbfSteel.Reports
@using DevExpress.AspNetCore
@using DevExtreme.AspNet.Mvc
@using DevKbfSteel.Helpers;

@{
    ViewData["Title"] = "Production Dashboard";
    Layout = "~/Views/Shared/_LayoutExploitationManager.cshtml";
}
<html style="height:100%;">

<body style="        height: 98%;">
    <div style="height:50%;">

        @(Html.DevExtreme().Chart()
.ID("chart")
.CommonSeriesSettings(s => s.ArgumentField("NomCage"))
.Panes(p =>
{
    p.Add().Name("TopPane");
})
.Series(s =>
{

s.Add()
    .Pane("TopPane")
        .Type(SeriesType.Bar)
        .ValueField("TonnageCage")
        .Name("Tonnage Cage")
        .Label(l => l
            .Visible(true)
            .CustomizeText(@<text>
                    function (){
                        return this.valueText;
                    }
                </text>));
    })
    .ValueAxis(a =>
    {
        a.Add()
            .Pane("TopPane")
            .Grid(g => g.Visible(true))
            .Title(t => t.Text("Tonnage ( T )"));
    })
    .Legend(l => l
        .VerticalAlignment(VerticalEdge.Bottom)
        .HorizontalAlignment(HorizontalAlignment.Center)
    )
    .Export(e => e.Enabled(true))
    .Title(t => t.Text("Tonnage des Cages"))
    .DataSource(d => d.Mvc()
        .Controller("Dashboard")
        .LoadAction("GetTonnageCages")
    )
)
    </div>
    <div style="height:50%;">
        @(Html.DevExtreme().PieChart()
.ID("pie")
.Size(s => s.Width(700).Height(400))
.Legend(l => l
.HorizontalAlignment(HorizontalAlignment.Center)
.VerticalAlignment(VerticalEdge.Bottom)
)
.Series(s =>
{
s.Add()
         .ArgumentField("NomService")
         .ValueField("TotalArret")
         .Label(l => l
             .Visible(true)
             .Connector(c => c
                 .Visible(true)
                 .Width(1)
             )
         .Format(Format.FixedPoint)
         .Position(PieChartLabelPosition.Columns)
         .CustomizeText(@<text>
                function (arg) {
                    return arg.valueText + " (" + arg.percentText + ")";

                }
            </text>)
         );
    }
    )
    .Title("Suivi des arrêts par service")
    .Export(e => e.Enabled(true))
    .OnPointClick(@<text>
        function (e) {
            var point = e.target;
            toggleVisibility(point);
        }
    </text>)
    .OnLegendClick(@<text>
        function (e) {
            var arg = e.target;
            toggleVisibility(this.getAllSeries()[0].getPointsByArg(arg)[0]);
        }
    </text>)
    .DataSource(d => d.Mvc()
        .Controller("Dashboard")
        .LoadAction("GetArretService")
    )

)
    </div>

</body>
</html>

<script>
    function toggleVisibility(item) {
        if (item.isVisible()) {
            item.hide();
        } else {
            item.show();
        }
    }
</script>
