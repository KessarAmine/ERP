@using DevKbfSteel.Helpers;
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - DevKbfSteel</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" integrity="sha512-+4zCK9k+qNFUR5X+cKL9EIR+ZOhtIloNl9GIKS57V1MyNsYpYcUrUeQc9vNfzsWfV28IaLL3i96P9sdNyeRssA==" crossorigin="anonymous" />
    @* Uncomment to use the HtmlEditor control *@
    @* <script src="https://cdnjs.cloudflare.com/ajax/libs/quill/1.3.6/quill.min.js"></script> *@

    @* Uncomment to use the Gantt control *@
    @*<link href="~/css/devextreme/dx-gantt.css" rel="stylesheet" />*@

    @* Uncomment to use the Diagram control *@
    @*<link href="~/css/devextreme/dx-diagram.css" rel="stylesheet" />*@

    <link href="~/css/devextreme/dx.common.css" rel="stylesheet" />
    <link href="~/css/devextreme/dx.light.css" rel="stylesheet" />
    <script src="~/js/devextreme/jszip.js"></script>

    @* Uncomment to use the Gantt control *@
    @*<script src="~/js/devextreme/dx-gantt.js"></script>*@

    @* Uncomment to use the Diagram control *@
    @*<script src="~/js/devextreme/dx-diagram.js"></script>*@

    <script src="~/js/devextreme/jquery.js"></script>
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="~/css/thirdparty.bundle.css" />
    <script src="~/js/thirdparty.bundle.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>




    @* Uncomment to use Globalize for localization *@
    @*<script src="~/js/devextreme/cldr.js"></script>*@
    @*<script src="~/js/devextreme/cldr/event.js"></script>*@
    @*<script src="~/js/devextreme/cldr/supplemental.js"></script>*@
    @*<script src="~/js/devextreme/cldr/unresolved.js"></script>*@
    @*<script src="~/js/devextreme/globalize.js"></script>*@
    @*<script src="~/js/devextreme/globalize/message.js"></script>*@
    @*<script src="~/js/devextreme/globalize/number.js"></script>*@
    @*<script src="~/js/devextreme/globalize/currency.js"></script>*@
    @*<script src="~/js/devextreme/globalize/date.js"></script>*@

    @* Uncomment to enable client-side export *@
    <script src="~/js/devextreme/dx.all.js"></script>

    @* Uncomment to provide geo-data for the VectorMap control *@
    @*<script src="~/js/devextreme/vectormap-data/world.js"></script>*@

    <script src="~/js/devextreme/aspnet/dx.aspnet.mvc.js"></script>
    <script src="~/js/devextreme/aspnet/dx.aspnet.data.js"></script>

    <script src="~/node_modules/devextreme/dist/js/dx.aspnet.mvc.js"></script>
</head>
<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        @(Html.DevExtreme().Toolbar()
    .ID("layout-toolbar")
    .Items(items =>{
        items.Add().Widget(w => w.Button()
            .Icon("menu")
            .OnClick("button_clickHandler")
        ).Location(ToolbarItemLocation.Before);
    })
    .Width(37)
)

        <div class="container">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="MainMagasinManager">DevKbfSteel</a>
            <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                <partial name="_LoginPartial.cshtml" />
            </div>
        </div>
    </nav>
</header>
<body style="height:100%">

    @(Html.DevExtreme().Drawer()
    .ID("layout-drawer")
    .MinSize(37)
    .RevealMode(DrawerRevealMode.Expand)
    .Opened(true)
    .CloseOnOutsideClick(false)

    .Template(@<text>
        @(Html.DevExtreme().List()
        .Width(300)
        .OnInitialized("list_onInitialized")
        .Items(items => {
            items.Add().Text("Stock Initial").Icon("message").Option("path", "MagasinManager/MagasinManager/StockInitial");
            items.Add().Text("Entrées").Icon("message").Option("path", "MagasinManager/MagasinManager/Entree");
            items.Add().Text("Sorties").Icon("message").Option("path", "MagasinManager/MagasinManager/Sorties");
            items.Add().Text("Demandes Fournitures").Icon("message").Option("path", "MagasinManager/MagasinManager/DemandesFourniture");
            items.Add().Text("Demandes Achats").Icon("message").Option("path", "MagasinManager/MagasinManager/DemandesAchats");
            items.Add().Text("Bon d'affectations").Icon("message").Option("path", "MagasinManager/MagasinManager/BonAffectations");
            items.Add().Text("Suivi Billettes").Icon("message").Option("path", "MagasinManager/MagasinManager/SuiviBillettes");
            items.Add().Text("Décharges").Icon("message").Option("path", "MagasinManager/MagasinManager/Decharges");
            items.Add().Text("Bons de réintegrations").Icon("message").Option("path", "MagasinManager/MagasinManager/BonReintegration");
            items.Add().Text("Bons de retour").Icon("message").Option("path", "MagasinManager/MagasinManager/BonRetour");
            items.Add().Text("Fournisseurs").Icon("message").Option("path", "MagasinManager/MagasinManager/Fournisseurs");
            items.Add().Text("Movements").Icon("message").Option("path", "MagasinManager/MagasinManager/Movements");
            items.Add().Text("Liste Articles").Icon("message").Option("path", "MagasinManager/MagasinManager/ListeArticles");
            items.Add().Text("Liste Pdr").Icon("message").Option("path", "MagasinManager/MagasinManager/ListePDR");
            items.Add().Text("Liste Outillage").Icon("message").Option("path", "MagasinManager/MagasinManager/Outillage");
            items.Add().Text("Transferts").Icon("message").Option("path", "MagasinManager/MagasinManager/Transferts");
            items.Add().Text("Lieux Stockage").Icon("message").Option("path", "MagasinManager/MagasinManager/Lieux");
            items.Add().Text("Inventaire").Icon("message").Option("path", "MagasinManager/MagasinManager/Inventaire");
            items.Add().Text("Personnels").Icon("message").Option("path", "MagasinManager/MagasinManager/Personnels");
            items.Add().Text("Configuration").Icon("message").Option("path", "MagasinManager/MagasinManager/Configuration");
        })
        .CollapsibleGroups(true)
        .KeyExpr("path")
        .SelectionMode(ListSelectionMode.Single)
        .OnSelectionChanged("list_onSelectionChanged")
        )
    </text>)
    .Content(@<text>@RenderBody()</text>)
)
    @(Html.DevExtreme().SpeedDialAction()
    .ID("SmartAssist")
    .Icon("fas fa-robot")
    .Hint("Smart Assist")
    .Index(1)
    .OnClick(@<text>
    function showPopUpSmartAssist() {
        var popup = $("#SmartAssist-popup").dxPopup("instance");
        popup.option("contentTemplate", $("#SmartAssist-template"));
        popup.show();
    }
    </text>))
    @(Html.DevExtreme().Popup()
        .ID("SmartAssist-popup")
        .ShowTitle(true)
        .Title("Vos Tâches")
        .Visible(false)
        .DragEnabled(false)
        .CloseOnOutsideClick(true)
        .Width(600)
        .Height(400)
        .Position(pos => pos
            .My(HorizontalAlignment.Right, VerticalAlignment.Bottom)
            .At(HorizontalAlignment.Right, VerticalAlignment.Bottom)
            .Of("#app-container")
        )
    )
    @using (Html.DevExtreme().NamedTemplate("SmartAssist-template"))
    {
        @(Html.DevExtreme().List()
    .Height("100%")
    .DataSource(d => d.Mvc()
    .Controller("SmartAssistCtrl")
    .LoadAction("GetMagasinManager")
    .Key("Id")
    .LoadMode(DataSourceLoadMode.Raw))
    .GroupTemplate(@<text>
        <div><%- Area %></div>
    </text>)

    .OnItemClick(@<text>
    function NivagateToPath(e) {
    document.location.pathname = e.itemData.Path;
    }
    </text>)
    .NoDataText("Aucune Tâche à signaler")
    .ItemTemplate(@<text>
        <div style="white-space: normal"><%- Action %></div>
    </text>)
    .PullRefreshEnabled(true)
    )
    }
</body>
</html>
<script type="text/javascript">
    function button_clickHandler(e) {
        var drawer = $("#layout-drawer").dxDrawer("instance");
        drawer.toggle();
        sessionStorage.setItem("isDrawerOpen", JSON.stringify(drawer.option("opened")));
    }
    function list_onSelectionChanged(e) {
        document.location.pathname = e.addedItems[0].path;
        $("#layout-drawer").dxDrawer("hide");

    }
    function list_onInitialized(e) {
        const t = "@Url.Action()";
        e.component.option("selectedItemKeys", ["@Url.Action()"])
        var x = document.getElementsByClassName("dx-item dx-list-item");
        setTimeout(() => {
            var el = x.item(@XpertHelper.NavigationDrawerKeyMagasin);
            el.style.backgroundColor = "#8299ba";
        }, 0);
    }

</script>